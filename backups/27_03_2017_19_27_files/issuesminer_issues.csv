1,1,508115,21,Add time to category:move transactions,gavinandresen,closed,Bug,"Simple oversight.
",https://api.github.com/repos/bitcoin/bitcoin/issues/21,https://github.com/bitcoin/bitcoin/pull/21,https://api.github.com/repos/bitcoin/bitcoin/pulls/21,2011-01-05T14:54:04Z,2014-09-11T05:04:53Z,2011-01-06T21:59:02Z,50615,2017-03-24 23:24:54,2017-03-25 01:07:24
2,1,517989,27,listaccounts with minconf param was broken!,gavinandresen,closed,Bug,"Dumb bug:  listaccounts N ignores the N.

My only excuse is that this is a hard feature to test, because transactions confirmations just keep happening, at unpredictable times...
",https://api.github.com/repos/bitcoin/bitcoin/issues/27,https://github.com/bitcoin/bitcoin/pull/27,https://api.github.com/repos/bitcoin/bitcoin/pulls/27,2011-01-10T18:58:12Z,2014-09-11T05:04:53Z,2011-01-18T19:36:06Z,52977,2017-03-24 23:24:54,2017-03-25 01:07:24
3,1,937379,253,Remove send to IP address and IP transactions support,laanwj,closed,Bug,"Remove send to IP transaction support, as it is insecure and would confuse users when used. 

An IP is a terrible identifier as it does not identify a person or organization. Furthermore, man-in-the-middle attacks are trivial as the internet has no ""proof that you have ip XXX"" API. In the future address shortening services based on ""user@domain"" would be useful, but these will likely be based on third party APIs and not on this code.
- Removes logic to accept transfers by IP
- Removes UI logic to send transfers by IP (CSendingDialog). Entering an IP in the send box will always result in an error.

Discussion on forum: https://forum.bitcoin.org/index.php?topic=9334.0
",https://api.github.com/repos/bitcoin/bitcoin/issues/253,https://github.com/bitcoin/bitcoin/pull/253,https://api.github.com/repos/bitcoin/bitcoin/pulls/253,2011-05-22T08:58:41Z,2014-06-12T10:23:09Z,2011-09-18T10:48:30Z,155301,2017-03-24 23:24:54,2017-03-25 01:07:25
4,1,953908,264,Fix for small change outputs,sipa,closed,Bug,"With the separation of CENT and MIN_TX_FEE, it is now reasonable
to create change outputs between 0.01 and 0.0005, as these are
spendable according to the policy, even though they require a fee
to be paid.

Also, when enough fee was already present, everything can go into
a change output, without further increasing the fee.
",https://api.github.com/repos/bitcoin/bitcoin/issues/264,https://github.com/bitcoin/bitcoin/pull/264,https://api.github.com/repos/bitcoin/bitcoin/pulls/264,2011-05-25T16:42:50Z,2014-07-15T07:35:06Z,2011-06-05T14:32:58Z,159482,2017-03-24 23:24:54,2017-03-25 01:07:26
5,1,1006610,300,non-blocking connect (by phantomcircuit),sipa,closed,Bug,"Use non-blocking connects, and a select() call to wait a predefined
time (5s by default, but configurable with -timeout) for either
success or failure. This allows much more connections to be tried
per time unit.

Based on a patch by phantomcircuit.
",https://api.github.com/repos/bitcoin/bitcoin/issues/300,https://github.com/bitcoin/bitcoin/pull/300,https://api.github.com/repos/bitcoin/bitcoin/pulls/300,2011-06-05T22:17:59Z,2014-07-07T20:31:39Z,2011-06-11T23:17:14Z,171875,2017-03-24 23:24:54,2017-03-25 01:07:26
6,1,1012026,304,Fix CPU Usage bug when using -nolisten and have no connections.,TheBlueMatt,closed,Bug,"1/2 known Windows CPU Usage bugs fixed
",https://api.github.com/repos/bitcoin/bitcoin/issues/304,https://github.com/bitcoin/bitcoin/pull/304,https://api.github.com/repos/bitcoin/bitcoin/pulls/304,2011-06-06T23:01:35Z,2014-07-15T07:29:00Z,2011-06-10T05:42:30Z,173108,2017-03-24 23:24:54,2017-03-25 01:07:27
7,1,1117618,350,CWallet: fix mapAddress book update,laanwj,closed,Bug,"Fix update of internal data structure (mapAddressBook) after changes to the address book, and add convenience methods EraseAddressBookName, GetDefaultAddress, SetDefaultAddress to be used from UI.

The problem was introduced in the new CWallet class; mapAddress book used to be updated in db.cpp. It now makes more sense to do the update directly in CWallet.
",https://api.github.com/repos/bitcoin/bitcoin/issues/350,https://github.com/bitcoin/bitcoin/pull/350,https://api.github.com/repos/bitcoin/bitcoin/pulls/350,2011-06-26T17:30:01Z,2014-07-13T05:59:44Z,2011-10-05T15:43:46Z,198287,2017-03-24 23:24:54,2017-03-25 01:07:28
8,1,1125209,358,Address Book related Fixes,sgimenez,closed,Bug,"This is a rebased series of patches from pull request #335

1) Fix the synchronization of sending addresses between a CWallet and its associated CWalletDB (this was reported independently in Issue #350).

2) Add a check for validity of sending addresses (Issue #328).

3) Avoid propagation of unnecessary updates to CWalletDB.

4) Fix the behavior of setaccount on sending addresses that are already listed in the Address Book. (Issue #329).

5) Add wallet methods GetDefaultAddress and SetDefaultAddress (contributed by laanwj in Issue #350).
",https://api.github.com/repos/bitcoin/bitcoin/issues/358,https://github.com/bitcoin/bitcoin/pull/358,https://api.github.com/repos/bitcoin/bitcoin/pulls/358,2011-06-27T21:46:04Z,2014-07-13T05:23:55Z,2012-01-13T14:26:40Z,199827,2017-03-24 23:24:54,2017-03-25 01:07:28
9,1,1171964,385,resource leak fix,somebadger,closed,Bug,"Fixed 2 Resource Leaks

http://forum.bitcoin.org/index.php?topic=22585.msg330333#msg330333
",https://api.github.com/repos/bitcoin/bitcoin/issues/385,https://github.com/bitcoin/bitcoin/pull/385,https://api.github.com/repos/bitcoin/bitcoin/pulls/385,2011-07-06T05:02:11Z,2014-06-15T12:23:48Z,2011-09-19T11:05:04Z,210727,2017-03-24 23:24:54,2017-03-25 01:07:29
10,1,1572677,491,Optimize database writes for transactions with lots of TxIns.,gavinandresen,closed,Bug,"Patch from ArtForz, who discovered the problem.

The problem was chaining large transactions (transactions with lots of ins and outs) would make the berkeley db transaction log get very big, as the dependencies (TxIns) of a transaction might be re-written multiple times.

With this fix, each each transaction referred to by TxIns is written once.
",https://api.github.com/repos/bitcoin/bitcoin/issues/491,https://github.com/bitcoin/bitcoin/pull/491,https://api.github.com/repos/bitcoin/bitcoin/pulls/491,2011-09-05T18:48:30Z,2014-06-13T22:44:29Z,2011-09-06T17:47:28Z,310115,2017-03-24 23:24:54,2017-03-25 01:07:30
11,1,1835664,573,Bugfix: getmemorypool "bits" should be a hex-string,luke-jr,closed,Bug,"Bugfix: ""bits"" should be a hex-string, not a number (that just doesn't make sense)

(suggest waiting for ACK from original getmemorypool author)
",https://api.github.com/repos/bitcoin/bitcoin/issues/573,https://github.com/bitcoin/bitcoin/pull/573,https://api.github.com/repos/bitcoin/bitcoin/pulls/573,2011-10-06T16:48:52Z,2014-07-15T05:39:53Z,2011-10-09T17:32:22Z,382813,2017-03-24 23:24:54,2017-03-25 01:07:30
12,1,1924041,586,Added a workaround for an Ubuntu bug which causes -fstack-protector-all t,cjdelisle,closed,Bug,"Added a workaround for an Ubuntu bug which causes -fstack-protector-all to be disregarded.
this causes some functions not to be protected and leads to a warning:
""warning: not protecting function: no buffer at least 8 bytes long""
The bug which this is working around: https://bugs.launchpad.net/ubuntu/+source/gcc-4.5/+bug/691722
",https://api.github.com/repos/bitcoin/bitcoin/issues/586,https://github.com/bitcoin/bitcoin/pull/586,https://api.github.com/repos/bitcoin/bitcoin/pulls/586,2011-10-17T00:33:16Z,2014-07-15T05:25:36Z,2011-10-24T18:29:32Z,406856,2017-03-24 23:24:54,2017-03-25 01:07:31
13,1,2217039,633,RPC: do not launch Shutdown in a new thread in case we are running the UI,laanwj,closed,Bug,"This leads to the bitcoin core being shut down while the UI is accessing it, and generally results in a segmentation fault or crash. In case it is desirable to make it possible to shutdown the GUI from its RPC server, we'll need to implement a signal for it. For the mean time, this is a safe stopgap.

Reproducing the bug:

```
bitcoin-qt -testnet -server -datadir=&lt;new directory>
```

Output:

```
Warning: To use the ""-server"" option, you must set rpcpassword=<password>
in the configuration file: /tmp/test/testnet/bitcoin.conf
If the file does not exist, create it with owner-readable-only file permissions.
Segmentation fault
```

Also changes the Warning to an Error (as it is kind of fatal, terminating the rpc thread).
",https://api.github.com/repos/bitcoin/bitcoin/issues/633,https://github.com/bitcoin/bitcoin/pull/633,https://api.github.com/repos/bitcoin/bitcoin/pulls/633,2011-11-12T13:07:39Z,2014-07-13T06:19:00Z,2011-11-14T14:56:57Z,488702,2017-03-24 23:25:03,2017-03-25 01:07:31
14,1,4113498,1094,Locking fix for AlreadyHave(),jgarzik,closed,Bug,"Access to mapTransactions[] must be guarded by cs_mapTransactions lock.

Also, reformat long lines to make the switch statement more readable.
",https://api.github.com/repos/bitcoin/bitcoin/issues/1094,https://github.com/bitcoin/bitcoin/pull/1094,https://api.github.com/repos/bitcoin/bitcoin/pulls/1094,2012-04-13T22:26:50Z,2014-08-24T04:18:35Z,2012-04-17T16:23:50Z,1163228,2017-03-24 23:25:03,2017-03-25 01:07:32
15,1,4126177,1106,Fix many sign-comparison warnings found in bitcoin codebase,jgarzik,closed,Bug,"Sign comparison warnings are the largest class of warnings remaining.  These commits fix many of the warnings -- which were indeed valid.

The commits were broken up to make reviewing easier.
",https://api.github.com/repos/bitcoin/bitcoin/issues/1106,https://github.com/bitcoin/bitcoin/pull/1106,https://api.github.com/repos/bitcoin/bitcoin/pulls/1106,2012-04-15T21:01:59Z,2014-07-13T02:40:07Z,2012-04-17T17:55:56Z,1167478,2017-03-24 23:25:03,2017-03-25 01:07:33
16,1,5367704,1542,new splash screen image (fix for #1064),Diapolo,closed,Bug,"I consider this a proposal to fix #1064 to not have the bad resize quality, when resizing the current splash screen image. I know we want to get rid of the splash screen in the future, but perhaps this is worth a quick discussion.

I was not too sure about the license stuff, so perhaps you guys can help me out there :).
",https://api.github.com/repos/bitcoin/bitcoin/issues/1542,https://github.com/bitcoin/bitcoin/pull/1542,https://api.github.com/repos/bitcoin/bitcoin/pulls/1542,2012-06-30T14:06:23Z,2014-07-12T23:12:17Z,2012-07-08T10:16:24Z,1689716,2017-03-24 23:25:03,2017-03-25 01:07:33
17,1,5368528,1543,Increase the size of adressbookpage.ui in order to fix issue #1062,cardpuncher,closed,Bug,"The buttons at the bottom of the window are too small for the text they contain if the French locale is used, as discussed on issue #1062. This resizing seems to fix the problem, a screenshot showing the result follows:

![Desktop screenshot with the main and re-sized windows](http://ompldr.org/vZWtldQ/desktop_with_bitcoin.gif)
",https://api.github.com/repos/bitcoin/bitcoin/issues/1543,https://github.com/bitcoin/bitcoin/pull/1543,https://api.github.com/repos/bitcoin/bitcoin/pulls/1543,2012-06-30T16:31:40Z,2014-06-14T06:39:26Z,2012-07-19T11:36:57Z,1689963,2017-03-24 23:25:03,2017-03-25 01:07:34
18,1,13900381,2608,clear path cache after getting a proper config file (fixes #2605),jonasschnelli,closed,Bug,"should fix #2605, retest please.
",https://api.github.com/repos/bitcoin/bitcoin/issues/2608,https://github.com/bitcoin/bitcoin/pull/2608,https://api.github.com/repos/bitcoin/bitcoin/pulls/2608,2013-05-02T16:58:50Z,2014-07-12T15:53:33Z,2013-05-03T11:52:04Z,5497577,2017-03-24 23:28:02,2017-03-25 01:07:35
19,1,33436630,4184,Fix incorrect checkpoint data for testnet3,dajohi,closed,Bug,,https://api.github.com/repos/bitcoin/bitcoin/issues/4184,https://github.com/bitcoin/bitcoin/pull/4184,https://api.github.com/repos/bitcoin/bitcoin/pulls/4184,2014-05-13T20:40:38Z,2014-06-13T05:57:32Z,2014-05-28T08:12:06Z,15845924,2017-03-24 23:29:14,2017-03-25 01:07:35
20,1,36934295,4450,Check signatures before double-spend relay,dgenr8,closed,Bug,"After it passes anti-DoS checks, mark a respend as relayable, but do not actually relay it until after the inputs are completely checked (for valid signatures especially).

This fixes a problem with #3883.
",https://api.github.com/repos/bitcoin/bitcoin/issues/4450,https://github.com/bitcoin/bitcoin/pull/4450,https://api.github.com/repos/bitcoin/bitcoin/pulls/4450,2014-07-01T21:42:47Z,2014-07-15T23:20:12Z,2014-07-04T03:51:03Z,17856736,2017-03-24 23:29:14,2017-03-25 01:07:36
21,1,38898482,4598,Fix feeestimate,morcos,closed,Bug,"-Fix bug where we were checking index value against the wrong vector size. This could cause the wrong value to be returned or to return an out of bounds value.
-Move the clearing of the sorted sample vectors to before the debug logging. The debug logging will now give the right answer
",https://api.github.com/repos/bitcoin/bitcoin/issues/4598,https://github.com/bitcoin/bitcoin/pull/4598,https://api.github.com/repos/bitcoin/bitcoin/pulls/4598,2014-07-28T14:59:13Z,2014-11-12T22:08:24Z,2014-08-04T14:45:32Z,18972095,2017-03-24 23:29:14,2017-03-25 01:07:37
22,1,39000260,4602,script.h: set_vch() should shift a >32 bit value,jgarzik,closed,Bug,"Source: http://www.viva64.com/en/b/0268/
",https://api.github.com/repos/bitcoin/bitcoin/issues/4602,https://github.com/bitcoin/bitcoin/pull/4602,https://api.github.com/repos/bitcoin/bitcoin/pulls/4602,2014-07-29T15:25:47Z,2014-08-24T04:22:01Z,2014-08-03T15:09:29Z,19033726,2017-03-24 23:29:14,2017-03-25 01:07:38
23,1,39510152,4635,CCoinsKeyHasher::operator() should return size_t,laanwj,closed,Bug,"It currently returns uint64_t, which on older boost (at least 1.46) causes failures on 32-bit systems. This problem was introduced in bc42503.

Fixes #4634.
",https://api.github.com/repos/bitcoin/bitcoin/issues/4635,https://github.com/bitcoin/bitcoin/pull/4635,https://api.github.com/repos/bitcoin/bitcoin/pulls/4635,2014-08-05T11:36:12Z,2014-08-08T09:28:31Z,2014-08-08T09:28:31Z,19336564,2017-03-24 23:29:14,2017-03-25 01:07:38
24,1,40027308,4682,"Don't poll showmyip.com, it doesn't exist anymore",laanwj,closed,Bug,"This was bound to happen someday. That leaves us with only one candidate, checkip.dyndns.org.
GetMyExternalIP should be phased out as soon as possible (resurrect #3461 / #3088).

This should also go into 0.9.3.
",https://api.github.com/repos/bitcoin/bitcoin/issues/4682,https://github.com/bitcoin/bitcoin/pull/4682,https://api.github.com/repos/bitcoin/bitcoin/pulls/4682,2014-08-12T06:11:55Z,2014-08-13T10:01:16Z,2014-08-13T10:01:16Z,19644208,2017-03-24 23:29:14,2017-03-25 01:07:39
25,1,40617076,4730,"UniValue: fix major bug, add unit tests",jgarzik,closed,Bug,"All numbers were broken, due to lack of an underscore.  No wonder my all-tree conversion to UniValue was failing its tests.
",https://api.github.com/repos/bitcoin/bitcoin/issues/4730,https://github.com/bitcoin/bitcoin/pull/4730,https://api.github.com/repos/bitcoin/bitcoin/pulls/4730,2014-08-19T17:44:00Z,2014-08-24T04:21:36Z,2014-08-21T02:48:09Z,19996590,2017-03-24 23:29:14,2017-03-25 01:07:40
26,1,43126329,4942,Write fee estimate and peers files only when initialized,laanwj,closed,Bug,"Fixes #4669 (see discussion there).

Also move the loading of addresses to StartNode() to make it more self-contained.
",https://api.github.com/repos/bitcoin/bitcoin/issues/4942,https://github.com/bitcoin/bitcoin/pull/4942,https://api.github.com/repos/bitcoin/bitcoin/pulls/4942,2014-09-18T12:21:59Z,2014-10-14T09:35:32Z,2014-10-14T09:35:32Z,21429414,2017-03-24 23:29:14,2017-03-25 01:07:40
27,1,46985387,5154,Check pindexBestForkBase for null,21E14,closed,Bug,"This addresses an edge case where pindexBestForkBase is not previously set. Longer term, the logic further upstream in ActivateBestChainStep needs to be reworked.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5154,https://github.com/bitcoin/bitcoin/pull/5154,https://api.github.com/repos/bitcoin/bitcoin/pulls/5154,2014-10-28T03:17:35Z,2014-11-24T14:30:04Z,2014-11-24T14:30:04Z,23432146,2017-03-24 23:29:14,2017-03-25 01:07:41
28,1,47048901,5157,Introduce preferred download peers,sipa,closed,Bug,"Keep track of whether we have peers that are preferred candidates for downloading blocks from, but if there are none, also use others.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5157,https://github.com/bitcoin/bitcoin/pull/5157,https://api.github.com/repos/bitcoin/bitcoin/pulls/5157,2014-10-28T16:34:40Z,2014-11-03T15:40:37Z,2014-11-03T15:40:37Z,23470165,2017-03-24 23:29:14,2017-03-25 01:07:42
29,1,47065931,5158,Fix IsInitialBlockDownload which was broken by headers first.,rdponticelli,closed,Bug,,https://api.github.com/repos/bitcoin/bitcoin/issues/5158,https://github.com/bitcoin/bitcoin/pull/5158,https://api.github.com/repos/bitcoin/bitcoin/pulls/5158,2014-10-28T18:50:26Z,2014-11-26T14:09:23Z,2014-11-26T14:09:23Z,23480819,2017-03-24 23:29:14,2017-03-25 01:07:42
30,1,47226160,5173,Fix -loadblock after partial IBD and init after kill -9,TheBlueMatt,closed,Bug,"You can currently kill -9 during IBD and will not be able to restart.
Also, if you let IBD start and then try to -loadblock afterwards it will not connect any of the blocks.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5173,https://github.com/bitcoin/bitcoin/pull/5173,https://api.github.com/repos/bitcoin/bitcoin/pulls/5173,2014-10-30T02:13:26Z,2014-11-05T10:20:05Z,2014-11-05T08:40:24Z,23578750,2017-03-24 23:29:14,2017-03-25 01:08:53
31,1,47518378,5194,Reset setBlockIndexCandidates once block index db loaded,21E14,closed,Bug,"Delete all entries in setBlockIndexCandidates that are worse than our new current block upon completion of the initial LoadBlockIndexDB.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5194,https://github.com/bitcoin/bitcoin/pull/5194,https://api.github.com/repos/bitcoin/bitcoin/pulls/5194,2014-11-01T21:53:34Z,2014-11-26T12:23:55Z,2014-11-26T12:23:55Z,23724775,2017-03-24 23:29:14,2017-03-25 01:08:54
32,1,48158884,5243,Sleep-wait on genesis block during init with -reindex,TheBlueMatt,closed,Bug,"This is an alternative to #5078...instead of throwing when chainActive.Tip() is missing (breaking what has otherwise traditionally been a global assumption) we just wait until at least genesis has been imported (its always first).
",https://api.github.com/repos/bitcoin/bitcoin/issues/5243,https://github.com/bitcoin/bitcoin/pull/5243,https://api.github.com/repos/bitcoin/bitcoin/pulls/5243,2014-11-08T07:28:19Z,2015-01-26T11:33:15Z,2015-01-26T11:29:24Z,24098427,2017-03-24 23:29:14,2017-03-25 01:08:55
33,1,48573296,5267,Fix coinbase-spend mempool inconsistency after reorgs,TheBlueMatt,closed,Bug,"We were previously not removing transactions from mempool during reorg if they spent a coinbase. While this broke the mempool-invariant of safe-to-put-in-next-block it doesnt matter as mining code double-checks anyway (unless you're running with -debug or -regtest during a 100-block reorg, then you will assert-crash). This takes the expensive solution of checking transactions for this case during a reorg-off (these transactions will not be resurrected after the reorg completes, as they should, however), though alternatively we could redefine the mempool invariant to safe-to-put-in-next-block-but-may-include-immature-coinbase-spends (but only do so /during/ a reorg, not before or after, unless someone added an rpc or otherwise forced a reorg to a block, which we should probably add at some point anyway or so, see my mempoolfix2 branch for a maybe-ok proposal to implement that one instead).

Also includes a new block-tester which will crash master (because -regtest implies CTxMemPool::check, as does -debug).
",https://api.github.com/repos/bitcoin/bitcoin/issues/5267,https://github.com/bitcoin/bitcoin/pull/5267,https://api.github.com/repos/bitcoin/bitcoin/pulls/5267,2014-11-12T22:43:11Z,2014-12-12T00:10:04Z,2014-12-11T14:24:12Z,24331584,2017-03-24 23:29:14,2017-03-25 01:08:55
34,1,48610991,5270,Check block header when accepting headers from peers.,domob1812,closed,Bug,"Actually check block headers received from peers.  If a peer sends headers with invalid PoW, they were accepted and added to the disk block index previously.  This would then lead to a failure in checking the PoW
during the next startup while loading the block index.

This is a better version of https://github.com/bitcoin/bitcoin/pull/5269.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5270,https://github.com/bitcoin/bitcoin/pull/5270,https://api.github.com/repos/bitcoin/bitcoin/pulls/5270,2014-11-13T08:46:14Z,2014-11-20T15:10:28Z,2014-11-20T14:42:14Z,24353341,2017-03-24 23:29:14,2017-03-25 01:08:56
35,1,50229527,5382,Make -printblocktree compatible with headers first,sipa,closed,Bug,"Alternative: delete -printblocktree. I didn't even know it still existed.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5382,https://github.com/bitcoin/bitcoin/pull/5382,https://api.github.com/repos/bitcoin/bitcoin/pulls/5382,2014-11-26T21:34:46Z,2014-11-27T10:20:03Z,2014-11-27T10:20:03Z,25115375,2017-03-24 23:29:14,2017-03-25 01:08:57
36,1,51697149,5461,signrawtransaction: validate private key.,paveljanik,closed,Bug,"Fix issue #5454. Validate private key is inside allowed range.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5461,https://github.com/bitcoin/bitcoin/pull/5461,https://api.github.com/repos/bitcoin/bitcoin/pulls/5461,2014-12-11T15:09:02Z,2014-12-13T21:27:03Z,2014-12-12T10:52:19Z,25906045,2017-03-24 23:30:27,2017-03-25 01:08:58
37,1,53070455,5565,rpcserver: attempt to fix uncaught exception.,theuni,closed,Bug,"Addresses #5560.

`asio::ip::address::to_string()` can throw in some cases, which I believe winxp may be hitting.

I've simulated the case locally by adding:

```
            if (bindAddress.is_v6())
            {
                boost::system::error_code ec(boost::asio::error::invalid_argument);
                boost::asio::detail::throw_error(ec);
            }
```

after the to_string() in order to force the error.

Without the change, bitcoind dies with:

```
EXCEPTION: N5boost16exception_detail10clone_implINS0_19error_info_injectorINS_6system12system_errorEEEEE       
Invalid argument       
bitcoin in AppInit()
```

With the change, it continues and logs:

```
ERROR: Binding RPC on address ::1 port 36522 failed: Invalid argument
```

Even if this doesn't fix the crash as intended, I believe it's safe and more correct anyway.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5565,https://github.com/bitcoin/bitcoin/pull/5565,https://api.github.com/repos/bitcoin/bitcoin/pulls/5565,2014-12-29T20:47:31Z,2014-12-30T16:36:44Z,2014-12-30T16:36:44Z,26660931,2017-03-24 23:30:27,2017-03-25 01:08:58
38,1,53751229,5619,Catch UTXO set read errors and shutdown,sipa,closed,Bug,"This is a minimally invasive patch to shutdown on LevelDB read errors from the chainstate. The block index does not need similar protection, as it's only read at startup.

Should apply cleanly to 0.10 as well.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5619,https://github.com/bitcoin/bitcoin/pull/5619,https://api.github.com/repos/bitcoin/bitcoin/pulls/5619,2015-01-08T13:40:22Z,2015-01-12T16:14:19Z,2015-01-12T10:26:51Z,27028600,2017-03-24 23:30:27,2017-03-25 01:08:59
39,1,53751814,5620,[Qt] Payment request expiration bug fix (re-done),Diapolo,closed,Bug,"- this is based on #4122 (which can be closed)

Currently a payment request is only checked for expiration upon receipt.
It should be checked again immediately before sending coins to prevent
the user from paying to an expired invoice which would then require a
customer service interaction.
- add static verifyExpired() function to PaymentServer to be able to use
  the same validation code in GUI and unit-testing code
- extend unit tests to use that function and also add an unit test which
  overflows, because payment requests allow expires as uint64, whereas we
  use int64_t for verification of expired payment requests
",https://api.github.com/repos/bitcoin/bitcoin/issues/5620,https://github.com/bitcoin/bitcoin/pull/5620,https://api.github.com/repos/bitcoin/bitcoin/pulls/5620,2015-01-08T13:47:02Z,2015-01-30T15:55:14Z,2015-01-29T11:48:40Z,27028960,2017-03-24 23:30:27,2017-03-25 01:09:00
40,1,53765205,5621,Assert inside leveldbwrapper to avoid continuing after failure.,gmaxwell,closed,Bug,"Database failure due to faulty hardware could leave users on a fork where
 they are vulnerable to opportunistic attack because they are rejecting
 the longest chain.

If there is a software fault in the OS or LevelDB that causes many nodes
 to experience database failure at once its also important for overall
 consensus stability that the failing nodes shut down and not continue
 operating.

In theory, the exceptions in leveldbwrapper should cause shutdowns but
 in practice the software calls into that database from many places, some
 of which throw away all exceptions.

A more organized approach to errors should be used in the long-term,
 but this works for the moment.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5621,https://github.com/bitcoin/bitcoin/pull/5621,https://api.github.com/repos/bitcoin/bitcoin/pulls/5621,2015-01-08T15:52:35Z,2015-01-12T16:14:53Z,2015-01-12T16:14:53Z,27037219,2017-03-24 23:30:27,2017-03-25 01:09:00
41,1,55413682,5706,fix crash: RPC "createmultisig" and "addmultisigaddress",fsb4000,closed,Bug,"Bug description:
1) Open Bitcoin-Qt(or bitcoind)
2) Open ""Debug window""
3) Enter 

```
createmultisig 17 '[""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014""]'
```

or

```
addmultisigaddress 17 '[""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014"",""0227d09df34a6eca0e2009663d2f0c6edc97314f78f308f53b7c8ffa7c552c1014""]' ""bug""
```

4) Result
![createmultisig](http://i62.tinypic.com/3312bup.jpg)
or
![addmultisigaddress](http://i61.tinypic.com/iojhq0.jpg)

About the fix:
1) function **_createmultisig_redeemScriptCScript** has line (file src/rpcmisc.cpp)

``` c
result = GetScriptForMultisig(nRequired, pubkeys);
```

2) function **GetScriptForMultisig** has lines (file src/script/standard.cpp)

``` c
script << CScript::EncodeOP_N(nRequired);
```

and

``` c
script << CScript::EncodeOP_N(keys.size()) << OP_CHECKMULTISIG;
```

3) function **EncodeOP_N** has the assert(file src/script/script.h)

``` c
assert(n >= 0 && n <= 16);
```

4) We don't need check **nRequired** because it checks here:

``` c
if ((int)keys.size() < nRequired)
        throw runtime_error(
            strprintf(""not enough keys supplied ""
                      ""(got %"" PRIszu "" keys, but need at least %d to redeem)"", keys.size(), nRequired));
```

5) English is not my native, so ,maybe, error message should be improved...

similar to https://github.com/novacoin-project/novacoin/pull/125
",https://api.github.com/repos/bitcoin/bitcoin/issues/5706,https://github.com/bitcoin/bitcoin/pull/5706,https://api.github.com/repos/bitcoin/bitcoin/pulls/5706,2015-01-25T12:31:27Z,2015-03-11T13:34:13Z,2015-02-20T08:51:53Z,27991442,2017-03-24 23:30:27,2017-03-25 01:09:01
42,1,55581763,5717,Avoid reference trap in SignatureChecker,laanwj,closed,Bug,"Fixes #5715. Keeping around references on a class is extremely dangerous, due to C++'s  behavior with regard to temporaries. This is a cruel trap for (unwary) programmers. I see two solutions:
- a) change the argument (and property on SignatureChecker) to a pointer instead of a reference, and manually manage lifetime
- b) make a copy

(b) is a one-line change without changes to the interface, so at least for 0.10 has my preference. 

There could be performance impact, but to avoid premature optimization, I'd I'd like to see concrete numbers to warrant a more impactful, error-prone solution.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5717,https://github.com/bitcoin/bitcoin/pull/5717,https://api.github.com/repos/bitcoin/bitcoin/pulls/5717,2015-01-27T06:36:22Z,2015-01-27T14:15:41Z,2015-01-27T14:15:41Z,28086937,2017-03-24 23:30:27,2017-03-25 01:09:02
43,1,55621073,5719,Avoid references to temporary implicitly converted CMutableTransactions,sipa,closed,Bug,,https://api.github.com/repos/bitcoin/bitcoin/issues/5719,https://github.com/bitcoin/bitcoin/pull/5719,https://api.github.com/repos/bitcoin/bitcoin/pulls/5719,2015-01-27T14:02:39Z,2015-02-03T07:55:31Z,2015-02-03T07:26:21Z,28110479,2017-03-24 23:30:27,2017-03-25 01:09:03
44,1,55805810,5721,Acquire CCheckQueue's lock to avoid race condition,sdaftuar,closed,Bug,"This fixes a potential race condition in the CCheckQueueControl constructor,
which was looking directly at data in CCheckQueue without acquiring its lock.

Even though only one CCheckQueueControl exists at a time, one of the 
CCheckQueue threads may have completed work but not yet updated nIdle or
released its lock, so looking at that variable without acquiring the lock first is not 
safe.

Fixes #5703.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5721,https://github.com/bitcoin/bitcoin/pull/5721,https://api.github.com/repos/bitcoin/bitcoin/pulls/5721,2015-01-28T19:48:44Z,2015-02-06T15:51:52Z,2015-02-06T15:51:52Z,28223437,2017-03-24 23:30:27,2017-03-25 01:09:03
45,1,56945297,5770,Sanitize command strings before logging them.,gmaxwell,closed,Bug,"Normally bitcoin core does not display any network originated strings without
 sanitizing or hex encoding.  This wasn't done for strcommand in many places.

This could be used to play havoc with a terminal displaying the logs,
 especially with printtoconsole in use.

Thanks to Evil-Knievel for reporting this issue.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5770,https://github.com/bitcoin/bitcoin/pull/5770,https://api.github.com/repos/bitcoin/bitcoin/pulls/5770,2015-02-08T09:22:53Z,2015-02-09T09:44:10Z,2015-02-09T09:44:10Z,28877909,2017-03-24 23:30:27,2017-03-25 01:09:04
46,1,60092539,5859,Add correct bool combiner for net signals,sipa,closed,Bug,"Extracted from #5843.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5859,https://github.com/bitcoin/bitcoin/pull/5859,https://api.github.com/repos/bitcoin/bitcoin/pulls/5859,2015-03-06T11:49:40Z,2015-03-12T10:14:14Z,2015-03-12T10:14:14Z,30639158,2017-03-24 23:30:27,2017-03-25 01:09:05
47,1,60695573,5879,Fix InvalidateBlock,morcos,closed,Bug,"There was a bug in InvalidateBlock that prevented setBlockIndexCandidates from being properly repopulated. This would prevent you from necessarily ending up on the best chain after calling invalidateblock.  I also added an RPC test.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5879,https://github.com/bitcoin/bitcoin/pull/5879,https://api.github.com/repos/bitcoin/bitcoin/pulls/5879,2015-03-11T17:26:02Z,2015-03-12T16:54:24Z,2015-03-12T16:50:17Z,30965530,2017-03-24 23:30:27,2017-03-25 01:09:05
48,1,61144143,5890,Fix InvalidateBlock to add chainActive.Tip to setBlockIndexCandidates,morcos,closed,Bug,,https://api.github.com/repos/bitcoin/bitcoin/issues/5890,https://github.com/bitcoin/bitcoin/pull/5890,https://api.github.com/repos/bitcoin/bitcoin/pulls/5890,2015-03-13T17:17:04Z,2015-03-24T13:56:03Z,2015-03-24T13:51:04Z,31145575,2017-03-24 23:30:27,2017-03-25 01:09:06
49,1,64325316,5945,Keep mempool consistent during block-reorgs,gavinandresen,closed,Bug,"This fixes a subtle bug involving block re-orgs and non-standard transactions.

Start with a block containing a non-standard transaction, and
one or more transactions spending it in the memory pool.

Then re-org away from that block to another chain that does
not contain the non-standard transaction.

Result before this fix: the dependent transactions get stuck
in the mempool without their parent, putting the mempool
in an inconsistent state.

Tested with a new unit test.

Thanks to Alex Morcos for finding the bug.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5945,https://github.com/bitcoin/bitcoin/pull/5945,https://api.github.com/repos/bitcoin/bitcoin/pulls/5945,2015-03-25T17:22:03Z,2015-04-24T14:46:14Z,2015-04-06T07:48:27Z,31945138,2017-03-24 23:30:27,2017-03-25 01:09:07
50,1,67175715,5985,Fix removing of orphan transactions,morcos,closed,Bug,"The transaction thats being accepted can't be an orphan otherwise it would have previously been accepted, so doesn't need to be added to the erase queue.  We also don't want to erase orphans that still have missing inputs.
",https://api.github.com/repos/bitcoin/bitcoin/issues/5985,https://github.com/bitcoin/bitcoin/pull/5985,https://api.github.com/repos/bitcoin/bitcoin/pulls/5985,2015-04-08T17:10:43Z,2015-06-10T10:18:56Z,2015-06-10T10:15:28Z,32881407,2017-03-24 23:30:27,2017-03-25 01:09:07
51,1,71740943,6079,Avoid crash on start in TestBlockValidity with gen=1.,gmaxwell,closed,Bug,"When the internal miner is enabled at the start of a new node, there
 is an near instant assert in TestBlockValidity because its attempting
 to mine a block before the top checkpoint.

Also avoids a data race around vNodes.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6079,https://github.com/bitcoin/bitcoin/pull/6079,https://api.github.com/repos/bitcoin/bitcoin/pulls/6079,2015-04-29T00:05:48Z,2015-05-18T15:14:58Z,2015-05-12T08:58:39Z,34323758,2017-03-24 23:30:27,2017-03-25 01:09:08
52,1,72413159,6093,fix WIN32 boost::filesystem::path issues when using special chars for datadir path,jonasschnelli,closed,Bug,"fixes https://github.com/bitcoin/bitcoin/issues/6078
Meant for 0.11 branch.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6093,https://github.com/bitcoin/bitcoin/pull/6093,https://api.github.com/repos/bitcoin/bitcoin/pulls/6093,2015-05-01T11:32:45Z,2015-05-29T20:33:15Z,2015-05-10T12:23:05Z,34533047,2017-03-24 23:30:27,2017-03-25 01:09:08
53,1,75526140,6123,Avoid crash on start in TestBlockValidity with gen=1 (rework),laanwj,closed,Bug,"Replaces #6079.

When the internal miner is enabled at the start of a new node, there is an near instant assert in TestBlockValidity because its attempting to mine a block before the top checkpoint.

Also avoids a data race around vNodes.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6123,https://github.com/bitcoin/bitcoin/pull/6123,https://api.github.com/repos/bitcoin/bitcoin/pulls/6123,2015-05-12T08:57:45Z,2015-05-12T14:37:29Z,2015-05-12T14:37:29Z,35205459,2017-03-24 23:30:27,2017-03-25 01:09:09
54,1,76039079,6130,Do not inv old or missing blocks when pruning,sdaftuar,closed,Bug,"When responding to a getblocks message, only return inv's as
long as we HAVE_DATA for blocks in the chain, and only for blocks
that we are likely to not delete in the near future.

This fixes the issue mentioned here https://github.com/bitcoin/bitcoin/pull/6122#issuecomment-101392030.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6130,https://github.com/bitcoin/bitcoin/pull/6130,https://api.github.com/repos/bitcoin/bitcoin/pulls/6130,2015-05-13T16:13:03Z,2015-06-16T15:12:13Z,2015-06-16T15:12:13Z,35343797,2017-03-24 23:30:27,2017-03-25 01:09:10
55,1,77577627,6153,Parameter interaction: disable upnp if -proxy set,laanwj,closed,Bug,"To protect privacy, do not use UPNP when a proxy is set. The user may still specify `-listen=1` to listen locally (for a hidden service), so don't rely on this happening via the `-listen` case.

Fixes #2927.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6153,https://github.com/bitcoin/bitcoin/pull/6153,https://api.github.com/repos/bitcoin/bitcoin/pulls/6153,2015-05-18T09:23:59Z,2015-05-27T07:33:12Z,2015-05-27T07:33:12Z,35615596,2017-03-24 23:30:27,2017-03-25 01:09:11
56,1,78114064,6159,Catch errors on datadir lock and pidfile delete,ajweiss,closed,Bug,"Prevents bad permissions (or other fs related problems) from resulting in hard crashes with cryptic messages on startup and shutdown.

Fixes issues like: #6018 #4059 
",https://api.github.com/repos/bitcoin/bitcoin/issues/6159,https://github.com/bitcoin/bitcoin/pull/6159,https://api.github.com/repos/bitcoin/bitcoin/pulls/6159,2015-05-19T14:35:43Z,2015-05-24T08:57:37Z,2015-05-24T08:57:37Z,35736768,2017-03-24 23:30:27,2017-03-25 01:09:12
57,1,80400816,6183,Fix off-by-one error w/ nLockTime in the wallet,petertodd,closed,Bug,"Previously due to an off-by-one error the wallet ignored nLockTime-by-height transactions that would be valid in the next block even though they are accepted into the mempool. The transactions wouldn't show up until confirmed, nor would they be included in the unconfirmed balance. Similar to the mempool behavior fix in 665bdd3b, the wallet code was calling IsFinalTx() directly without taking into account the fact that doing so tells you if the transaction could have been mined in the _current_ block, rather than the next block.

Instead of changing the wallet code, this commit simply changes the semantics of IsFinalTx() when the block height isn't provided to use the height of the next block. The resulting semantics return true if the transaction in question could included in the next block, significantly less confusing and more useful than the previous semantics.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6183,https://github.com/bitcoin/bitcoin/pull/6183,https://api.github.com/repos/bitcoin/bitcoin/pulls/6183,2015-05-25T05:34:57Z,2015-06-01T09:36:31Z,2015-06-01T09:33:43Z,36117898,2017-03-24 23:30:27,2017-03-25 01:09:12
58,1,80828679,6186,Fix two problems in CSubnet parsing,laanwj,closed,Bug,"Fix two CSubNet constructor problems:
- The use of `/x` where 8 does not divide x was broken, due to a bit-order issue
- The use of e.g. `1.2.3.4/24` where the netmasked bits in the network are not 0 was broken. Fix this by explicitly normalizing the network according to the bitmask.

Also add tests for these cases.

Fixes #6179. Thanks to @jonasschnelli for reporting and initial fix.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6186,https://github.com/bitcoin/bitcoin/pull/6186,https://api.github.com/repos/bitcoin/bitcoin/pulls/6186,2015-05-26T07:02:57Z,2015-05-27T07:12:39Z,2015-05-27T07:08:54Z,36174311,2017-03-24 23:30:27,2017-03-25 01:09:13
59,1,85240937,6233,Advance pindexLastCommonBlock for blocks in chainActive,sdaftuar,closed,Bug,"This prevents an edge case where a block downloaded and pruned
in-between successive calls to FindNextBlocksToDownload could
cause the block to be unnecessarily re-requested.

The issue is that pindexLastCommonBlock is only updated on calls
to FindNextBlocksToDownload, by starting at its prior value and then
advancing forward until we encounter a block for which we don't 
HAVE_DATA (which we then try to request).

During initial block download, it's possible for the tip to advance by 
many blocks during a single call to ActivateBestChain (since blocks 
arrive out of order, when a block comes in that completes a long 
sequence, then we'll see many tip updates in a row).  If a long enough 
sequence of tip updates occurs, then it's possible that the block
that just arrived could be pruned at the end of processing, before 
FindNextBlocksToDownload can be called for any other peers.  This
in turn would cause us to re-request the block from one of those peers,
since we'd no longer HAVE_DATA for it.

Since blocks in chainActive never need to be re-downloaded, this
pull should prevent pruning nodes from ever re-requesting blocks in this
situation, while still allowing for pruning nodes to redownload blocks
that may have been previously pruned but are needed for a reorg (this 
is exercised in `pruning.py`, which this pull passes).
",https://api.github.com/repos/bitcoin/bitcoin/issues/6233,https://github.com/bitcoin/bitcoin/pull/6233,https://api.github.com/repos/bitcoin/bitcoin/pulls/6233,2015-06-04T19:26:55Z,2015-06-25T14:42:57Z,2015-06-25T14:37:02Z,36969116,2017-03-24 23:30:27,2017-03-25 01:10:24
60,1,86322277,6256,Use best header chain timestamps to detect partitioning,gavinandresen,closed,Bug,"The partition checking code was using chainActive timestamps
to detect partitioning; with headers-first syncing, it should use
(and with this pull request, does use) pIndexBestHeader timestamps.

Fixes issue #6251
",https://api.github.com/repos/bitcoin/bitcoin/issues/6256,https://github.com/bitcoin/bitcoin/pull/6256,https://api.github.com/repos/bitcoin/bitcoin/pulls/6256,2015-06-08T20:38:41Z,2015-06-15T08:38:51Z,2015-06-12T14:44:49Z,37193410,2017-03-24 23:30:27,2017-03-25 01:10:24
61,1,88326104,6282,fix crash on shutdown when e.g. changing -txindex and abort action,Diapolo,closed,Bug,"- fixes #3136
- the problem is related to Boost path and a static initialized internal
  pointer
- using a std::string in CDBEnv::EnvShutdown() prevents the problem
",https://api.github.com/repos/bitcoin/bitcoin/issues/6282,https://github.com/bitcoin/bitcoin/pull/6282,https://api.github.com/repos/bitcoin/bitcoin/pulls/6282,2015-06-15T05:49:50Z,2015-06-23T08:45:08Z,2015-06-18T14:40:53Z,37660048,2017-03-24 23:30:27,2017-03-25 01:10:25
62,1,88460177,6284,Fix argument parsing oddity with -noX,laanwj,closed,Bug,"`bitcoind -X -noX` ends up, unintuitively, with `X` set.
(for all boolean options X)

This result is due to the odd two-pass processing of arguments. This patch fixes this oddity (by always taking the latter option setting) and simplifies the code at the same time.

Discovered while testing #6272.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6284,https://github.com/bitcoin/bitcoin/pull/6284,https://api.github.com/repos/bitcoin/bitcoin/pulls/6284,2015-06-15T15:30:21Z,2015-08-03T17:54:58Z,2015-08-03T17:54:58Z,37704107,2017-03-24 23:30:27,2017-03-25 01:10:26
63,1,89104177,6299,Bugfix: Don't check the genesis block header before accepting it,jtimon,closed,Bug,"This should fix an error that was introduced in #5975 , thanks @sdaftuar for reporting the error. 
I will work on a more elegant solution: the genesis block should never be checked at all; it is valid by definition. But it seems that will be more work than I first thought so let's just fix the bug first.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6299,https://github.com/bitcoin/bitcoin/pull/6299,https://api.github.com/repos/bitcoin/bitcoin/pulls/6299,2015-06-17T19:30:17Z,2015-06-26T13:41:15Z,2015-06-26T13:41:10Z,37937482,2017-03-24 23:30:27,2017-03-25 01:10:26
64,1,89483385,6306,Prevent peer flooding inv request queue (redux),dgenr8,closed,Bug,"Removes a network attacker node's ability to indefinitely blind its peers to a block or transaction new to them, such as a double-spend generated by attacker.  The possible blinding interval is reduced to the getdata timeout (currently 2 minutes).

This vulnerability is discussed in [Tampering with the Delivery of Blocks and Transactions in Bitcoin [1]](http://eprint.iacr.org/2015/578) and was described earlier in [Discovering Bitcoin’s Public Topology and Influential Nodes [2]](http://cs.umd.edu/projects/coinscope/coinscope.pdf).

This is a lighter implementation of #4547.  Attention is paid to the result of the insert into the existing collection setInventoryKnown, rather than introducing a new collection.
#4547 was closed to focus on a wider solution that has been delayed.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6306,https://github.com/bitcoin/bitcoin/pull/6306,https://api.github.com/repos/bitcoin/bitcoin/pulls/6306,2015-06-19T06:42:13Z,2015-11-24T09:53:11Z,2015-11-24T09:53:11Z,38080750,2017-03-24 23:30:27,2017-03-25 01:10:27
65,1,92421390,6361,"Use real number of cores for default -par, ignore virtual cores",laanwj,closed,Bug,"To determine the default for `-par`, the number of script verification threads, use [boost::thread::physical_concurrency()](http://www.boost.org/doc/libs/1_58_0/doc/html/thread/thread_management.html#thread.thread_management.thread.physical_concurrency) which counts only physical cores, not virtual cores.

Virtual cores are roughly a set of cached registers to avoid context switches while threading, they cannot actually perform work, so spawning a verification thread for them could even reduce efficiency and will put undue load on the system.

Should fix issue #6358, as well as some other reported system overload issues, especially on Intel processors.

The function was only introduced in boost 1.56, so provide a utility function `GetNumCores` to fall back for older Boost versions.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6361,https://github.com/bitcoin/bitcoin/pull/6361,https://api.github.com/repos/bitcoin/bitcoin/pulls/6361,2015-07-01T16:03:10Z,2015-07-09T23:13:28Z,2015-07-02T18:01:15Z,38997853,2017-03-24 23:30:27,2017-03-25 01:10:28
66,1,94168117,6412,Test whether created sockets are select()able,sipa,closed,Bug,"This provides a belt-and-suspends check against file descriptor overflowing, to fix #6411.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6412,https://github.com/bitcoin/bitcoin/pull/6412,https://api.github.com/repos/bitcoin/bitcoin/pulls/6412,2015-07-09T22:38:21Z,2015-07-20T15:46:18Z,2015-07-20T14:54:37Z,39636036,2017-03-24 23:30:27,2017-03-25 01:10:29
67,1,95053745,6438,openssl: avoid config file load/race,theuni,closed,Bug,"Should fix #6436. See [here](https://wiki.openssl.org/index.php/Library_Initialization#OPENSSL_config) for more info. Also [the source](https://github.com/openssl/openssl/blob/OpenSSL_1_0_0-stable/crypto/conf/conf_sap.c) is self-explanatory.

Since we don't use any loadable functionality, I don't see how this could hurt. Presumably qt tries to load available modules, but the fallbacks should always work.

One last data point: The depends build is trying to load `/home/ubuntu/build/bitcoin/depends/x86_64-unknown-linux-gnu/etc/openssl/openssl.cnf` which obviously won't be found in the end-user's environment. So this functionality has actually been disabled for a long time anyway.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6438,https://github.com/bitcoin/bitcoin/pull/6438,https://api.github.com/repos/bitcoin/bitcoin/pulls/6438,2015-07-14T22:09:27Z,2015-07-17T07:33:11Z,2015-07-15T13:49:59Z,39968782,2017-03-24 23:30:27,2017-03-25 01:10:29
68,1,95799832,6456,"rpc: Avoid unnecessary parsing roundtrip in number formatting, fix locale issue",laanwj,closed,Bug,"Three weakly related fixes to number handling after the `univalue` switch. These came to the surface while troubleshooting #6443.
## Make ValueFromAmount always return 8 decimals

This is the format that was always returned to JSON clients. The difference was not noticed before, because VREAL values are post-processed by univalue.

By implementing the functionality directly it breaks the dependency of rpcserver on utilmoneystr. FormatMoney is now only used for debugging purposes.

To test, port over the formatting tests from util_tests.cpp to rpc_tests.cpp.
## univalue: Avoid unnecessary roundtrip through double for numbers

JSON makes no distinction between numbers and reals, and our code doesn't need to do so either.

This removes VREAL, as well as its specific post-processing in `UniValue::write`. Non-monetary amounts do not need to be forcibly formatted with 8 decimals, so the extra roundtrip was unnecessary (and potentially loses precision).
## util: use locale-independent parsing in ParseDouble

Use locale-indepent C++ based parsing instead of C's strtod, which checks for different input based on the user's locale. 
Fixes #6443.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6456,https://github.com/bitcoin/bitcoin/pull/6456,https://api.github.com/repos/bitcoin/bitcoin/pulls/6456,2015-07-18T07:25:43Z,2015-07-24T09:09:00Z,2015-07-24T09:09:00Z,40288297,2017-03-24 23:30:27,2017-03-25 01:10:30
69,1,96828140,6468,fix CBitcoinExtKeyBase template,jonasschnelli,closed,Bug,"- fix Decode call (req. only one param)
- add constructor for base58c->CExtKey

The current `Decode()` call with two parameters won't compile (not detected because the c++ temple never was evaluated).

Also adds test coverage.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6468,https://github.com/bitcoin/bitcoin/pull/6468,https://api.github.com/repos/bitcoin/bitcoin/pulls/6468,2015-07-23T14:31:00Z,2015-07-27T11:21:06Z,2015-07-27T11:21:06Z,40678012,2017-03-24 23:30:27,2017-03-25 01:10:31
70,1,100322020,6545,Do not store more than 200 timedata samples.,paveljanik,closed,Bug,"As reported in the issue #6490, Bitcoin Core keeps and extends `std::set` of `CNetAddr` for all peers during the whole server run. Even for peers that do not affect the adjusted time of the Core at all.

This change makes it clear (do nothing after 200 timedata samples), saves some CPU time and memory.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6545,https://github.com/bitcoin/bitcoin/pull/6545,https://api.github.com/repos/bitcoin/bitcoin/pulls/6545,2015-08-11T14:14:42Z,2015-08-20T15:15:47Z,2015-08-20T15:13:52Z,42133393,2017-03-24 23:30:27,2017-03-25 01:10:31
71,1,101086592,6556,Fix masking of irrelevant bits in address groups.,morcos,closed,Bug,"If I'm reading this right, I believe the intent is to keep the high order nBits and mask away the others with 1's.  But before this fix it was keeping the high order (8 - nBits).   I don't think there was any effect, because the only time this was used was in the case of he.net /36 IPv6 groups so nBits was 4.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6556,https://github.com/bitcoin/bitcoin/pull/6556,https://api.github.com/repos/bitcoin/bitcoin/pulls/6556,2015-08-14T19:27:28Z,2015-08-20T14:46:07Z,2015-08-20T14:45:46Z,42489352,2017-03-24 23:30:27,2017-03-25 01:10:32
72,1,101515041,6565,Make sure we re-acquire lock if a task throws,casey,closed,Bug,"This fixes #6394

Pretty simple, it just makes sure to re-acquire the lock in case f throws, so that we don't touch nThreadsServicingQueue without the lock. The empty throw statement re-raises the current exception.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6565,https://github.com/bitcoin/bitcoin/pull/6565,https://api.github.com/repos/bitcoin/bitcoin/pulls/6565,2015-08-17T21:35:24Z,2015-08-31T16:59:26Z,2015-08-19T14:27:41Z,42637152,2017-03-24 23:30:27,2017-03-25 01:10:32
73,1,101711139,6571,libbitcoinconsensus: avoid a crash in multi-threaded environments,theuni,closed,Bug,"tl;dr: EC_KEY_new_by_curve_name() affects global state in some versions/configs of openssl, leading to crashes when called by multiple threads. Avoid the issue by only calling it once at startup and caching the resulting group.

This is likely unnecessary for master with libsecp256k1-verification landing soon, but I think it makes sense for backports.

This is a real-world issue for libbitcoinconsensus as reported by Tamas Blummer here: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-August/010219.html

When calling EC_KEY_new_by_curve_name(), openssl internally checks to see how to setup the curve's EC_METHOD (simple, montgomery, or nist).

Unfortunately, in all released OpenSSL versions (as far as I can tell master is the only branch that has fixed this issue), it's tested like so:
- Try a method. If it fails, set a global error and return.
- If the global error is set, try a different method.

Prior to OpenSSL 1.0.0, these were tested in the order:
EC_GFp_nist_method -> EC_GFp_mont_method. The secp256k1 curve fails the ec_GFp_nist_group_set_curve test and sets the global error. That error is then checked for failure, and EC_GFp_mont_method is tried (and succeeds).

Obviously that global error usage is dangerous, especially since it happens for _each_ transaction verification in libbitcoinconsensus. In a multi-threaded environment, a crash is guaranteed within a few seconds.

However, OpenSSL 1.0.1 reversed the order, trying EC_GFp_mont_method first, so that the global error doesn't end up being used: https://github.com/openssl/openssl/commit/17674bfdf75bffa4e225f8328b9d42cb74504005

This was backported from master back to 1.0.1, but not to 1.0.0 or 0.9.8.

So that change (accidentally) ""solved"" the problem. As you can see, it's still possible to hit the reversed order in the !defined(OPENSSL_BN_ASM_MONT) case. That's easily tested by building OpenSSL with the -no-asm config option. It's probably also the case for obscure architectures and OSs, but I haven't looked deeply into that. In that case, it's reasonable to assume that this crash would likely occur on such platforms.

Also, OSX, even the latest version (10.10 as of now), still ships with OpenSSL 0.9.8. Which is how Tamas ran into it.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6571,https://github.com/bitcoin/bitcoin/pull/6571,https://api.github.com/repos/bitcoin/bitcoin/pulls/6571,2015-08-18T17:47:44Z,2015-08-20T22:35:51Z,2015-08-20T14:33:55Z,42727490,2017-03-24 23:30:27,2017-03-25 01:10:33
74,1,103617301,6595,Fix removal of timelocked-txn from mempool during reorg,TheBlueMatt,closed,Bug,,https://api.github.com/repos/bitcoin/bitcoin/issues/6595,https://github.com/bitcoin/bitcoin/pull/6595,https://api.github.com/repos/bitcoin/bitcoin/pulls/6595,2015-08-27T23:43:11Z,2015-11-05T19:00:10Z,2015-11-05T19:00:10Z,43579840,2017-03-24 23:30:27,2017-03-25 01:10:34
75,1,107082365,6688,Fix locking in GetTransaction.,morcos,closed,Bug,"GetTransaction needs to lock cs_main until ReadBlockFromDisk completes because the data inside CBlockIndex's can change since pruning.  This lock was held by all calls to GetTransaction except rest_tx.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6688,https://github.com/bitcoin/bitcoin/pull/6688,https://api.github.com/repos/bitcoin/bitcoin/pulls/6688,2015-09-17T21:55:08Z,2015-09-23T14:53:59Z,2015-09-23T14:53:59Z,45346971,2017-03-24 23:30:27,2017-03-25 01:10:35
76,1,107377844,6703,Backport bugfixes to 0.11,luke-jr,closed,Bug,"Travis is failing this weirdly, and I'm not sure why. Working on troubleshooting it, but I need to go to bed... so tomorrow I guess.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6703,https://github.com/bitcoin/bitcoin/pull/6703,https://api.github.com/repos/bitcoin/bitcoin/pulls/6703,2015-09-20T07:31:15Z,2015-09-23T12:12:58Z,2015-09-23T12:12:58Z,45491638,2017-03-24 23:30:27,2017-03-25 01:10:35
77,1,107378427,6704,Backport bugfixes to 0.10,luke-jr,closed,Bug,,https://api.github.com/repos/bitcoin/bitcoin/issues/6704,https://github.com/bitcoin/bitcoin/pull/6704,https://api.github.com/repos/bitcoin/bitcoin/pulls/6704,2015-09-20T07:48:44Z,2015-09-22T16:07:05Z,2015-09-22T16:07:05Z,45491891,2017-03-24 23:30:27,2017-03-25 01:10:36
78,1,107982251,6715,Fix mempool packages,sdaftuar,closed,Bug,"This fixes an edge case (introduced by #6654 and reported by @sipa here: https://github.com/bitcoin/bitcoin/pull/6654#issuecomment-142345556) in removing an entry from the mempool during the middle of a reorg, where the entry has an in-block ancestor which has not yet had its descendant state updated for the transaction being removed.

The first commit updates the `mempool_packages.py` rpc-test to include a test that demonstrates the bug; the second commit provides a fix.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6715,https://github.com/bitcoin/bitcoin/pull/6715,https://api.github.com/repos/bitcoin/bitcoin/pulls/6715,2015-09-23T18:47:09Z,2015-09-24T10:26:33Z,2015-09-24T10:25:14Z,45816072,2017-03-24 23:30:27,2017-03-25 01:10:37
79,1,110346023,6777,Unobfuscate chainstate data in CCoinsViewDB::GetStats,jamesob,closed,Bug,"Per the [thread on the mailing list](http://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-October/011474.html), we missed (at least) one use of `CLevelDBWrapper` when adding chainstate obfuscation.

Preferably, this PR (or a followup) will also add automated tests that prevent future bugs of this kind. Subsequently we should also introduce an abstraction that prevents this sort of leak when performing iteration with `CLevelDBWrapper`.

cc @domob1812 @dexX7
",https://api.github.com/repos/bitcoin/bitcoin/issues/6777,https://github.com/bitcoin/bitcoin/pull/6777,https://api.github.com/repos/bitcoin/bitcoin/pulls/6777,2015-10-08T00:16:35Z,2015-10-13T10:24:04Z,2015-10-13T10:24:04Z,47098796,2017-03-24 23:30:27,2017-03-25 01:10:38
80,1,113360585,6889,fix locking issue with new mempool limiting,jonasschnelli,closed,Bug,"Current master crashes on OSX with an exception: ""boost: mutex lock failed in pthread_mutex_lock: Invalid argument"".

`mempool` is a global object and gets initialized over `cxx_global_var_init()`. Calling `LOCK()` within constructor (of a object in global scope) is problematic (at least on OSX).
",https://api.github.com/repos/bitcoin/bitcoin/issues/6889,https://github.com/bitcoin/bitcoin/pull/6889,https://api.github.com/repos/bitcoin/bitcoin/pulls/6889,2015-10-26T13:57:42Z,2015-10-27T22:28:03Z,2015-10-27T07:48:31Z,48741987,2017-03-24 23:30:27,2017-03-25 01:10:38
81,1,115823020,6970,Fix crash in validateaddress with -disablewallet,laanwj,closed,Bug,"Fix a null pointer dereference in validateaddress with -disablewallet. Also add a regression testcase.

Problem reported here: https://github.com/bitcoin/bitcoin/issues/6963#issuecomment-154548880

I think this needs to be backported to 0.11 as well.
",https://api.github.com/repos/bitcoin/bitcoin/issues/6970,https://github.com/bitcoin/bitcoin/pull/6970,https://api.github.com/repos/bitcoin/bitcoin/pulls/6970,2015-11-09T07:45:08Z,2015-11-09T23:20:42Z,2015-11-09T10:57:49Z,50092974,2017-03-24 23:30:27,2017-03-25 01:10:39
82,1,119039067,7103,"[wallet, rpc tests] Fix settxfee, paytxfee",MarcoFalke,closed,Bug,"This comes without the GUI changes, so it should be easier to review and backport. GUI: #7096
",https://api.github.com/repos/bitcoin/bitcoin/issues/7103,https://github.com/bitcoin/bitcoin/pull/7103,https://api.github.com/repos/bitcoin/bitcoin/pulls/7103,2015-11-26T12:51:51Z,2015-11-30T11:22:32Z,2015-11-30T11:18:31Z,51909002,2017-03-24 23:30:27,2017-03-25 01:10:40
83,1,119100927,7105,Keep track of explicit wallet conflicts instead of using mempool,sipa,closed,Bug,"This is an alternative approach for #7067. It stores the earlier block which conflicts (directly or indirectly) with transactions. The wallet relies on being told about conflicts, so this may need rescanning to discover conflicts with historical transactions (but those aren't reliably detectable anyway, even with other approaches).

New semantics:
- A negative confirmation count -N means that there is a block (with N confirms) that directly or indirectly (via other wallet transactions) conflicts with a given transaction.
- Unconfirmed coins received from self are only considered spendable when they are in the mempool.
",https://api.github.com/repos/bitcoin/bitcoin/issues/7105,https://github.com/bitcoin/bitcoin/pull/7105,https://api.github.com/repos/bitcoin/bitcoin/pulls/7105,2015-11-26T20:49:06Z,2015-12-01T08:22:23Z,2015-12-01T08:22:23Z,51944982,2017-03-24 23:30:27,2017-03-25 01:10:40
84,1,127634828,7381,[walletdb] Fix syntax error in key parser,MarcoFalke,closed,Bug,"This needs backport to all versions of bitcoin/altcoins after merge.

A dump may look like:

```
VERSION=3
format=bytevalue
database=main
type=btree
db_pagesize=4096
HEADER=END
<{Data}>
DATA=END
```

So the current parser gives us odd data like:

`keyHex=""DATA=END"";`
`valueHex="""";`

(sometimes the other way round)
",https://api.github.com/repos/bitcoin/bitcoin/issues/7381,https://github.com/bitcoin/bitcoin/pull/7381,https://api.github.com/repos/bitcoin/bitcoin/pulls/7381,2016-01-20T09:06:01Z,2016-01-20T21:05:11Z,2016-01-20T12:08:20Z,56580375,2017-03-24 23:30:27,2017-03-25 01:10:41
85,1,141155239,7696,Fix de-serialization bug where AddrMan is left corrupted,EthanHeilman,closed,Bug,"CAddrDB::Read is used to manage the loading of AddrMan from peers.dat. As shown in the code below, when CAddrDB::Read catches an exception from the de-serialization code it returns addrman ""as-is"", despite the fact that it failed to load correctly.

``` C++
    try {
        // de-serialize file header (network specific magic number) and ..
        ssPeers >> FLATDATA(pchMsgTmp);

        // ... verify the network matches ours
        if (memcmp(pchMsgTmp, Params().MessageStart(), sizeof(pchMsgTmp)))
            return error(""%s: Invalid network magic number"", __func__);

        // de-serialize address data into one CAddrMan object
        ssPeers >> addr;
    }
    catch (const std::exception& e) {
        return error(""%s: Deserialize or I/O error - %s"", __func__, e.what());
    }
```

https://github.com/bitcoin/bitcoin/blob/master/src/net.cpp#L2330

This use of a corrupted addrman can cause a bitcoind client to get in a state such that when bitcoind starts it will not run correctly. Once bitcoind gets into such a state the only fix is for the user to manually delete the offending peers.dat file.

This pull request fixes this behavior so that an exception during the de-serialization process will leave addrman in a clean state. Unittests verify this new behavior.
",https://api.github.com/repos/bitcoin/bitcoin/issues/7696,https://github.com/bitcoin/bitcoin/pull/7696,https://api.github.com/repos/bitcoin/bitcoin/pulls/7696,2016-03-16T02:40:40Z,2016-05-17T08:53:19Z,2016-05-17T08:53:19Z,63006646,2017-03-24 23:30:27,2017-03-25 01:10:42
86,1,144997985,7780,[0.12] Disable bad-chain alert,btcdrak,closed,Bug,"Continuous false positives will lead to them being ignored entirely.
Better to disable now until this can be fixed more thoroughly in the next release.

Discussed at 2016-03-31 IRC meeting.

Refs: #7568
",https://api.github.com/repos/bitcoin/bitcoin/issues/7780,https://github.com/bitcoin/bitcoin/pull/7780,https://api.github.com/repos/bitcoin/bitcoin/pulls/7780,2016-03-31T19:40:34Z,2016-04-01T12:17:17Z,2016-04-01T12:16:59Z,64846617,2017-03-24 23:30:27,2017-03-25 01:10:43
87,1,150666525,7933,Fix OOM when deserializing UTXO entries with invalid length,sipa,closed,Bug,"Thanks to @pstratem for finding this.

The normal vector deserializer reads data in chunks of at most 5 MB, preventing OOM when insane vector lengths are encoded. This protection is not present in CScriptCompressor's specialized deserializer, however, resulting in a potential OOM when very large length descriptors exist, as the target CScript is resized before attempting to read that much data.

However, CScripts have a maximum length above which they're always invalid. We can treat scriptPubKeys with such lengths as unspendable, preventing them from going into the UTXO set even, and skipping them when deserializing.

Note that none of this is exposed to the network, as the P2P code uses normal (pre)vectors, which do have this OOM protection directly in serialize.h.
",https://api.github.com/repos/bitcoin/bitcoin/issues/7933,https://github.com/bitcoin/bitcoin/pull/7933,https://api.github.com/repos/bitcoin/bitcoin/pulls/7933,2016-04-24T14:32:34Z,2016-04-26T11:23:24Z,2016-04-26T11:23:24Z,67638963,2017-03-24 23:30:27,2017-03-25 01:10:43
88,1,153167297,8004,signal handling: fReopenDebugLog and fRequestShutdown should be type sig_atomic_t,catilac,closed,Bug,"This allows access as an atomic variable in the presence of async interrupts.

See issue #7433 for more details
fixes: #7433
",https://api.github.com/repos/bitcoin/bitcoin/issues/8004,https://github.com/bitcoin/bitcoin/pull/8004,https://api.github.com/repos/bitcoin/bitcoin/pulls/8004,2016-05-05T04:47:56Z,2016-05-12T13:00:45Z,2016-05-12T09:46:24Z,68965952,2017-03-24 23:30:27,2017-03-25 01:11:55
89,1,161253573,8230,Fix LogPrint to LogPrintf,thelazier,closed,Bug,"Printing Log without category defined should use LogPrintf
",https://api.github.com/repos/bitcoin/bitcoin/issues/8230,https://github.com/bitcoin/bitcoin/pull/8230,https://api.github.com/repos/bitcoin/bitcoin/pulls/8230,2016-06-20T17:47:12Z,2016-06-21T08:29:43Z,2016-06-21T08:10:19Z,74483925,2017-03-24 23:30:27,2017-03-25 01:11:55
90,1,162118732,8256,BUG: bitcoin-qt crash,fsb4000,closed,Bug,"How to reproduce bug:
1. Run bitcoin-qt which doen't have transactions. (any mode, here testnet screenshot but same problem with mainnet)
![Image of first step](http://i.imgur.com/Xeb6Bst.png)
1. Press right mouse button at center:
   ![Image of second step](http://i.imgur.com/xiCno4j.png)
2. Program crashes: 
   ![Image of third step](http://i.imgur.com/98zi9gT.png)

I found that error at the line:

``` cpp
hash.SetHex(selection.at(0).data(TransactionTableModel::TxHashRole).toString().toStdString());
```

and I added the check.

My system: Linux Mint 18, Qt 5.5
",https://api.github.com/repos/bitcoin/bitcoin/issues/8256,https://github.com/bitcoin/bitcoin/pull/8256,https://api.github.com/repos/bitcoin/bitcoin/pulls/8256,2016-06-24T10:24:02Z,2016-06-24T11:48:31Z,2016-06-24T11:48:31Z,75093998,2017-03-24 23:30:27,2017-03-25 01:11:56
91,1,171923313,8540,qt: Fix random segfault when closing "Choose data directory" dialog,laanwj,closed,Bug,"The `pickDataDirectory()` function was calling `exit(0)` to quit the application when the user closes the dialog without choosing a data directory.

This is a bad idea because a background thread is created (to check free space on the drive of the currently selected datadir). The thread is not stopped and unwound properly, resulting in a potential
race condition somewhere deep in Qt (while running exit-triggered destructors).

So replace the `exit()` by a boolean return value, and let the stack unwind normally.
",https://api.github.com/repos/bitcoin/bitcoin/issues/8540,https://github.com/bitcoin/bitcoin/pull/8540,https://api.github.com/repos/bitcoin/bitcoin/pulls/8540,2016-08-18T15:02:16Z,2016-09-09T10:18:01Z,2016-08-19T09:33:44Z,81831651,2017-03-24 23:30:27,2017-03-25 01:11:57
92,1,186688956,9060,trivial: fix bloom filter init to isEmpty = true,robmcl4,closed,Bug,"Fixes newly initialized bloom filters being constructed with `isEmpty(false)`, which still _works_ but loses the possible speedup when checking for key membership in an empty filter.",https://api.github.com/repos/bitcoin/bitcoin/issues/9060,https://github.com/bitcoin/bitcoin/pull/9060,https://api.github.com/repos/bitcoin/bitcoin/pulls/9060,2016-11-02T01:12:57Z,2016-11-02T14:31:23Z,2016-11-02T14:31:23Z,91893639,2017-03-24 23:30:27,2017-03-25 01:11:57
93,1,192742151,9253,Fix calculation of number of bound sockets to use,TheBlueMatt,closed,Bug,Pulled this out of #9243 because it is a logically separate change.,https://api.github.com/repos/bitcoin/bitcoin/issues/9253,https://github.com/bitcoin/bitcoin/pull/9253,https://api.github.com/repos/bitcoin/bitcoin/pulls/9253,2016-12-01T02:56:37Z,2016-12-19T12:05:06Z,2016-12-01T21:07:27Z,96017536,2017-03-24 23:30:27,2017-03-25 01:11:58
94,1,193262477,9269,Align struct COrphan definition,sipa,closed,Bug,"Since #8179 the `struct COrphan` definition gained an extra field. The mirrored definition in DoS_tests was not updated, however. This violates the C++ one definition rule.

Found using GCC 6.2.0, when compiling with `-flto`:
```
test/DoS_tests.cpp:29:8: warning: type 'struct COrphanTx' violates the C++ One Definition Rule [-Wodr]
 struct COrphanTx {
        ^
net_processing.cpp:52:8: note: a different type is defined in another translation unit
 struct COrphanTx {
        ^
net_processing.cpp:55:13: note: the first difference of corresponding definitions is field 'nTimeExpire'
     int64_t nTimeExpire;
             ^
net_processing.cpp:52:8: note: a type with different number of fields is defined in another translation unit
 struct COrphanTx {
        ^
test/DoS_tests.cpp:29:8: note: type 'struct COrphanTx' itself violate the C++ One Definition Rule
 struct COrphanTx {
        ^
net_processing.cpp:52:8: note: the incompatible type is defined here
 struct COrphanTx {
        ^
```",https://api.github.com/repos/bitcoin/bitcoin/issues/9269,https://github.com/bitcoin/bitcoin/pull/9269,https://api.github.com/repos/bitcoin/bitcoin/pulls/9269,2016-12-03T03:29:41Z,2016-12-05T10:09:47Z,2016-12-05T10:09:47Z,96384761,2017-03-24 23:31:38,2017-03-25 01:11:59
95,1,194427476,9302,Return txid even if ATMP fails for new transaction,sipa,closed,Bug,,https://api.github.com/repos/bitcoin/bitcoin/issues/9302,https://github.com/bitcoin/bitcoin/pull/9302,https://api.github.com/repos/bitcoin/bitcoin/pulls/9302,2016-12-08T19:49:55Z,2016-12-14T12:09:43Z,2016-12-13T11:15:53Z,97188216,2017-03-24 23:31:38,2017-03-25 01:11:59
96,1,199945393,9511,Don't overwrite validation state with corruption check,morcos,closed,Bug,"AcceptToMemoryPool has several classes of return false statements.
- return state.Invalid or state.DoS directly itself
- return false and set fMissingInputs (state is valid)
- return false and state is set by failed CheckTransaction
- return false and state is set by failed CheckInputs.

This commit patches the last case where the state variable was reused for additional calls to CheckInputs to identify witness stripping as cause of validation failure.  After this commit, it should be the case that if !fMissingInputs, state is always Invalid if AcceptToMemoryPool returns false.",https://api.github.com/repos/bitcoin/bitcoin/issues/9511,https://github.com/bitcoin/bitcoin/pull/9511,https://api.github.com/repos/bitcoin/bitcoin/pulls/9511,2017-01-10T22:00:29Z,2017-01-23T12:18:49Z,2017-01-23T12:18:49Z,100962232,2017-03-24 23:31:38,2017-03-25 01:12:00
97,1,205238834,9679,Access WorkQueue::running only within the cs lock,TheBlueMatt,closed,Bug,"This removes a ""race"" between Interrupt() and Run(), though it
should not effect any of our supported platforms.",https://api.github.com/repos/bitcoin/bitcoin/issues/9679,https://github.com/bitcoin/bitcoin/pull/9679,https://api.github.com/repos/bitcoin/bitcoin/pulls/9679,2017-02-03T18:50:29Z,2017-02-04T10:37:58Z,2017-02-04T10:37:58Z,104589948,2017-03-24 23:31:38,2017-03-25 01:12:01
98,1,208143928,9777,Handle unusual maxsigcachesize gracefully,jnewbery,closed,Bug,"belt-and-braces approach:

- first commit fixes the bug where maxsigcachesize being zero causes segfault
- second commit handles maxsigcachesize being negative by setting it to zero if a negative number is provided
- third commit handles maxsigcachesize being too large by setting it to MAX_MAX_SIG_CACHE_SIZE if an unreasonably large number is provided.

I've set `MAX_MAX_SIG_CACHE_SIZE` absurdly high (16GB) for now, so setting maxsigcachesize to anything unreasonably large will still cause a bad_alloc for most users. Input welcomed on what a more reasonable `MAX_MAX_SIG_CACHE_SIZE` should be, or whether we should leave it out entirely.

Replaces https://github.com/bitcoin/bitcoin/pull/9770",https://api.github.com/repos/bitcoin/bitcoin/issues/9777,https://github.com/bitcoin/bitcoin/pull/9777,https://api.github.com/repos/bitcoin/bitcoin/pulls/9777,2017-02-16T14:55:16Z,2017-02-17T08:07:39Z,2017-02-17T08:07:39Z,106541521,2017-03-24 23:31:38,2017-03-25 01:12:01
99,1,209565220,9829,Fix importmulti returning rescan errors for wrong keys,ryanofsky,closed,Bug,Bug was a missing ++i line in a new range for loop added in #9773.,https://api.github.com/repos/bitcoin/bitcoin/issues/9829,https://github.com/bitcoin/bitcoin/pull/9829,https://api.github.com/repos/bitcoin/bitcoin/pulls/9829,2017-02-22T20:05:04Z,2017-02-28T12:53:16Z,2017-02-28T12:53:16Z,107487106,2017-03-24 23:31:38,2017-03-25 01:12:02
100,1,215485298,10039,Fix compile errors with Qt 5.3.2 and Boost 1.55.0,ryanofsky,closed,Bug,Both errors were introduced in #9974 and reported by @paveljanik,https://api.github.com/repos/bitcoin/bitcoin/issues/10039,https://github.com/bitcoin/bitcoin/pull/10039,https://api.github.com/repos/bitcoin/bitcoin/pulls/10039,2017-03-20T16:53:12Z,2017-03-27T07:11:43Z,2017-03-21T10:47:34Z,111599388,2017-03-24 23:31:38,2017-03-27 14:03:09
101,2,33602076,1580,Event: Restore the `constructor` property on jQuery.Event prototype,dcherman,closed,Bug,"The original definition of the jQuery.Event prototype was paving over the
`constructor` property which was causing jQuery.isPlainObject to
improperly report that an instance of jQuery.Event was a plain object.

Fixes #15090
",https://api.github.com/repos/jquery/jquery/issues/1580,https://github.com/jquery/jquery/pull/1580,https://api.github.com/repos/jquery/jquery/pulls/1580,2014-05-15T16:28:11Z,2014-12-04T14:56:14Z,2014-09-04T07:35:24Z,0,2017-03-25 14:56:15,2017-03-25 14:56:15
102,2,33755481,1583,CSS: Do not throw on frame elements in FF,markelog,closed,Bug,"IE9-10 throws on elements created in popups (see <a href=""http://bugs.jquery.com/ticket/14150"">#14150</a>), FF meanwhile throws on frame elements through ""defaultView.getComputedStyle"" (see <a href=""http://bugs.jquery.com/ticket/15098"">#15098</a>)

Use ""defaultView"" if in the popup which would fix IE issue, use ""window.getComputedStyle"" which would fix FF issue.

And everybody wins, except performance, but who cares right?

Fixes #15098
",https://api.github.com/repos/jquery/jquery/issues/1583,https://github.com/jquery/jquery/pull/1583,https://api.github.com/repos/jquery/jquery/pulls/1583,2014-05-18T16:59:56Z,2014-12-15T14:30:36Z,2014-06-15T23:15:51Z,0,2017-03-25 14:56:15,2017-03-25 14:56:15
103,2,212275876,3560,Core: Fix nodeName-related issues,mgol,closed,Bug,"### Summary ###
The jQuery.nodeName deprecation (ac9e3016) introduced a few serious regressions.

1. jQuery.nodeName was undefined, jQuery.fn.nodeName was defined instead.
2. Our AMD modules had parameters passed in incorrect order.

The second issue wasn't breaking the full build due to our custom build script
that removes the AMD wrappers so we didn't catch it in tests.

To avoid repeating the first regression, this commit also adds very basic
tests for the deprecated jQuery.nodeName.

Ref ac9e3016

P.S. Since this PR unbreaks master I'd like to land it quickly. Please review @jquery/core.

### Checklist ###
Mark an `[x]` for completed items, if you're not sure leave them unchecked and we can assist.

* [x] All authors have signed the CLA at https://contribute.jquery.com/CLA/
* [x] New tests have been added to show the fix or feature works
* [x] Grunt build and unit tests pass locally with these changes
* [x] ~~If needed, a docs issue/PR was created at https://github.com/jquery/api.jquery.com~~

Thanks! Bots and humans will be around shortly to check it out.
",https://api.github.com/repos/jquery/jquery/issues/3560,https://github.com/jquery/jquery/pull/3560,https://api.github.com/repos/jquery/jquery/pulls/3560,2017-03-06T22:53:12Z,2017-03-07T09:12:29Z,2017-03-06T23:42:44Z,0,2017-03-25 14:56:15,2017-03-25 14:56:15
107,3,30286650,633,Fix bug #55138 PDO OCI cannot insert more than 1332 bytes,gureedo,closed,,"According to Oracle docs `value_sz` defines size in bytes, not characters.
`OCIBindByName()` docs:
http://docs.oracle.com/cd/E16655_01/appdev.121/e17625/oci16rel003.htm#LNOCI17140

```
value_sz (IN)
The maximum size possible in bytes of any data value (passed using valuep) for this bind variable. 
This size is always expected to be the size in bytes. 
```

This fix not covers VARCHAR2 extended mode in new Oracle versions.
See `max_string_size = extended` at
http://docs.oracle.com/cd/E16655_01/appdev.121/e17625/oci03typ.htm#LNOCI16271
",https://api.github.com/repos/php/php-src/issues/633,https://github.com/php/php-src/pull/633,https://api.github.com/repos/php/php-src/pulls/633,2014-03-27T10:00:31Z,2017-01-04T22:19:27Z,2017-01-04T22:19:20Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
108,3,37259564,710,* double fastcgi_end_request on max_children limit,dmitry-saprykin,closed,,"Php sends 2 fastcgi FCGI_END_REQUEST records instead of one when `fastcgi_finish_request();` called and fpm param max_requests exceeded.
- one is sent on `fastcgi_finish_request();` call
- other is sent in block
  `
  fpm_main.c:1951
  requests++;
  if (max_requests && (requests == max_requests)) {
  fcgi_finish_request(&request, 1);
  break;
  }
  `

It confuses fastcgi client (i.e. nginx) receiving 2 FCGI_END_REQUEST records one after another.
So I have set `request->closed` flag to prevent second FastCGI record sending.
",https://api.github.com/repos/php/php-src/issues/710,https://github.com/php/php-src/pull/710,https://api.github.com/repos/php/php-src/pulls/710,2014-07-07T11:15:50Z,2015-03-11T09:30:31Z,2015-03-08T15:27:31Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
109,3,37682293,714,Fix php cli (-S option) inconsistent port parsing,nil0x42,closed,,"## Description

The php cli server (-S) option parser uses strtol(3) to retrieve the port
from address argument. Therefore, htons(3) is used to normalize the
address port, which leads to an unverified cast.

The issue may appear trivial, therefore, assuming that the ""Listening on""
information line at [sapi/cli/php_cli_server.php:2536](on success) uses
argument string, it may lead to false information.
## Issue example:

```
    $ php -S 127.0.0.1:80808080
    PHP 5.5.14 Development Server started at Fri Jul 11 19:36:56 2014
    Listening on http://127.0.0.1:80808080
    Document root is /tmp
    Press Ctrl-C to quit.
```

In this example, the server succeeds, because 80808080 short cast from
htons(3) converts it to port 2192, indeed, the server listens at port 2192:

```
    $ lsof -P -i -n | grep php                                                      
    php     8424  nil    3u  IPv4 8323966      0t0  TCP 127.0.0.1:2192 (LISTEN)  
```

The proposed fix is lightweight, and only consists in port range
verification before htons(3) call.
",https://api.github.com/repos/php/php-src/issues/714,https://github.com/php/php-src/pull/714,https://api.github.com/repos/php/php-src/pulls/714,2014-07-11T17:54:13Z,2014-12-01T06:48:40Z,2014-12-01T06:48:40Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
110,3,37740017,718,Fix #53092 - dns_get_record does not return false on dns server failure,datibbaw,closed,,"This aims to fix [bug 53092](https://bugs.php.net/bug.php?id=53092) by making `dns_get_record()` return `false` when an error has occurred during the query.

It's similar to its Windows counter part and adds a few useful warning messages when a request fails.
",https://api.github.com/repos/php/php-src/issues/718,https://github.com/php/php-src/pull/718,https://api.github.com/repos/php/php-src/pulls/718,2014-07-13T12:06:49Z,2014-12-01T06:48:27Z,2014-12-01T06:48:27Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
111,3,37766324,719,PostgreSQL - Convert Boolean & Integers to 'native' types,nathan-muir,closed,,"Hi,

This PR fixes a long standing issue with the pgsql extension and native boolean & integer types. (https://bugs.php.net/bug.php?id=29213, https://bugs.php.net/bug.php?id=47051) It's also a source of developer confusion, and ends up with questions like (http://stackoverflow.com/questions/1314986/reading-datypes-correctly-by-php-from-postgres)

Currently, boolean columns are returned as the strings 't' and 'f'; and integers are returned as strings.

To prevent backwards compatibility issues, the change is gated by the php.ini settings `pgsql.convert_boolean_type` and `pgsql.convert_integer_type`.

I'm making this requests against PHP-5.4, as it's backwards compatible - and if successful, I'll merge/port it forwards to 5.5, 5.6/devel
",https://api.github.com/repos/php/php-src/issues/719,https://github.com/php/php-src/pull/719,https://api.github.com/repos/php/php-src/pulls/719,2014-07-14T08:06:55Z,2016-04-16T03:22:57Z,2016-04-16T03:22:57Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
112,3,38093037,728,Fixed bug #67643 (curl_multi_getcontent returns '' when RETURNTRANSFER isn't set),Jille,closed,,,https://api.github.com/repos/php/php-src/issues/728,https://github.com/php/php-src/pull/728,https://api.github.com/repos/php/php-src/pulls/728,2014-07-17T15:24:19Z,2014-12-01T17:44:06Z,2014-12-01T06:24:52Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
113,3,38927862,747,Fix #66606: Sets HTTP_CONTENT_TYPE but not CONTENT_TYPE,evliu,closed,,,https://api.github.com/repos/php/php-src/issues/747,https://github.com/php/php-src/pull/747,https://api.github.com/repos/php/php-src/pulls/747,2014-07-28T20:13:11Z,2015-08-08T21:31:51Z,2015-08-08T21:31:51Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
114,3,39446998,760,remove 'broken tar' detection by filename,nike-17,closed,,"Really confuding place, that occure bugs like this
https://bugs.php.net/bug.php?id=67761
We can't handle file as tar just because it contain .tar
",https://api.github.com/repos/php/php-src/issues/760,https://github.com/php/php-src/pull/760,https://api.github.com/repos/php/php-src/pulls/760,2014-08-04T18:26:18Z,2015-03-30T12:49:34Z,2015-03-30T12:49:34Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
115,3,39886540,766,Fix bug #66091 (memory leak in DateTime::createFromFormat()),Entea,closed,,,https://api.github.com/repos/php/php-src/issues/766,https://github.com/php/php-src/pull/766,https://api.github.com/repos/php/php-src/pulls/766,2014-08-09T14:35:10Z,2016-03-03T19:37:37Z,2016-03-03T19:37:37Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
116,3,41259773,783,fix the bug of curl_setopt,redfoxli,closed,,"curl_setopt will  modify the type of param
the bugs is here: https://bugs.php.net/bug.php?id=67704
",https://api.github.com/repos/php/php-src/issues/783,https://github.com/php/php-src/pull/783,https://api.github.com/repos/php/php-src/pulls/783,2014-08-27T08:31:08Z,2014-11-26T08:53:19Z,2014-11-26T08:28:28Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
117,3,41399264,787,Bug #67913 - mysqlnd ignores MYSQLI_OPT_CONNECT_TIMEOUT option,ablyler,closed,,,https://api.github.com/repos/php/php-src/issues/787,https://github.com/php/php-src/pull/787,https://api.github.com/repos/php/php-src/pulls/787,2014-08-28T14:56:02Z,2017-01-02T15:05:58Z,2017-01-02T15:05:58Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
118,3,41564342,789,Bug 66777,bor0,closed,,"https://bugs.php.net/bug.php?id=66777

Remove upper bound for reallocations
",https://api.github.com/repos/php/php-src/issues/789,https://github.com/php/php-src/pull/789,https://api.github.com/repos/php/php-src/pulls/789,2014-08-30T14:25:35Z,2017-01-04T08:36:57Z,2017-01-04T08:36:57Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
119,3,41564541,790,Bug 67634,bor0,closed,,"https://bugs.php.net/bug.php?id=67634

Create clone of object instead of updating the values of the original object
",https://api.github.com/repos/php/php-src/issues/790,https://github.com/php/php-src/pull/790,https://api.github.com/repos/php/php-src/pulls/790,2014-08-30T14:36:53Z,2017-01-04T08:38:31Z,2017-01-04T08:38:31Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
120,3,41667336,796,Conditional checks against the same value twice,tml,closed,,"The comment immediately before implies that one of the 'auto's should probably be 'none'.

Error caught by PVS-Studio (see http://www.viva64.com/en/b/0277/)
",https://api.github.com/repos/php/php-src/issues/796,https://github.com/php/php-src/pull/796,https://api.github.com/repos/php/php-src/pulls/796,2014-09-02T00:31:15Z,2015-01-18T20:32:08Z,2015-01-18T20:25:28Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
121,3,41683459,798,Fix bug #67644 - Memory corruption & crash during ob_start function call...,smalyshev,closed,,"...back
",https://api.github.com/repos/php/php-src/issues/798,https://github.com/php/php-src/pull/798,https://api.github.com/repos/php/php-src/pulls/798,2014-09-02T07:52:58Z,2017-02-22T08:21:34Z,2017-02-22T08:21:34Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
122,3,41988653,806,Fixes #67960 - Long/short day names reversed in jddayofweek(),fisharebest,closed,,"See https://bugs.php.net/bug.php?id=67960

We reverse the definitions of the constants, so that `CAL_DOW_LONG` is now `1` and `CAL_DOW_SHORT` is now `2` so that they correspond with the definitions given in the documentation at http://www.php.net/function.jddayofweek

This means we need to reverse their usage in the code.  Note here that previously, `CAL_DOW_LONG` selected the short names `daynames` and `CAL_DOW_SHORT` selected the long names `daynamel`!

The test script is now driven from the constants - and since we test their numeric values in the expected output, we are checking that they are set consistently.
",https://api.github.com/repos/php/php-src/issues/806,https://github.com/php/php-src/pull/806,https://api.github.com/repos/php/php-src/pulls/806,2014-09-04T21:34:25Z,2015-01-02T09:23:10Z,2015-01-02T09:23:10Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
123,3,42917132,825,Fix for PHP ODBC bug #68014 - Result data values can be truncated because...,hard-at-work,closed,,"This corrects bug 68014 in php versions 5.4.32 to current.
",https://api.github.com/repos/php/php-src/issues/825,https://github.com/php/php-src/pull/825,https://api.github.com/repos/php/php-src/pulls/825,2014-09-16T18:39:14Z,2015-04-12T12:46:43Z,2015-04-11T17:19:25Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
124,3,43012381,827,Use ASCII delimiters for browscap regular expressions,datibbaw,closed,,"Fixes [bug 68012](https://bugs.php.net/bug.php?id=68021).

Uses the tilde as the expression delimiter to make them ASCII compatible instead of `\xA7`.
",https://api.github.com/repos/php/php-src/issues/827,https://github.com/php/php-src/pull/827,https://api.github.com/repos/php/php-src/pulls/827,2014-09-17T13:44:47Z,2015-03-23T05:15:10Z,2015-03-23T05:15:10Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
125,3,43679184,838,Bug #34380: preserve errno for stream_select and stream_socket_pair,zackse,closed,,"When the system calls underneath stream_select() and stream_socket_pair()
fail, errno is logged but is not preserved. This change preservers errno in
posix_globals to allow the caller to query posix_get_last_error() to determine
the cause of the failure.

Previously there wasn't any way to differentiate between a signal interrupt
(EINTR) and other errors, making proper error handling/recovery difficult or
impossible.
",https://api.github.com/repos/php/php-src/issues/838,https://github.com/php/php-src/pull/838,https://api.github.com/repos/php/php-src/pulls/838,2014-09-23T20:25:23Z,2017-01-05T06:21:16Z,2017-01-05T06:21:16Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
126,3,44079547,845,Opcache: Fix segfault while pre-evaluating a disabled function,manuelm,closed,,"Opcache pass 1 accesses func->module in the ""pre-evaluate constant functions""-step. However if the function has been disabled func->module will be NULL.

I think this will fix https://bugs.php.net/bug.php?id=68104
",https://api.github.com/repos/php/php-src/issues/845,https://github.com/php/php-src/pull/845,https://api.github.com/repos/php/php-src/pulls/845,2014-09-26T16:19:44Z,2014-12-01T06:00:06Z,2014-12-01T06:00:06Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
127,3,44194659,849,Fixes setcookie to only send one Set-Cookie header per name,ralt,closed,,"According to the IETF RFC 6265, only one Set-Cookie header should be sent per cookie name.

Fixes https://bugs.php.net/bug.php?id=67736

Cherry-picks and adapts 208deda (#795) for master
",https://api.github.com/repos/php/php-src/issues/849,https://github.com/php/php-src/pull/849,https://api.github.com/repos/php/php-src/pulls/849,2014-09-27T22:31:41Z,2017-01-05T06:24:55Z,2017-01-05T06:24:55Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
128,3,44933084,864,Fixed bug #68129,datibbaw,closed,,"Empty usernames and passwords are now treated differently from no username or password

For example, empty password:

```
ftp://user:@example.org
```

Empty username:

```
ftp://:password@example.org
```

Empty username and empty password

```
ftp://:@example.org
```
",https://api.github.com/repos/php/php-src/issues/864,https://github.com/php/php-src/pull/864,https://api.github.com/repos/php/php-src/pulls/864,2014-10-05T23:31:57Z,2014-12-01T05:59:14Z,2014-12-01T05:59:14Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
129,3,44957115,866,Fixed #68110,datibbaw,closed,,"Addresses [bug 68110](https://bugs.php.net/bug.php?id=68110).

Raise a warning when a variable is dereferenced as an array but is neither a string, array or object.
",https://api.github.com/repos/php/php-src/issues/866,https://github.com/php/php-src/pull/866,https://api.github.com/repos/php/php-src/pulls/866,2014-10-06T08:04:58Z,2016-09-19T14:15:19Z,2016-09-19T14:15:19Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
130,3,44979151,868,Upgrade crypt_blowfish to 1.3,lt,closed,,"I would like an opinion on whether this is a security fix, which affects it being merged to 5.4

Version 1.3 addresses: [OpenBSD bcrypt 8-bit key_len wraparound](http://www.openwall.com/lists/oss-security/2012/01/02/4)

I have received and followed some [advice from Solar Designer](http://www.openwall.com/lists/crypt-dev/2014/10/07/1) on implementing this change.

During implementation I added some tests that were missing from the official test suite, which actually failed. I have made some further changes to address these failures, and while all of the other existing tests still pass, I would again like an opinion on whether this is considered a BC break, or a bug fix. (I feel it is the latter)

Thanks.
",https://api.github.com/repos/php/php-src/issues/868,https://github.com/php/php-src/pull/868,https://api.github.com/repos/php/php-src/pulls/868,2014-10-06T12:47:38Z,2015-01-11T15:29:00Z,2014-12-01T05:48:02Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
131,3,45205266,870,Bug #68161 - DateTime::setTimestamp doesn't clear relative data,lt,closed,,"Fixes [PHP bug #68161](https://bugs.php.net/bug.php?id=68161) - Explicitly setting a timestamp does not clear previously set relative data.
",https://api.github.com/repos/php/php-src/issues/870,https://github.com/php/php-src/pull/870,https://api.github.com/repos/php/php-src/pulls/870,2014-10-08T05:28:47Z,2017-01-03T12:27:51Z,2017-01-03T12:27:51Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
132,3,45247943,871,Fixed #68024 #68171 #60387,datibbaw,closed,,"Bugs: [68024](https://bugs.php.net/bug.php?id=68024), [68171](https://bugs.php.net/bug.php?id=68171), [60387](https://bugs.php.net/bug.php?id=60387)

Instead of prepending key/value pairs into a linked list, we maintain
a head and tail for the three array config buckets so that operations
take place in the correct order _and_ existing values can be
overridden.
",https://api.github.com/repos/php/php-src/issues/871,https://github.com/php/php-src/pull/871,https://api.github.com/repos/php/php-src/pulls/871,2014-10-08T14:09:18Z,2017-01-05T06:29:05Z,2017-01-05T06:29:05Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
133,3,47263573,884,Fix #66479: Wrong response to FCGI_GET_VALUES,frankstolle,closed,,"Requesting Get-Values via FCGI caused an ""endless"" loop over the last requested parameter and ended with an invalid response. this patch solves this loop bug.
",https://api.github.com/repos/php/php-src/issues/884,https://github.com/php/php-src/pull/884,https://api.github.com/repos/php/php-src/pulls/884,2014-10-30T12:25:06Z,2015-02-01T08:38:29Z,2015-02-01T08:38:29Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
134,3,47482758,885,Fix bug #68335: rmdir doesnt work with file:// stream wrapper,mcq8,closed,,"https://bugs.php.net/bug.php?id=68335
",https://api.github.com/repos/php/php-src/issues/885,https://github.com/php/php-src/pull/885,https://api.github.com/repos/php/php-src/pulls/885,2014-11-01T03:34:54Z,2014-12-01T01:36:52Z,2014-12-01T01:36:52Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
135,3,49809888,914,Fixes memory leak introduced in 2b9af967,ralt,closed,,"Fixes https://bugs.php.net/bug.php?id=68285
",https://api.github.com/repos/php/php-src/issues/914,https://github.com/php/php-src/pull/914,https://api.github.com/repos/php/php-src/pulls/914,2014-11-23T00:43:21Z,2014-12-01T03:38:53Z,2014-12-01T03:38:53Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
136,3,49853725,917,SPL: Fix for bug 66405 RecursiveDirectoryIterator with CURRENT_AS_PATHNA...,paulyg,closed,,"Currently when you use RecursiveDirectoryIterator with the
CURRENT_AS_PATHNAME flag PHP will throw an UnexpectedValueException with
message 'Objects returned by RecursiveIterator::getChildren() must implement
RecursiveIterator'.This happend because getChildren() will return the
current directory name instead of an Iterator (or subclass of) as required
by the RecursiveIterator interface.

This commit changes getChildren() to return annother
RecursiveDirectoryIterator but current() still returns the path name when
CURRENT_AS_PATHNAME is used. A PHPT test case (bug66405.phpt) that
reproduces the bug is included.

This fix was originally against the PHP-5.4 branch, but it was not merged
before 5.4 reached EOL. I am hoping to get it applied to 5.5, 5.6, and
master.
",https://api.github.com/repos/php/php-src/issues/917,https://github.com/php/php-src/pull/917,https://api.github.com/repos/php/php-src/pulls/917,2014-11-24T03:41:22Z,2014-11-29T13:27:45Z,2014-11-29T13:27:45Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
137,3,50130766,924,Fix bug #67704: CURLOPT_POSTFIELDS modify the type of param,redfoxli,closed,,"curl_setopt will modify the type of param
the bugs is here: https://bugs.php.net/bug.php?id=67704

when the type of param is not string, we use a temp variable(current_tmp in the code)， then convert it to string, free the memory of the variable at last
",https://api.github.com/repos/php/php-src/issues/924,https://github.com/php/php-src/pull/924,https://api.github.com/repos/php/php-src/pulls/924,2014-11-26T08:24:17Z,2014-12-22T21:11:48Z,2014-12-12T16:49:13Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
138,3,50503474,927,Fix bug #67704: CURLOPT_POSTFIELDS modify the type of param base php-5.5,redfoxli,closed,,"curl_setopt will modify the type of param
the bugs is here: https://bugs.php.net/bug.php?id=67704

when the type of param is not string, we use a temp variable， then convert it to string, free the memory of the variable at last

bug fix base php-5.4 is here: https://github.com/php/php-src/pull/924
",https://api.github.com/repos/php/php-src/issues/927,https://github.com/php/php-src/pull/927,https://api.github.com/repos/php/php-src/pulls/927,2014-12-01T09:31:15Z,2017-01-02T08:41:35Z,2017-01-02T08:41:35Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
139,3,51028109,936,Fix bug #68532: convert.base64-encode omits padding bytes,mcq8,closed,,"The memory stream will now read as much as possible and only set the EOF when you try to read when there is nothing left.
This is the way file streams do it and apparently some filter algorithms as convert.base64-encode depend on it.
",https://api.github.com/repos/php/php-src/issues/936,https://github.com/php/php-src/pull/936,https://api.github.com/repos/php/php-src/pulls/936,2014-12-04T20:57:39Z,2015-02-07T13:43:19Z,2014-12-12T16:05:05Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
140,3,51295907,945,Wasted Shared Memory aboce 2Gb fix,jedi-pl,closed,,"When I set opcache.memory_consumption to 10240 (10Gb), it is possible to have more than 2Gb of wasted memory.

The Wasted memory variable in code is stored in signed int instead of size_t.

In fact I end up with negative value of wasted memory and wasted memory percentage, which is less than default 5% for scheduling the reload.

To replicate the problem set the opcache.memory_consumption to high value (3Gb)
Use opcache_compile_file and opcache_invalidate in loop with the same file until wasted memory rises above 2Gb

php.ini settings:

opcache.enable=1
opcache.enable_cli=0
opcache.memory_consumption=10240
opcache.interned_strings_buffer=16
opcache.max_accelerated_files=1048793
opcache.max_wasted_percentage=5
opcache.use_cwd=1
opcache.validate_timestamps=0
opcache.revalidate_freq=2
opcache.revalidate_path=1
opcache.save_comments=1
opcache.load_comments=1
opcache.error_log=/var/log/php-fpm.opcache.log
opcache.log_verbosity_level=1
",https://api.github.com/repos/php/php-src/issues/945,https://github.com/php/php-src/pull/945,https://api.github.com/repos/php/php-src/pulls/945,2014-12-08T12:15:43Z,2015-02-01T07:13:06Z,2015-02-01T07:13:06Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
141,3,51307304,946,Fixed Bug #65576 (Constructor from trait conflicts with inherited...),dunglas,closed,,"Fixed Bug #65576 (Constructor from trait conflicts with inherited constructor). See https://bugs.php.net/bug.php?id=65576

cc @meyerbaptiste
",https://api.github.com/repos/php/php-src/issues/946,https://github.com/php/php-src/pull/946,https://api.github.com/repos/php/php-src/pulls/946,2014-12-08T14:27:52Z,2014-12-12T15:20:11Z,2014-12-12T15:17:56Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
142,3,51421274,948,Fix bug #68571 : core dump when webserver close the socket,redfoxli,closed,,"the bug is here: https://bugs.php.net/bug.php?id=68571

There is several conditions when core dump
1 don't use error_log in php.ini.
2 a lot of stderr log generate
3 webserver close the socket after send the request(request timeout will lead the action)

from the  code of php, we know that 
1 output is base a buffer(out_buf)
2 out_pos point to the last address, out_pos - out_buf <= 8192 (the buffer's length)
3 if out_hdr is NULL, we let out_pos add sizeof(fcgi_header)
4 before write data to client, we will reset out_hdr to NULL(in function close_packet)

but when write stderr to client failed, there are two mistake
1 we don't reset the pos of out_pos
2 we don't check the return value of fcgi_write

so out_pos  add more and more sizeof(fcgi_header) until address out of bounds and core dump

I rest the pos of out_pos and check the return value of fcgi_write in my PR
",https://api.github.com/repos/php/php-src/issues/948,https://github.com/php/php-src/pull/948,https://api.github.com/repos/php/php-src/pulls/948,2014-12-09T12:24:31Z,2015-01-28T02:35:27Z,2015-01-27T14:16:20Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
143,3,51997160,959,Fixed phpinfo() issues since ad01fd8,mbeccati,closed,,,https://api.github.com/repos/php/php-src/issues/959,https://github.com/php/php-src/pull/959,https://api.github.com/repos/php/php-src/pulls/959,2014-12-15T15:16:16Z,2014-12-16T11:42:19Z,2014-12-16T11:42:07Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
144,3,53113686,968,Fixed bug #68371 PDO#getAttribute() cannot be called with platform-specific attribute names,mbeccati,closed,,"The PR is for 5.5. Merging up to 5.6 and master requires more changes.

Please do not merge. I will take care of it once Travis is happy.
",https://api.github.com/repos/php/php-src/issues/968,https://github.com/php/php-src/pull/968,https://api.github.com/repos/php/php-src/pulls/968,2014-12-30T12:51:50Z,2015-01-05T09:54:03Z,2015-01-05T09:50:51Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
145,3,53188924,971,Fix 61285 - SSL connections do not timeout,bbroerman30,closed,,"Updated xp_ssl.c to use non-blocking SSL read and write along with php_pollfd_for to perform a timed wait if data can not be read / written. Tested with blocking (no timeout set), and non-blocking IO 
",https://api.github.com/repos/php/php-src/issues/971,https://github.com/php/php-src/pull/971,https://api.github.com/repos/php/php-src/pulls/971,2014-12-31T15:38:33Z,2015-01-30T22:02:59Z,2015-01-23T06:06:38Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
146,3,53211883,973,Fix bug #65003 Wrong date diff,pasindud,closed,,"https://bugs.php.net/bug.php?id=65003

Fixed by only timelib_apply_localtime when zone is different, current date test passes. Hope this is correct.
",https://api.github.com/repos/php/php-src/issues/973,https://github.com/php/php-src/pull/973,https://api.github.com/repos/php/php-src/pulls/973,2015-01-01T03:03:30Z,2017-02-03T06:30:01Z,2017-02-03T06:29:56Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
147,3,53277620,974,Fix #49270: configure fails if PHP source folder path contains spaces,kassner,closed,,"Hi,

I added some basic escaping to buildconf files, so I hope it fixes [#49270](https://bugs.php.net/bug.php?id=49270).

Is there a way to test these changes? I guess `phpt` files aren't able to test this, am I wrong?
",https://api.github.com/repos/php/php-src/issues/974,https://github.com/php/php-src/pull/974,https://api.github.com/repos/php/php-src/pulls/974,2015-01-02T21:00:36Z,2017-01-07T08:36:31Z,2017-01-07T08:36:31Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
148,3,53311400,975,Fixes #66764 - configure doesn't define EXPANDED_DATADIR / PHP_DATADIR correctly,Tyrael,closed,,"as the bugreport explains the value for EXPANDED_DATADIR doesn't gets properly expanded.
it is borked since 5.4 when we moved from autoconf 2.13 to 2.59: http://3v4l.org/IpcgT
the reason is that there are some autoconf default values which were changed in autoconf 2.59c(http://lists.gnu.org/archive/html/automake/2006-04/msg00065.html) and datadir is now defaults to '$datarootdir' which in turn defaults to '${prefix}/share'
previously(before autoconf 2.59 so up to php 5.3 there was no datarootdir and datadir was defaulting to '${prefix}/share' so a single eval was enough to expand the path.
",https://api.github.com/repos/php/php-src/issues/975,https://github.com/php/php-src/pull/975,https://api.github.com/repos/php/php-src/pulls/975,2015-01-03T18:29:37Z,2015-01-05T04:55:52Z,2015-01-05T04:55:52Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
149,3,53885792,989,Crypt error-condition fixes,ircmaxell,closed,,"Crypt is currently documented to fail if provided invalid salts for STD_DES. The current implementation does not do so.

This can cause `crypt` to become silently insecure by falling back to STD_DES if there is a mistake in the salt format for another algorithm. For example:

```
$2y$40$10241354902359023523523
```

Will cause the output to be STD_DES rather than bcrypt in current PHP. This is because `40` is an invalid cost. Rather than erroring, a silent downgrade is occurring.

Since many codebases may be relying on this legacy behavior without realizing it, this PR adds an `E_DEPRECATED` error when an invalid DES salt is used.

This means the fallback behavior still will work today (so it won't break sites) but it will emit an error. In a future release this should be made a hard error (not falling back to DES but returning the `*0` error condition).
",https://api.github.com/repos/php/php-src/issues/989,https://github.com/php/php-src/pull/989,https://api.github.com/repos/php/php-src/pulls/989,2015-01-09T16:27:52Z,2015-02-01T06:21:47Z,2015-02-01T06:05:51Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
150,3,54139733,994,Added test and possible fix for https://bugs.php.net/bug.php?id=67068,Danack,closed,,"This is either a trivial bug, with a trivial fix, or ....there may be a cunning reason why this flag was not set.
",https://api.github.com/repos/php/php-src/issues/994,https://github.com/php/php-src/pull/994,https://api.github.com/repos/php/php-src/pulls/994,2015-01-13T01:36:11Z,2015-02-01T07:13:08Z,2015-02-01T07:13:07Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
151,3,54155995,995,Fix bug #68822 php-fpm - the result of access log is wrong when use fastcgi_finish_request,redfoxli,closed,,"the bug is here: https://bugs.php.net/bug.php?id=68822

When I use fastcgi_finish_request in php script,  I find the result of access log is wrong

I read the php-src, whe use fastcgi_finish_request, it will call fpm_request_finished(it will clean the value of  proc->accepted_epoch &&  proc->accepted ).
But, fpm_log_write need proc->accepted_epoch &&  proc->accepted to print the log
The process is like this：

```
main -> php_execute_script -> fastcgi_finish_request -> fcgi_close -> fpm_request_finished -> fpm_request_end -> fpm_log_write
```

So, I think it is a bug.
By the way,although my PR can solve the problem, but I think it is not very good. -_-||
",https://api.github.com/repos/php/php-src/issues/995,https://github.com/php/php-src/pull/995,https://api.github.com/repos/php/php-src/pulls/995,2015-01-13T06:33:52Z,2015-02-16T12:38:33Z,2015-02-16T12:38:33Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
152,3,54554642,1001,Fix null pointer dereferences,MegaManSec,closed,,"## 

Multiple places 'spprintf' is called with a NULL 'pbuf', which
passes itself to vspprintf, which dereferences it.

Although most places check whether 'pbuf'(normally called 'error')
is null, it is smarter to check it inside the function that
requires a non-null value.

This will avoid future problems, too.

See bug #68839 [https://bugs.php.net/bug.php?id=68839] for an example of NULL being passed to spprintf.
There are multiple other places checks are not used to confirm error/pbuf is not null.
",https://api.github.com/repos/php/php-src/issues/1001,https://github.com/php/php-src/pull/1001,https://api.github.com/repos/php/php-src/pulls/1001,2015-01-16T09:18:57Z,2015-01-20T20:03:55Z,2015-01-20T20:03:55Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
153,3,54802340,1009,Fix potential int overflow in date extension.,MegaManSec,closed,,"On 20/01/15 06:15, Joshua Rogers wrote:

> ## 
> 
>  ext/date/lib/tm2unixtime.c | 6 +++---
>  1 file changed, 3 insertions(+), 3 deletions(-)
> Somebody please take a look at /ext/date/lib/parse_tz.c too:

438timelib_sll timelib_get_current_offset(timelib_time *t)
[..]
446                        return (t->z + t->dst) \* -60;
Should that be cast timelib_sll too?

I think perhaps the function should be an int, seeing as it looks like the result should be negative. Somebody please check.
",https://api.github.com/repos/php/php-src/issues/1009,https://github.com/php/php-src/pull/1009,https://api.github.com/repos/php/php-src/pulls/1009,2015-01-19T19:23:10Z,2017-01-05T06:26:43Z,2017-01-05T06:26:43Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
154,3,55056862,1014,Lsapi ndef,MegaManSec,closed,,"Various non-serious security issues,  and some other stuff.
",https://api.github.com/repos/php/php-src/issues/1014,https://github.com/php/php-src/pull/1014,https://api.github.com/repos/php/php-src/pulls/1014,2015-01-21T18:22:46Z,2015-02-02T11:40:54Z,2015-02-02T11:40:54Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
155,3,55201829,1019,Fix bug #64938: libxml_disable_entity_loader setting is shared between threads,mj,closed,,"The availability of entity loading is stored in a module global which previously was only initialized in the GINIT constructor. This had the effect that disabling the entity loader in one request caused subsequent requests hitting the same Apache child process to  also have the loader disabled.

With this change the loader is explicitely enabled in the request init phase.
",https://api.github.com/repos/php/php-src/issues/1019,https://github.com/php/php-src/pull/1019,https://api.github.com/repos/php/php-src/pulls/1019,2015-01-22T20:05:42Z,2015-02-01T08:11:09Z,2015-02-01T08:11:09Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
156,3,55317841,1022,Fix segfaults with string_replace and string_ireplace,marcioAlmada,closed,,"Like in `ext/standard/tests/strings/str_replace_array_refs.phpt`:

``` php
<?php
$data = ['a' => 'b'];
$ref = &$data;
$b = &$ref['a'];
var_dump(str_replace(array_keys($data), $data, ""a""));
// segfault :~
```

And other possible very obscure situations involving object properties (with array values) being passed to `str_replace`:

``` php
<?php
$closure = function (array $array, array $keys, $value) {
    $current = &$array;
    foreach ($keys as $key) $current = &$current[$key];
    $current = $value;
    return $array;
};
class SomeClass { public $prop; }
$obj = new SomeClass;
$obj->prop = ['x' => 'property'];
$obj->prop = $closure($obj->prop, ['x'], 'a');
var_dump(str_replace(array_keys($obj->prop), $obj->prop, ""x property""));
```

PS: Problem is not present on PHP-5 and before, bug is only on master AFAIK.
",https://api.github.com/repos/php/php-src/issues/1022,https://github.com/php/php-src/pull/1022,https://api.github.com/repos/php/php-src/pulls/1022,2015-01-23T18:53:55Z,2015-01-27T12:30:29Z,2015-01-27T12:30:29Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
157,3,55616492,1032,do_fstat changes,MegaManSec,closed,,"Check return values of 'do_fstat' function in all places.
",https://api.github.com/repos/php/php-src/issues/1032,https://github.com/php/php-src/pull/1032,https://api.github.com/repos/php/php-src/pulls/1032,2015-01-27T13:19:42Z,2015-02-01T08:58:28Z,2015-02-01T08:58:28Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
158,3,56038343,1038,Fix for 61285 - SSL connections do not timeout,bbroerman30,closed,,"This is a fix for bug 61285 - SSL connections do not timeout, back-ported from trunk
",https://api.github.com/repos/php/php-src/issues/1038,https://github.com/php/php-src/pull/1038,https://api.github.com/repos/php/php-src/pulls/1038,2015-01-30T14:19:01Z,2016-04-05T17:11:35Z,2015-02-09T20:35:00Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
159,3,56161023,1041,Fix build in OSX with --enable-dtrace,guoxiao,closed,,,https://api.github.com/repos/php/php-src/issues/1041,https://github.com/php/php-src/pull/1041,https://api.github.com/repos/php/php-src/pulls/1041,2015-02-01T11:44:17Z,2015-02-07T03:34:29Z,2015-02-07T03:34:29Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
160,3,56465379,1046,Fixed bug #68638 pg_update() fails to store infinite values.,wfelipew,closed,,"Regex to check float values changed to accept ""infinity"" values and ignore case. 
Quotes are added to prevent syntax error on PostgreSQL.
",https://api.github.com/repos/php/php-src/issues/1046,https://github.com/php/php-src/pull/1046,https://api.github.com/repos/php/php-src/pulls/1046,2015-02-04T01:09:00Z,2016-06-03T12:49:56Z,2016-06-03T12:49:56Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
161,3,56524549,1047,Upgrade pcre to 8.36,arjenschol,closed,,"Fixes memory errors, see https://bugs.php.net/bug.php?id=68933

Upgraded using upgrade-pcre.php script in ext/pcre
",https://api.github.com/repos/php/php-src/issues/1047,https://github.com/php/php-src/pull/1047,https://api.github.com/repos/php/php-src/pulls/1047,2015-02-04T13:13:31Z,2015-02-06T10:31:06Z,2015-02-06T10:31:06Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
162,3,56769970,1057,Fixed serialization of non string values on __sleep,jrbasso,closed,,"Returning just `N;` (null) on the `__sleep` makes the number of fields/values be incomplete and corrupting the generated value from serialize, making impossible to unserialize it.

This was discussed on this thread: https://www.mail-archive.com/internals@lists.php.net/msg74014.html
",https://api.github.com/repos/php/php-src/issues/1057,https://github.com/php/php-src/pull/1057,https://api.github.com/repos/php/php-src/pulls/1057,2015-02-06T04:48:23Z,2015-03-23T03:36:17Z,2015-03-23T03:36:16Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
163,3,56829931,1060,Invalid free of CG(interned_empty_string),manuelm,closed,,"On failure php_escape_html_entities returns STR_EMPTY_ALLOC which is an
alias of CG(interned_empty_string) if interned strings are enabled.
Make sure we don't free this.

Fixes #68996
",https://api.github.com/repos/php/php-src/issues/1060,https://github.com/php/php-src/pull/1060,https://api.github.com/repos/php/php-src/pulls/1060,2015-02-06T16:01:32Z,2015-02-08T11:44:24Z,2015-02-08T11:44:24Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
164,3,56899301,1064,Fixed bug #69001: PHP crashed when calling zend_error during zend_startup,reeze,closed,,"https://bugs.php.net/bug.php?id=69001

When build with ZTS, if any function inside zend_startup() throws
any errors(invoke `zend_error()`) will crash PHP. such as: https://github.com/php/php-src/blob/master/Zend/zend_API.c#L1976 

This also move EG() fields's initialization from main.c to zend.c
or there will be a jmp depend on uninitialized value.

https://github.com/php/php-src/blob/594c220dea0a1f3bd5e5d7fa72f8e5d00d0d2e6a/Zend/zend.c#L985

This bugs seems exist from PHP4.0
",https://api.github.com/repos/php/php-src/issues/1064,https://github.com/php/php-src/pull/1064,https://api.github.com/repos/php/php-src/pulls/1064,2015-02-07T06:01:09Z,2015-02-12T03:32:02Z,2015-02-10T13:38:21Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
165,3,56901003,1067,Fix wrong format args warning of opcache,reeze,closed,,,https://api.github.com/repos/php/php-src/issues/1067,https://github.com/php/php-src/pull/1067,https://api.github.com/repos/php/php-src/pulls/1067,2015-02-07T07:11:51Z,2015-02-09T03:40:44Z,2015-02-09T03:40:44Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
166,3,57819307,1087,Fix for #69061 - Remove timestamp for mail.log = syslog,tomsommer,closed,,"Fix for #69061

- Remove timestamp when sending to syslog
- Make mail.log append correct PHP_EOL to file ",https://api.github.com/repos/php/php-src/issues/1087,https://github.com/php/php-src/pull/1087,https://api.github.com/repos/php/php-src/pulls/1087,2015-02-16T15:45:07Z,2017-01-14T12:59:34Z,2017-01-14T12:59:34Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
167,3,57859384,1090,Fix freeing null segfault. Added test for behaviour.,Danack,closed,,"An exception in an callback function for a custom collator function caused a segfault in PHP5.x. https://bugs.php.net/bug.php?id=68760

There is a different PR incoming for the behaviour in 7.
",https://api.github.com/repos/php/php-src/issues/1090,https://github.com/php/php-src/pull/1090,https://api.github.com/repos/php/php-src/pulls/1090,2015-02-16T22:35:17Z,2015-03-23T00:01:20Z,2015-03-23T00:01:20Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
168,3,57860090,1091,Sqlite3 exception7,Danack,closed,,"An exception in an callback function for a custom collator function should stop calling the callback function immediately. The change also suppresses the error message that duplicates the exception message. 

This is the 7 version of https://github.com/php/php-src/pull/1090 which addresses https://bugs.php.net/bug.php?id=68760
",https://api.github.com/repos/php/php-src/issues/1091,https://github.com/php/php-src/pull/1091,https://api.github.com/repos/php/php-src/pulls/1091,2015-02-16T22:43:23Z,2015-04-11T15:54:47Z,2015-03-22T23:49:43Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
169,3,58079783,1092,Fix for #68846,masakielastic,closed,,"mbstring miscaliculate the codepoint when converting string from GB18030 to UTF-32. This pull request add missing missing parentheses.

``` c
// http://icu-project.org/docs/papers/gb18030.html#h7
// uFirst = 0x10000;
// bFirst = [0x90, 0x30, 0x81, 0x30];

int linear(byte bytes[4]) {
    return ((bytes[0]*10+bytes[1])*126+bytes[2])*10+bytes[3];
}

 int mapToUnicode(byte bytes[4]) {
    int lin=linear(bytes);
    for each range {
        if(linear(bFirst)&lt;=lin&lt=linear(bLast)) {
            // range found
            return uFirst+(lin-linear(bFirst));
        }
    }
    // the byte sequence is not in any known range
    return error;
}
```
",https://api.github.com/repos/php/php-src/issues/1092,https://github.com/php/php-src/pull/1092,https://api.github.com/repos/php/php-src/pulls/1092,2015-02-18T15:11:18Z,2015-03-09T06:48:19Z,2015-03-09T06:48:19Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
170,3,58347063,1104,Fix #63486,jpauli,closed,,,https://api.github.com/repos/php/php-src/issues/1104,https://github.com/php/php-src/pull/1104,https://api.github.com/repos/php/php-src/pulls/1104,2015-02-20T12:40:06Z,2015-03-09T07:52:51Z,2015-03-09T06:45:39Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
171,3,58366005,1106,Fix #67626,jpauli,closed,,,https://api.github.com/repos/php/php-src/issues/1106,https://github.com/php/php-src/pull/1106,https://api.github.com/repos/php/php-src/pulls/1106,2015-02-20T15:16:20Z,2015-03-09T07:10:53Z,2015-03-09T06:45:39Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
172,3,59398017,1131,Bug #69151 - mb_ereg should reject ill-formed byte sequence,masakielastic,closed,,"This pull request add validation for encoding. Some of  ill-formed byte sequence can be converterted to dangerous ascii characters by legacy UTF-8 decoder without checking trailing bytes. `htmlspecharchars` and PCRE functions reject them. [Unicode Security Guide](http://websec.github.io/unicode-security-guide/character-transformations/#handling) shows example. ""C2 22 3C"" can be treated as ""C2 22"" + ""3C"". ""3C"" means ""<"".

``` php

// http://websec.github.io/unicode-security-guide/character-transformations/#handling
//
// Code point   First byte  Second byte Third byte  Fourth byte
// U+0000..U+007F   00..7F          
// U+0080..U+07FF   C2..DF  80..BF      
// U+0800..U+0FFF   E0  A0..BF  80..BF

$str = ""\xC2\x22\x3C"";
var_dump(
    """" === htmlspecialchars($str),
    false === preg_match('/./u', $str)
);
```
",https://api.github.com/repos/php/php-src/issues/1131,https://github.com/php/php-src/pull/1131,https://api.github.com/repos/php/php-src/pulls/1131,2015-03-01T14:36:22Z,2016-07-17T16:38:00Z,2016-07-17T16:38:00Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
173,3,59774908,1143,Fixed bug #68917 (parse_url fails on some partial urls),zxcvdavid,closed,,,https://api.github.com/repos/php/php-src/issues/1143,https://github.com/php/php-src/pull/1143,https://api.github.com/repos/php/php-src/pulls/1143,2015-03-04T10:02:13Z,2015-03-06T15:44:44Z,2015-03-06T13:09:20Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
174,3,59944214,1148,Fixes bug #69181 (csv parsing drops newlines within fields with SplFileObject::DROP_NEW_LINE),g105b,closed,,"This pull request fixes buggy behaviour when using `SplFileObject` to work with CSV files.

According to the documentation, the `DROP_NEW_LINE` flag drops newlines at the end of a line. http://php.net/manual/en/class.splfileobject.php#splfileobject.constants.drop-new-line

However, even though CSV files are obviously stored with new lines at the end of each line, the _fields within the CSV can also contain any number of newline characters, as long as they are quoted_. In this case, the bug appears, as the DROP_NEW_LINE flag causes c function `strcspn` to remove the first, and only the first, newline from the entire row of fields.

My solution is to ignore the `strcspn` function when parsing CSV files, because if there _are_ any newlines within fields, the fields MUST be delimited, therefore no newlines should be dropped within the delimiters.
",https://api.github.com/repos/php/php-src/issues/1148,https://github.com/php/php-src/pull/1148,https://api.github.com/repos/php/php-src/pulls/1148,2015-03-05T12:19:33Z,2017-01-04T08:38:35Z,2017-01-04T07:51:16Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
175,3,60042325,1152,Fix #66590: imagewebp() sometimes returns broken image,POPSuL,closed,,"This pull-request based on https://bugs.php.net/bug.php?id=66590#1390869798
",https://api.github.com/repos/php/php-src/issues/1152,https://github.com/php/php-src/pull/1152,https://api.github.com/repos/php/php-src/pulls/1152,2015-03-06T00:54:00Z,2015-08-06T13:09:08Z,2015-08-06T13:09:08Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
176,3,60055205,1153,Fix #68948: Revert "Fix bug #68532: convert.base64-encode omits padding ...,slusarz,closed,,"...bytes""

This reverts commit 86f18755362b594c519ccde37c3b3f98158b591e.

This is incorrect based on the current text of the PHP documentation
and, more important, broke backward compatibility with PHP < 5.5.21 and
< 5.6.5
",https://api.github.com/repos/php/php-src/issues/1153,https://github.com/php/php-src/pull/1153,https://api.github.com/repos/php/php-src/pulls/1153,2015-03-06T03:43:14Z,2017-01-04T23:22:31Z,2017-01-04T23:22:31Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
177,3,60200506,1159,fixed Bug #68621,Neeke,closed,,"The ZipArchive::open treats the filename not as defined per php manual on valid file wrappers. It appends the filename to the base url. Hence, creating/manipulating a zip file in memory space would be impossible.

https://bugs.php.net/bug.php?id=68621
",https://api.github.com/repos/php/php-src/issues/1159,https://github.com/php/php-src/pull/1159,https://api.github.com/repos/php/php-src/pulls/1159,2015-03-07T10:16:17Z,2015-03-09T04:20:52Z,2015-03-09T04:20:52Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
178,3,60261531,1162,Adjust logic in sanity checks.,whatthejeff,closed,,"The code should return false when the provided options argument is neither an
array nor a valid filter.
",https://api.github.com/repos/php/php-src/issues/1162,https://github.com/php/php-src/pull/1162,https://api.github.com/repos/php/php-src/pulls/1162,2015-03-08T15:32:53Z,2015-03-09T04:02:49Z,2015-03-09T04:02:49Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
179,3,60630841,1169,Double fastcgi_end_request on max_children limit (bug #67583),Berbe,closed,,"PHP sends 2 FastCGI `FCGI_END_REQUEST` records instead of one when `fastcgi_finish_request();` is called and the FPM param `max_requests` is exceeded.
- One is sent on `fastcgi_finish_request();` call
- The other is sent in block `fpm_main.c:1951 requests++; if (max_requests && (requests == max_requests)) { fcgi_finish_request(&request, 1); break; }`

It confuses fastcgi client (i.e. nginx) receiving 2 FCGI_END_REQUEST records one after another.
The author has set the `request->closed` flag to prevent a second FastCGI record to be sent.

See https://bugs.php.net/bug.php?id=67583
",https://api.github.com/repos/php/php-src/issues/1169,https://github.com/php/php-src/pull/1169,https://api.github.com/repos/php/php-src/pulls/1169,2015-03-11T09:27:36Z,2017-01-07T21:59:29Z,2017-01-05T06:43:37Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
180,3,64083562,1196,Php 5.5 spl class extend https://bugs.php.net/bug.php?id=69275,Danack,closed,,"Fix https://bugs.php.net/bug.php?id=69275 constructor not called correctly for extended class.

When a user specifies which class should be created for each 'file object' by having set `$fileInfo->setFileClass('TestFileObject');` the constructor was not being called correctly, with arguments 3 and 4 being missed entirely, and with argument 2 being hard-coded to 'r' aka read only. The change is to call the constructor properly. As the constructor has more than 2 args, I refactored zend_call_method to allow arbitrary number of params.

This PR probably needs discussion before merging. 
",https://api.github.com/repos/php/php-src/issues/1196,https://github.com/php/php-src/pull/1196,https://api.github.com/repos/php/php-src/pulls/1196,2015-03-24T19:43:09Z,2017-01-01T19:39:41Z,2017-01-01T19:39:41Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
181,3,64163554,1197,Fix #62172: FPM not working with Apache httpd 2.4 balancer/fcgi setup,haught,closed,,"mod_proxy_balancer uses proxy:balancer:// instead of proxy:fcgi:// for its prefix. This patch simply adds support for this prefix based off of proxy:fcgi.
",https://api.github.com/repos/php/php-src/issues/1197,https://github.com/php/php-src/pull/1197,https://api.github.com/repos/php/php-src/pulls/1197,2015-03-25T03:34:57Z,2016-01-29T09:27:37Z,2016-01-29T09:27:37Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
182,3,64820420,1202,Fix bug 69291,Danack,closed,,"Fix bug testing whether timestamp. When validate_timestamps is set to 0, the timestamp field is not set, and so should not be used for testing whether the script is valid or not.

https://bugs.php.net/bug.php?id=69281

Probably needs to be applied to all versions.
",https://api.github.com/repos/php/php-src/issues/1202,https://github.com/php/php-src/pull/1202,https://api.github.com/repos/php/php-src/pulls/1202,2015-03-27T18:13:36Z,2015-04-02T01:13:49Z,2015-04-02T01:13:49Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
183,3,65386074,1207,Fixed bug #69336 (Parsing error of strtotime),zxcvdavid,closed,,"I found this problem from: https://twitter.com/laruence/status/582766663705083904
This problem can be reproduced if the day num we are parsing is smaller than today's num.

Example:
Today is 31/03/2015, we want get the last day of April
Today is 29/05/2015, we want get the last day of Feb.
",https://api.github.com/repos/php/php-src/issues/1207,https://github.com/php/php-src/pull/1207,https://api.github.com/repos/php/php-src/pulls/1207,2015-03-31T07:27:00Z,2015-03-31T15:38:32Z,2015-03-31T15:38:32Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
184,3,65586889,1210,Fixed bug #69325 (php_copy_file_ex does not pass the argument),zxcvdavid,closed,,,https://api.github.com/repos/php/php-src/issues/1210,https://github.com/php/php-src/pull/1210,https://api.github.com/repos/php/php-src/pulls/1210,2015-04-01T02:17:41Z,2015-04-07T02:29:03Z,2015-04-07T02:28:58Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
185,3,66430958,1219,Fix #69374 IntlDateFormatter::formatObject returns wrong utf8 value,micti,closed,,"We can use simple ICU UnicodeString constructor or UnicodeString::fromUTF8
",https://api.github.com/repos/php/php-src/issues/1219,https://github.com/php/php-src/pull/1219,https://api.github.com/repos/php/php-src/pulls/1219,2015-04-05T11:57:02Z,2016-06-02T20:49:43Z,2016-06-02T20:49:43Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
186,3,66489547,1222,Fix #69373 References to deleted XPath query results,ttoohey,closed,,"xmlNodeSetContentLen() calls xmlFreeNode() on node->children. This causes
problems if there are other references around to those children.
",https://api.github.com/repos/php/php-src/issues/1222,https://github.com/php/php-src/pull/1222,https://api.github.com/repos/php/php-src/pulls/1222,2015-04-05T22:25:32Z,2017-02-03T06:37:25Z,2017-02-03T06:37:21Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
187,3,66744801,1223,Fixed Bug #68276 Reproducible memory corruption: openssl extension,wfelipew,closed,,"PHP leaves error on the openssl queue if the developer don't call openssl_error_string() for each ssl call. This behaviour makes a landmine for every lib that use OpenSSL that not clean the error queue before IO calls.

I propose a patch to clean the error queue on libpq before the IO operations, but this can't be applied because on current versions because this can break currently applications. 

This pull request is my proposal to solve the problem on PHP side, by not left a landmine on openssl error queue for other applications, without broke currently ""openssl_error_string"" behaviour. 

This consist of an internal ssl error context on PHP, and clean de original ssl error queue after store on the internal queue.

Please see https://bugs.php.net/bug.php?id=68276 for more details.
",https://api.github.com/repos/php/php-src/issues/1223,https://github.com/php/php-src/pull/1223,https://api.github.com/repos/php/php-src/pulls/1223,2015-04-07T01:19:22Z,2016-06-19T16:03:23Z,2016-06-19T15:57:35Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
188,3,66911141,1225,Fixed phpdbg build broken when dtrace enabled,reeze,closed,,"This also fixed a zend_string related warning.
",https://api.github.com/repos/php/php-src/issues/1225,https://github.com/php/php-src/pull/1225,https://api.github.com/repos/php/php-src/pulls/1225,2015-04-07T15:08:33Z,2015-09-02T15:37:23Z,2015-09-02T15:37:23Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
189,3,68355846,1238,"Bug 61116 - HTML functions use encoding, not charset",masakielastic,closed,,"This pull request applies vrana's [patch](https://bugs.php.net/bug.php?id=61116) and fixes inconsistencies between PHP's manual and argument's info.
",https://api.github.com/repos/php/php-src/issues/1238,https://github.com/php/php-src/pull/1238,https://api.github.com/repos/php/php-src/pulls/1238,2015-04-14T12:26:14Z,2015-04-19T03:42:34Z,2015-04-19T03:42:34Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
190,3,68827901,1239,fixes confusing SQLDescribeParam error message,cmb69,closed,,"The function is called SQLDescribeParam and not SQLDescribeParameter.
",https://api.github.com/repos/php/php-src/issues/1239,https://github.com/php/php-src/pull/1239,https://api.github.com/repos/php/php-src/pulls/1239,2015-04-16T02:13:38Z,2015-07-12T23:03:05Z,2015-04-19T03:45:52Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
191,3,70603395,1248,PoC patch for bug #69111,yohgaki,closed,,"This PoC patch for bug #69111. I didn't even try to compile it because I think this is not needed.
https://bugs.php.net/bug.php?id=69111

I would rather deprecate use of previous save handler functions as ""base"" class method for SessionHandler. Session module has too many states already and inheriting previous save handler functions is not mandatory. (I'm going to implement ""user serialize handler"", so crypt/etc can be done with it for internal save handlers)
",https://api.github.com/repos/php/php-src/issues/1248,https://github.com/php/php-src/pull/1248,https://api.github.com/repos/php/php-src/pulls/1248,2015-04-24T06:36:37Z,2017-01-05T06:57:46Z,2017-01-05T06:57:41Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
192,3,72469654,1256,Expand path names in php-fpm.service,maxnet,closed,,"Currently the PHP build creates a non-working php-fpm.service systemd service file that looks like:

```
[Unit]
Description=The PHP FastCGI Process Manager
After=syslog.target network.target

[Service]
Type=simple
PIDFile=${prefix}/var/run/php-fpm.pid
ExecStart=${exec_prefix}/sbin/php-fpm --nodaemonize --fpm-config ${prefix}/etc/php-fpm.conf
ExecReload=/bin/kill -USR2 $MAINPID

[Install]
WantedBy=multi-user.target
```

Change this to use the expanded path names instead of ${prefix}
",https://api.github.com/repos/php/php-src/issues/1256,https://github.com/php/php-src/pull/1256,https://api.github.com/repos/php/php-src/pulls/1256,2015-05-01T16:33:43Z,2017-01-05T06:55:58Z,2017-01-05T06:55:18Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
193,3,72479664,1257,return FALSE instead of NULL from ZipArchive::getStream when php_stream_...,cmb69,closed,,"...zip_open() fails (fixes #67161)
",https://api.github.com/repos/php/php-src/issues/1257,https://github.com/php/php-src/pull/1257,https://api.github.com/repos/php/php-src/pulls/1257,2015-05-01T17:28:59Z,2015-07-12T23:01:55Z,2015-05-12T12:36:42Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
194,3,73491084,1262,Fix #69579: Invalid free with extension trait,jbboehr,closed,,"For bug: https://bugs.php.net/bug.php?id=69579
",https://api.github.com/repos/php/php-src/issues/1262,https://github.com/php/php-src/pull/1262,https://api.github.com/repos/php/php-src/pulls/1262,2015-05-06T02:20:53Z,2016-09-22T10:52:16Z,2016-09-22T10:52:16Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
195,3,74260527,1265,Fix #48147 - implement manual handling of  //IGNORE for broken libc,smalyshev,closed,,,https://api.github.com/repos/php/php-src/issues/1265,https://github.com/php/php-src/pull/1265,https://api.github.com/repos/php/php-src/pulls/1265,2015-05-08T07:09:13Z,2015-05-10T02:29:46Z,2015-05-10T02:29:46Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
196,3,74267292,1266,Fix #69521 Segfault in gc_collect_cycles().,arjenschol,closed,,"Correctly destroy zval see https://bugs.php.net/bug.php?id=69521
",https://api.github.com/repos/php/php-src/issues/1266,https://github.com/php/php-src/pull/1266,https://api.github.com/repos/php/php-src/pulls/1266,2015-05-08T07:36:35Z,2015-07-02T10:48:58Z,2015-07-02T10:48:58Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
197,3,75473388,1270,Fix bug #69625 php-fpm return http 200 response  without SCRIPT_FILENAME,cfc4n,closed,,"BUG report: https://bugs.php.net/bug.php?id=69625

In nginx config.conf file, configure info without fastcgi_param  SCRIPT_FILENAME default ,  http://trac.nginx.org/nginx/browser/nginx/conf/fastcgi_params  Any PHP files are returned blank response and  http 200 status.  

Because init_request_info function set default http response status 200, request_method is null in fpm_main.c near line 985. And if SCRIPT_FILENAME was not set in CGI protocol, SG(request_info).request_method \ SG(sapi_headers).http_response_code will not be reset . 

The program will terminate at ""if (!SG(request_info).request_method)"" near line 1838 in fpm_main.c , 

But http response status was 200 ,In fact it's a bug , The http response will be 404 , There is comment in fpm_main.c near line 1846 ""/\* If path_translated is NULL, terminate here with a 404 */"" .

So, I think the code of SG(request_info).path_translated determine should be placed in front of SG(request_info).request_method . Move line 1846-1855 into line 1835 .

more detail : http://www.cnxct.com/php-return-empty-result-on-nginx-without-script_filename/

当CGI包里没有SCRIPT_FILENAME时，php-fpm返回空白响应，http 200的问题。FPM日志中没记录，HTTP响应状态 200，很难排插原因。从fpm代码里可以看到，其实作者是有考虑到没有SCRIPT_FILENAME的问题的，只是判断顺序搞错了，故调整顺序。（英语不太好，我还是写中文吧 ,请@laruence  确认一下。）
",https://api.github.com/repos/php/php-src/issues/1270,https://github.com/php/php-src/pull/1270,https://api.github.com/repos/php/php-src/pulls/1270,2015-05-12T05:41:09Z,2017-01-05T07:15:10Z,2017-01-05T07:15:10Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
198,3,75788235,1273,Fixed bug #68776,yohgaki,closed,,"https://bugs.php.net/bug.php?id=68776
",https://api.github.com/repos/php/php-src/issues/1273,https://github.com/php/php-src/pull/1273,https://api.github.com/repos/php/php-src/pulls/1273,2015-05-13T00:21:18Z,2015-07-10T21:00:18Z,2015-06-10T04:41:51Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
199,3,76155098,1278,fix #69628: complex GLOB_BRACE fails on Windows,cmb69,closed,,"The problem is that `pl` is advanced to `pm` after an opening bracket has been encountered, so the characters before the last opening bracket are ignored. This might be a deliberate design decision (allow only one bracketed expression inside a braced alternative), but it looks more like a bug. Furthermore multiple bracketed expressions inside a braced alternative seem to be supported by *nix implementations.

The suggested patch solves this by using another temporary variable (`pb`) to mark the position of the most recent left bracket.

With regard to bug69628.phpt: I copied sort_var_dump() from glob_basic.phpt and used it, even though sorting should happen automatically unless GLOB_NOSORT is used.
",https://api.github.com/repos/php/php-src/issues/1278,https://github.com/php/php-src/pull/1278,https://api.github.com/repos/php/php-src/pulls/1278,2015-05-13T23:07:35Z,2015-07-12T22:59:02Z,2015-05-21T06:55:56Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
200,3,77778380,1285,fix #64878: 304 responses return Content-Type header,cmb69,closed,,,https://api.github.com/repos/php/php-src/issues/1285,https://github.com/php/php-src/pull/1285,https://api.github.com/repos/php/php-src/pulls/1285,2015-05-18T19:37:26Z,2015-06-27T12:41:13Z,2015-06-27T12:40:57Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
201,3,77802770,1286,fix #69655: php -S changes MKCALENDAR request method,cmb69,closed,,,https://api.github.com/repos/php/php-src/issues/1286,https://github.com/php/php-src/pull/1286,https://api.github.com/repos/php/php-src/pulls/1286,2015-05-18T20:55:33Z,2015-07-12T22:53:24Z,2015-06-27T16:29:17Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
202,3,78759317,1291,Fix #50678: files extracted by ZipArchive class lost their original mtime,cmb69,closed,,"It might be considered to trigger an E_NOTICE if setting of the mtime fails, but that might even be a bigger BC break as the patch is now. Not sure…
",https://api.github.com/repos/php/php-src/issues/1291,https://github.com/php/php-src/pull/1291,https://api.github.com/repos/php/php-src/pulls/1291,2015-05-21T00:31:47Z,2017-02-22T09:55:49Z,2017-02-22T09:07:29Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
203,3,78960388,1294,Make the phar symlink relative,Ponce,closed,,"or we got a symlink pointing to the build files
thanks also to remicollet (see also https://github.com/php/php-src/pull/1288)
",https://api.github.com/repos/php/php-src/issues/1294,https://github.com/php/php-src/pull/1294,https://api.github.com/repos/php/php-src/pulls/1294,2015-05-21T11:49:42Z,2015-05-22T00:26:23Z,2015-05-21T12:10:49Z,0,2017-03-25 15:19:02,2017-03-25 15:19:02
204,3,78976628,1296,Fix bug #69679: DOMDocument::loadHTML refuses to accept NULL bytes,cmb69,closed,,"Maybe the test should be reduced to not check for the saved HTML for stability?
",https://api.github.com/repos/php/php-src/issues/1296,https://github.com/php/php-src/pull/1296,https://api.github.com/repos/php/php-src/pulls/1296,2015-05-21T12:38:28Z,2015-06-26T23:31:19Z,2015-06-26T23:30:52Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
205,3,82164387,1308,#69724: pm.ondemand forks fewer child workers than it should,bjaspan,closed,,"This PR is a proposed solution to https://bugs.php.net/bug.php?id=69724.  The changes are subtle and to critical code within FPM, so it needs a careful review.  I took the liberty of starting a new file, DESIGN.md, to document how FPM works internally.  This allowed me to describe the complete situation and how this change solves it.
",https://api.github.com/repos/php/php-src/issues/1308,https://github.com/php/php-src/pull/1308,https://api.github.com/repos/php/php-src/pulls/1308,2015-05-28T23:12:47Z,2017-01-11T16:45:09Z,2017-01-06T05:53:31Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
206,3,82521171,1310,Fix GD/T1Lib tests #69698,Metalaka,closed,,"Follow [Remove T1Lib support (see #69698)](https://github.com/php/php-src/commit/7dcfdbbee431c93c52605e1df323d18e0c6088e9) @KalleZ 

I'm not familiar with compilation so if someone can take a look at [travis/compile.sh#L60](https://github.com/php/php-src/blob/4b9299d155316e4e49d87d3941eab1ca95b2462a/travis/compile.sh#L60)
",https://api.github.com/repos/php/php-src/issues/1310,https://github.com/php/php-src/pull/1310,https://api.github.com/repos/php/php-src/pulls/1310,2015-05-29T17:48:27Z,2015-06-04T11:52:12Z,2015-06-02T05:57:58Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
207,3,84571363,1319,fix memory leak in pdo_pgsql closeCursor (bug 69752),pilif,closed,,"the parent PDO closeCursor method resets the pdo_stmt_t's executed flag
which is used by the postgres driver as a flag to check whether to
allocate memory for the column data or not.

This means that after the parent closeCursor() has been called, the
pdo_pgsql driver will allocate a new buffer for the columns, so the
existing buffer should be freed when the cursor is being closed.
",https://api.github.com/repos/php/php-src/issues/1319,https://github.com/php/php-src/pull/1319,https://api.github.com/repos/php/php-src/pulls/1319,2015-06-03T13:42:54Z,2015-06-10T15:45:39Z,2015-06-10T15:45:39Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
208,3,84814276,1321,Fix #54138 - DOMNode::getLineNo() doesn't return line number higher than 65535,cmb69,closed,,"Actually, the issue is fixed upstream as of libxml2 2.9.0 by introducing XML_PARSE_BIG_LINES, so this PR adds two tests (bug54138_1.phpt and bug54138_2.phpt to verify this).

Additionally, this PR adds the constant LIBXML_BIGLINES to PHP (plus a respective test bug54138.phpt).
",https://api.github.com/repos/php/php-src/issues/1321,https://github.com/php/php-src/pull/1321,https://api.github.com/repos/php/php-src/pulls/1321,2015-06-03T23:22:17Z,2015-07-12T22:48:33Z,2015-06-08T08:17:01Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
209,3,84838186,1323,Fix #69551 - parse_ini_file() and parse_ini_string() segmentation fault,cmb69,closed,,"The fix is pretty much obvious; for details see [bug #69551](https://bugs.php.net/bug.php?id=69551).
",https://api.github.com/repos/php/php-src/issues/1323,https://github.com/php/php-src/pull/1323,https://api.github.com/repos/php/php-src/pulls/1323,2015-06-04T00:44:36Z,2015-07-12T22:47:54Z,2015-06-10T08:50:30Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
210,3,85530548,1327,Fix #53823 - empty matches could result in garbled UTF-8 despite u modifier,cmb69,closed,,"When advancing after empty matches, `php_pcre_match_impl()` as well as `php_pcre_replace_impl()` always advance to the next byte instead of the next code point when the `u` modifier is given. This may result in garbled UTF-8 results, and maybe in match errors. This PR fixes that.

Note that this issue has been fixed for `php_pcre_split_impl()` [long ago](https://github.com/php/php-src/commit/0330fb2cbf5b8d2f96aaa6f1de114e86d3dbbcfc). I've noticed that, only after having already implemented another solution: instead of using an additional PCRE, the string is iterated over looking for UTF-8 start sequences. The latter solution is more lightweight than the former, so it seems approrpiate to do it this way. The already implemented solution for `php_pcre_split_impl()` could be replaced, but as it is not broken, it seems reasonable to keep it – at least for PHP 5.

I've tested the patches on Windows 7 and Ubuntu 14.04 (bundled PCRE lib only).
",https://api.github.com/repos/php/php-src/issues/1327,https://github.com/php/php-src/pull/1327,https://api.github.com/repos/php/php-src/pulls/1327,2015-06-05T13:12:15Z,2015-07-12T22:46:53Z,2015-06-23T17:47:44Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
211,3,85665568,1328,Fix bug #67805 - SplFileObject setMaxLineLength.,willianveiga,closed,,,https://api.github.com/repos/php/php-src/issues/1328,https://github.com/php/php-src/pull/1328,https://api.github.com/repos/php/php-src/pulls/1328,2015-06-06T00:45:49Z,2015-06-09T18:22:10Z,2015-06-08T09:57:06Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
212,3,85752979,1329,Fix bug #61221 - imagegammacorrect function loses alpha channel,cmb69,closed,,"When applying imagegammacorrect() the alpha channel is now fully retained, instead of being completely lost.

I've tested this on Windows 7 and Ubuntu 14.04 (bundled GD lib only).

@pierrejoye @remicollet Please have a look at this PR. The patch seems to be straight forward, and I don't expect it to be a real BC break, because likely nobody used imagegammacorrect() on images with alpha channel (at least without [manual correction](http://stackoverflow.com/questions/3303639/php-gd2-how-to-maintain-alpha-channel-transparency-and-correct-gamma#3314151)). At least this might be merged into master for PHP 7.
",https://api.github.com/repos/php/php-src/issues/1329,https://github.com/php/php-src/pull/1329,https://api.github.com/repos/php/php-src/pulls/1329,2015-06-06T13:28:44Z,2015-07-12T22:45:42Z,2015-06-17T00:33:05Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
213,3,86562419,1336,Fix #69551 - parse_ini_file() and parse_ini_string() segmentation fault,cmb69,closed,,"This PR is basically the same as #1323, but is based on the PHP-5.5 branch.
",https://api.github.com/repos/php/php-src/issues/1336,https://github.com/php/php-src/pull/1336,https://api.github.com/repos/php/php-src/pulls/1336,2015-06-09T11:26:38Z,2015-07-12T22:43:46Z,2015-06-10T08:51:22Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
214,3,88425353,1343,fixes bug #69835: phpinfo() does not report many Windows SKUs,wenz,closed,,"Adding ~50 SKUs
",https://api.github.com/repos/php/php-src/issues/1343,https://github.com/php/php-src/pull/1343,https://api.github.com/repos/php/php-src/pulls/1343,2015-06-15T13:20:38Z,2015-06-18T20:07:25Z,2015-06-18T20:07:25Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
215,3,89454975,1350,Fixed Bug #69874 : Can't set empty additional_headers for mail(),yohgaki,closed,,"There was a null additional header bug test, but it enables mail.add_x_header which adds additional headers.
This PR fixes the bug and add test case for true null additional headers.
",https://api.github.com/repos/php/php-src/issues/1350,https://github.com/php/php-src/pull/1350,https://api.github.com/repos/php/php-src/pulls/1350,2015-06-19T03:22:14Z,2015-08-04T16:44:02Z,2015-06-29T07:32:33Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
216,3,90649664,1360,*[Sessions]: Now session is accessible if process is ran by root.,EvgeniySpinov,closed,,"Fixing bug: https://bugs.php.net/bug.php?id=69582

Use case: session is initiated by Apache with non-root permissions. Later on, session could be accessed by backend process, which runs under root, but needs to communicate with same session data as Apache process.

Didn't work before this commit: session file is owned by non-root, process owner != file owner, so this triggered file handle closure.
",https://api.github.com/repos/php/php-src/issues/1360,https://github.com/php/php-src/pull/1360,https://api.github.com/repos/php/php-src/pulls/1360,2015-06-24T11:30:03Z,2017-01-06T10:17:36Z,2017-01-06T06:09:15Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
217,3,91089115,1366,Proposal: Send CLIENT_SSL Only If Server Supports,jrchamp,closed,,"Please test before merging. My goal is to point to an issue we ran into: If you tell PHP to use SSL if it is available and PHP tries to connect to MySQL that does not support SSL, it will still send the CLIENT_SSL capability. The MySQL handshake process sees the CLIENT_SSL capability and treats the bytes that follow as a TLS handshake. This fails with the message ""Bad Handshake"".
",https://api.github.com/repos/php/php-src/issues/1366,https://github.com/php/php-src/pull/1366,https://api.github.com/repos/php/php-src/pulls/1366,2015-06-25T22:06:01Z,2017-01-04T14:44:30Z,2017-01-04T14:44:30Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
218,3,91657072,1373,Fix #67447: imagecrop() adds a black line when cropping,cmb69,closed,,"A simple one-off error: imagecrop)() copied only width-1 and height-1 pixels.

Apparently, the loops are running until `< -1` instead of `<= -1`, but perhaps I'm overlooking something. @pierrejoye @remicollet: okay to merge? PHP 5.6+?

BTW, the external libgd is not affected, because it's delegating to [gdImageCopy()](https://github.com/libgd/libgd/blob/master/src/gd_crop.c#L27).
",https://api.github.com/repos/php/php-src/issues/1373,https://github.com/php/php-src/pull/1373,https://api.github.com/repos/php/php-src/pulls/1373,2015-06-29T00:03:36Z,2015-07-12T22:39:27Z,2015-07-12T21:21:07Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
219,3,92742865,1384,Segmentation fault on pdo_dblib::nextRowset (bug #69757),MiRacLe-RPZ,closed,,"Workaround for handling ""unnamed"" fields in dblib's resultset. Code was copied from ext/mssql/php_mssql.c.
",https://api.github.com/repos/php/php-src/issues/1384,https://github.com/php/php-src/pull/1384,https://api.github.com/repos/php/php-src/pulls/1384,2015-07-02T21:47:49Z,2015-07-03T07:35:46Z,2015-07-03T07:35:28Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
220,3,92813631,1386,Segmentation fault on pdo_dblib::nextRowset (bug #69757),MiRacLe-RPZ,closed,,"Workaround for handling ""unnamed"" fields in dblib's resultset. Code was copied from ext/mssql/php_mssql.c.
",https://api.github.com/repos/php/php-src/issues/1386,https://github.com/php/php-src/pull/1386,https://api.github.com/repos/php/php-src/pulls/1386,2015-07-03T07:33:27Z,2016-06-27T08:27:24Z,2015-10-18T09:41:34Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
221,3,93528447,1395,Fix #70001: Assigning to DOMNode::textContent does additional entity …,cmb69,closed,,"…encoding

Assigning to DOMNode::textContent encodes entities, what does not match the
behavior of DOMText::__construct() and DOMDocument::createTextNode. This patch
changes the behavior of DOMNode::textContent in this regard.

IMO the former behavior is a bug, but changing the behavior would constitute a BC break (there may be code working around the issue), so perhaps it would be best to apply the patch for PHP 7 only.
",https://api.github.com/repos/php/php-src/issues/1395,https://github.com/php/php-src/pull/1395,https://api.github.com/repos/php/php-src/pulls/1395,2015-07-07T13:17:11Z,2015-09-04T23:46:19Z,2015-09-04T23:36:41Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
222,3,94084638,1401,fix segfault when the statement is actually empty,nikita2206,closed,,"In `assert` it will segfault trying to generate code from this for example: `(function () { return true;; })()` (extra semicolon creates an empty stmt)
",https://api.github.com/repos/php/php-src/issues/1401,https://github.com/php/php-src/pull/1401,https://api.github.com/repos/php/php-src/pulls/1401,2015-07-09T15:49:17Z,2015-07-16T20:33:55Z,2015-07-16T20:33:55Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
223,3,94292687,1408,Fix #70029: nodeValue of DOMElement list content of children nodes,cmb69,closed,,"According to the W3C DOM Core Level 3 specification [DOMElement::nodeValue is
supposed to yield null](http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-F68D080), but currently the DOM extension yield the result of
calling xmlNodeGetContent(), what is the concatenation of the values of the
children of the element. This patch fixes the non standard behavior.

Due to the obvious BC break it might be best to apply the patch only against master (i.e. PHP 7).
",https://api.github.com/repos/php/php-src/issues/1408,https://github.com/php/php-src/pull/1408,https://api.github.com/repos/php/php-src/pulls/1408,2015-07-10T11:51:08Z,2015-09-05T00:04:46Z,2015-09-05T00:04:30Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
224,3,94797416,1416,Fix #63174 - mt_rand() fails when given range exceeding PHP_INT_MAX,bishopb,closed,,"Requesting a MT random number in a range that exceeds PHP_INT_MAX causes overflow, which then results in a non-uniform distribution of random numbers.  Examples:

```
$rand = mt_rand(PHP_INT_MIN, PHP_INT_MAX); // causes overflow $rand will be disproportionately 0
```

Fixed as follows. If overflow would not happen, proceed as before scaling into the desired range.  If overflow would happen, (a) scale the number into the negative range, (b) scale the number into the positive range, and (c) add them together.  While not technically a BC breakage, it's possible that someone was relying on the old behavior which produced disproportionately more zero values.  Advise if this should be back patched.

See: https://bugs.php.net/bug.php?id=63174
",https://api.github.com/repos/php/php-src/issues/1416,https://github.com/php/php-src/pull/1416,https://api.github.com/repos/php/php-src/pulls/1416,2015-07-13T19:51:51Z,2015-09-23T15:58:58Z,2015-09-23T15:58:30Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
225,3,95394107,1421,"modify for while nginx fastcgi keepalive enabled ,when the max reques…",chunshengster,closed,,"modify for while nginx fastcgi keepalive enabled ,when the max reques(MAX_REQUEST in php_fpm.conf) counter reached , fpm will close(req->fd) directly ，with no shutdown() and wait for the packets that nginx returned . the last reponse to nginx will fail because php-fpm will return ""Reset"" tcp packet.
",https://api.github.com/repos/php/php-src/issues/1421,https://github.com/php/php-src/pull/1421,https://api.github.com/repos/php/php-src/pulls/1421,2015-07-16T09:41:32Z,2017-01-06T06:20:06Z,2017-01-06T06:20:06Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
226,3,96027100,1426,Patch for bug #69860,dyeldandi,closed,,"For PHP-5.5 branch
",https://api.github.com/repos/php/php-src/issues/1426,https://github.com/php/php-src/pull/1426,https://api.github.com/repos/php/php-src/pulls/1426,2015-07-20T09:47:56Z,2016-03-03T16:50:32Z,2016-03-03T16:50:32Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
227,3,96027152,1427,Backported patch for bug #69860,dyeldandi,closed,,"For PHP-5.6 branch
",https://api.github.com/repos/php/php-src/issues/1427,https://github.com/php/php-src/pull/1427,https://api.github.com/repos/php/php-src/pulls/1427,2015-07-20T09:48:21Z,2017-02-09T14:06:57Z,2017-01-01T12:52:54Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
228,3,96090830,1430,Fix #70103: ZipArchive::addGlob ignores remove_all_path option,cmb69,closed,,"When the remove_all_path option is set, but no add_path option, remove_all_path
is simply ignored. This patch fixes this.

The PR is against master, but this should be merged to PHP 5.6 as well.
",https://api.github.com/repos/php/php-src/issues/1430,https://github.com/php/php-src/pull/1430,https://api.github.com/repos/php/php-src/pulls/1430,2015-07-20T15:37:33Z,2017-01-06T05:42:45Z,2017-01-06T05:42:29Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
229,3,96548516,1432,Fix Bug #69865,m6w6,closed,,"php-fpm does not close stderr when using syslog

Someone with FPM knowledge should have another look.
",https://api.github.com/repos/php/php-src/issues/1432,https://github.com/php/php-src/pull/1432,https://api.github.com/repos/php/php-src/pulls/1432,2015-07-22T11:47:03Z,2017-01-24T07:42:29Z,2017-01-23T16:57:27Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
230,3,96556671,1433,Fix Bug #68207,m6w6,closed,,"Setting fastcgi.error_header can result in an E_WARNING being triggered

Add check for SG(headers_sent)
",https://api.github.com/repos/php/php-src/issues/1433,https://github.com/php/php-src/pull/1433,https://api.github.com/repos/php/php-src/pulls/1433,2015-07-22T12:26:35Z,2017-01-01T16:39:07Z,2017-01-01T16:39:07Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
231,3,96807145,1435,Fix #36365: scandir duplicates file name at every 65535th file,cmb69,closed,,"Due to DIR.offset being declared as short we have an overflow. This patch
changes the field to int.

unsigned int seems to be more logical, but as it was signed before, I didn't want to change that. The change from short to int increases the size of DIR on 32bit systems, but that seems to be neglectable (DIR is a large structure, anyway), so it seems a bitfield is unnecessary.

Anyhow, this patch is an ABI break, and as such is most likely unsuitable for PHP 5.6, unfortunately.

I have not added a regression test, because that would be a _very_ slow test, and I consider it highly unlikely that somebody will revert the field to short in the future.

PS: the bug as well as this patch affects Windows only.
",https://api.github.com/repos/php/php-src/issues/1435,https://github.com/php/php-src/pull/1435,https://api.github.com/repos/php/php-src/pulls/1435,2015-07-23T12:55:59Z,2015-07-27T23:13:41Z,2015-07-27T23:13:21Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
232,3,97095871,1438,Add support for regenerating phpdbg lexers and scanners on Windows,cmb69,closed,,"The Windows build currently ignores Makefile.frag, so one would have to regenerate the parser and lexer of sapi/phpdbg manually after changes. This patch adds the required rules to the Windows Makefile template to automate the process, when needed.
",https://api.github.com/repos/php/php-src/issues/1438,https://github.com/php/php-src/pull/1438,https://api.github.com/repos/php/php-src/pulls/1438,2015-07-24T17:19:49Z,2015-07-27T22:40:03Z,2015-07-27T22:38:58Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
233,3,99940318,1465,Fix #69487: SAPI may truncate POST data,cmb69,closed,,"If SG(request_info).request_body can't be completely written (e.g. due to a
full drive), only parts of the POST data will be available. This patch changes
this, so that SG(request_info).request_body will be reset in this case, and a
warning will be thrown.
",https://api.github.com/repos/php/php-src/issues/1465,https://github.com/php/php-src/pull/1465,https://api.github.com/repos/php/php-src/pulls/1465,2015-08-09T23:36:13Z,2015-08-10T23:49:23Z,2015-08-10T23:49:23Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
234,3,101088458,1470,"Fixed bug #67707 IV not needed for ECB encryption mode, but it returns a warning",mcq8,closed,,,https://api.github.com/repos/php/php-src/issues/1470,https://github.com/php/php-src/pull/1470,https://api.github.com/repos/php/php-src/pulls/1470,2015-08-14T19:37:28Z,2017-01-11T04:33:26Z,2017-01-10T22:45:56Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
235,3,101762943,1478,Fix inconsistency with group use and leading `\`,marcioAlmada,closed,,"There's still an ongoing discussion at http://news.php.net/php.internals/87774
",https://api.github.com/repos/php/php-src/issues/1478,https://github.com/php/php-src/pull/1478,https://api.github.com/repos/php/php-src/pulls/1478,2015-08-18T22:27:02Z,2015-08-19T08:41:21Z,2015-08-19T08:41:21Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
236,3,102495474,1482,Fix zend_fetch_debug_backtrace() when EG(current_execute_data) == NULL.,LawnGnome,closed,,"This is a regression from PHP 5, which never attempted to dereference fields in the execute data without first checking if it was NULL.
",https://api.github.com/repos/php/php-src/issues/1482,https://github.com/php/php-src/pull/1482,https://api.github.com/repos/php/php-src/pulls/1482,2015-08-22T01:57:11Z,2015-11-09T09:15:57Z,2015-11-09T09:15:50Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
237,3,103084533,1490,Fix #70361: HTTP stream wrapper doesn't close keep-alive connections,kelunik,closed,,"https://bugs.php.net/bug.php?id=70361
",https://api.github.com/repos/php/php-src/issues/1490,https://github.com/php/php-src/pull/1490,https://api.github.com/repos/php/php-src/pulls/1490,2015-08-25T18:09:25Z,2015-09-04T14:38:04Z,2015-09-04T14:38:04Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
238,3,104720811,1500,Fix #70417: PharData::compress() doesn't close temp file,cmb69,closed,,"According to the comment, it has not been deemed necessary to close compressed
files. However, we don't want to keep unclosed file handles to save ressources.
So we're also closing compressed archives, if they're not aliased.

I'm not 100% sure if the patch is correct, so it would be good if someone could carefully review it.
",https://api.github.com/repos/php/php-src/issues/1500,https://github.com/php/php-src/pull/1500,https://api.github.com/repos/php/php-src/pulls/1500,2015-09-03T15:22:09Z,2017-01-11T04:36:22Z,2017-01-05T13:32:46Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
239,3,105090798,1504,Fix bug #69737 - Segfault when SplMinHeap::compare produces fatal error,masterwto,closed,,"Fix bug #69737 - Segfault when SplMinHeap::compare produces fatal error
see http://git.php.net/?p=php-src.git;a=commit;h=1cbd25ca15383394ffa9ee8601c5de4c0f2f90e1

解决了PHP 'spl_heap_object_free_storage()' 释放后重利用本地利用代码执行漏洞
参考 http://git.php.net/?p=php-src.git;a=commit;h=1cbd25ca15383394ffa9ee8601c5de4c0f2f90e1
",https://api.github.com/repos/php/php-src/issues/1504,https://github.com/php/php-src/pull/1504,https://api.github.com/repos/php/php-src/pulls/1504,2015-09-06T12:03:31Z,2015-09-28T20:57:25Z,2015-09-28T20:57:25Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
240,3,105263776,1510,Bug #70451 and #70452,kalaspuffar,closed,,"Added the test cases explained in the bug report.
Implemented a fix using a new error checking method. 
Trying to use similar conventions as other error methods. 

https://bugs.php.net/bug.php?id=70451
https://bugs.php.net/bug.php?id=70452
",https://api.github.com/repos/php/php-src/issues/1510,https://github.com/php/php-src/pull/1510,https://api.github.com/repos/php/php-src/pulls/1510,2015-09-07T20:21:13Z,2016-04-08T13:32:41Z,2016-04-08T13:32:41Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
241,3,107373815,1528,ZEND_COMPILE_GUARDS compiler option,krakjoe,closed,,"See PR #1524 for conversation, this is the tidiest solution, we think.
",https://api.github.com/repos/php/php-src/issues/1528,https://github.com/php/php-src/pull/1528,https://api.github.com/repos/php/php-src/pulls/1528,2015-09-20T05:26:04Z,2015-09-23T13:36:27Z,2015-09-23T13:36:27Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
242,3,107494645,1529,access to dynamic array  GC_G(buf) out of bound,feilengcui008,closed,,"Here:
GC_G(last_unused) = &GC_G(buf)[GC_ROOT_BUFFER_MAX_ENTRIES];
the access for GC_G(buf)[GC_ROOT_BUFFER_MAX_ENTRIES] is out of the malloc size bound.
though it may not be easily triggered
",https://api.github.com/repos/php/php-src/issues/1529,https://github.com/php/php-src/pull/1529,https://api.github.com/repos/php/php-src/pulls/1529,2015-09-21T11:48:23Z,2015-11-08T12:04:06Z,2015-11-08T12:04:06Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
243,3,107759478,1534,Avoid database query in getColumnMeta for pdo_pgsql connector,jbylund,closed,,"I think there are a handful of bugs related to this issue.  Essentially the current behavior is to run a query per column of the result set, even though we usually know the data type in most instances.  This avoids the roundtrips for common types, but still does a roundtrip for user types.

Should close: https://bugs.php.net/bug.php?id=62498 (possibly related duplicates)
",https://api.github.com/repos/php/php-src/issues/1534,https://github.com/php/php-src/pull/1534,https://api.github.com/repos/php/php-src/pulls/1534,2015-09-22T17:15:35Z,2016-04-05T13:42:30Z,2016-04-05T13:42:30Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
244,3,107955442,1535,Bug #70561: Fix DirectoryIterator to throw OutOfBoundsException,bishopb,closed,,"DirectoryIterator implements SeekableIterator, which ""should throw an
OutOfBoundsException if the position is not seekable"". As is, seek just returns
and one must call valid(). This approach is different than most (all?) other
SeekableIterator implementations and leads to developer confusion. See the
[bug report](https://bugs.php.net/bug.php?id=70561) for a specific example.
",https://api.github.com/repos/php/php-src/issues/1535,https://github.com/php/php-src/pull/1535,https://api.github.com/repos/php/php-src/pulls/1535,2015-09-23T16:16:16Z,2015-10-19T00:58:50Z,2015-10-19T00:58:50Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
245,3,108056798,1536,OpCache Windows bug fix,mattficken,closed,,"Just by unlocking around Sleep() the OpenFileMapping loop will work. Holding the lock in that loop will not only block detach_segments() but will also block other PHPs from reattaching in accel_startup().

Checking the base address used when this issue occurs during some of my stress testing, most of the time the base address used is the first in vista_mapping_base_set.

This is the same/similar issue as the Apache2 issue described in the note for that loop. Unlocking around Sleep() fixes the majority of this issue.
",https://api.github.com/repos/php/php-src/issues/1536,https://github.com/php/php-src/pull/1536,https://api.github.com/repos/php/php-src/pulls/1536,2015-09-24T04:34:52Z,2015-12-14T11:00:34Z,2015-12-14T11:00:34Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
246,3,108454940,1538,Bug #52098 Own PDOStatement implementation ignore __call(),kalaspuffar,closed,,"Tried to solve bug #52098 by adding a fallback so the get_method handler of the class also runs the standard get_method handler and returns the result of this call when a database function could not be found.
",https://api.github.com/repos/php/php-src/issues/1538,https://github.com/php/php-src/pull/1538,https://api.github.com/repos/php/php-src/pulls/1538,2015-09-26T10:45:45Z,2016-03-21T14:53:54Z,2016-03-21T14:53:53Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
247,3,108456022,1539,Bug #52098 for PHP7,kalaspuffar,closed,,"Tried to solve bug #52098 by adding a fallback so the get_method handler of the class also runs the standard get_method handler and returns the result of this call when a database function could not be found.
",https://api.github.com/repos/php/php-src/issues/1539,https://github.com/php/php-src/pull/1539,https://api.github.com/repos/php/php-src/pulls/1539,2015-09-26T11:04:52Z,2015-10-19T07:44:47Z,2015-10-19T05:49:12Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
248,3,108491633,1540,Bug #64172 errorInfo is not properly cleaned up,kalaspuffar,closed,,"Added a check to see if the error code is PDO_ERR_NONE then we don't ask for more error information.
- Check if the SQLSTATE error code is equal to PDO_ERR_NONE before we ask the driver. And if no error is reported skip the extra call to the driver.
- Added a test to check that errorInfo is not filled with the old statement error message.
- Changed pdo_mysql/rests/pdo_mysql_stmt_errorinfo.phpt so It checks for NULL values when SQLSTATE error code is PDO_ERR_NONE so we follow manual page for PDO::errorInfo()
",https://api.github.com/repos/php/php-src/issues/1540,https://github.com/php/php-src/pull/1540,https://api.github.com/repos/php/php-src/pulls/1540,2015-09-26T19:54:49Z,2015-10-19T05:55:39Z,2015-10-19T01:00:37Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
249,3,108491838,1541,Bug #64172 for PHP7,kalaspuffar,closed,,"Added a check to see if the error code is PDO_ERR_NONE then we don't ask for more error information.
- Check if the SQLSTATE error code is equal to PDO_ERR_NONE before we ask the driver. And if no error is reported skip the extra call to the driver.
- Added a test to check that errorInfo is not filled with the old statement error message.
- Changed pdo_mysql/rests/pdo_mysql_stmt_errorinfo.phpt so It checks for NULL values when SQLSTATE error code is PDO_ERR_NONE so we follow manual page for PDO::errorInfo()
",https://api.github.com/repos/php/php-src/issues/1541,https://github.com/php/php-src/pull/1541,https://api.github.com/repos/php/php-src/pulls/1541,2015-09-26T19:55:47Z,2015-10-19T05:54:43Z,2015-10-19T00:58:34Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
250,3,110703884,1561,Bug #64705 errorInfo property of PDOException is null when PDO::__construct() fails,kalaspuffar,closed,,"Changes:
- Extended zend_throw_exception_ex and created a pdo_throw_exception_ex that will populate the errorInfo property of the PDOException class.
- Added testcase for Bug #64705 errorInfo property of PDOException is null when PDO::__construct() fails.
-  Changed all drivers so they use pdo_throw_exception_ex instead of zend_throw_exception_ex.

Tested with:
- DSN sqlite - sqlite memory database
- DSN mysql - mysql database locally
- DSN pgsql - postgresql database locally
- DSN odbc - db2 database locally
- DSN firebird - firebird database locally
- DSN oci - oracle database locally
- DSN dblib - mssql database Amazon EC2
",https://api.github.com/repos/php/php-src/issues/1561,https://github.com/php/php-src/pull/1561,https://api.github.com/repos/php/php-src/pulls/1561,2015-10-09T17:33:19Z,2017-01-06T07:11:12Z,2017-01-06T06:24:01Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
251,3,110800097,1562,Replace `Z_LVAL_PP` with `Z_LVAL_P`,yui-knk,closed,,"`Z_LVAL_PP` is removed by f4cfaf36e23ca47da3e352e1c60909104c059647.
In the commit, `Z_LVAL_P` was moved to `Zend/zend_types.h` but
`Z_LVAL_PP` was only deleted from `Zend/zend_operators.h` .
",https://api.github.com/repos/php/php-src/issues/1562,https://github.com/php/php-src/pull/1562,https://api.github.com/repos/php/php-src/pulls/1562,2015-10-10T15:20:08Z,2016-03-03T22:29:08Z,2016-03-03T22:29:08Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
252,3,111046017,1571,Fix bug #70430,nikic,closed,,,https://api.github.com/repos/php/php-src/issues/1571,https://github.com/php/php-src/pull/1571,https://api.github.com/repos/php/php-src/pulls/1571,2015-10-12T20:07:19Z,2015-10-18T23:31:59Z,2015-10-18T23:31:59Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
253,3,111471515,1574,Update random.c,paragonie-scott,closed,,"Ref: https://github.com/jedisct1/libsodium/commit/beb826f6fd173cff4473c8b7614033dbd4803500
",https://api.github.com/repos/php/php-src/issues/1574,https://github.com/php/php-src/pull/1574,https://api.github.com/repos/php/php-src/pulls/1574,2015-10-14T19:17:21Z,2015-10-21T19:14:26Z,2015-10-18T23:27:30Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
254,3,111934502,1581,Fix bug #50845 - use correct offset to read data,smalyshev,closed,,"Would be glad for someone who knows EXIF to validate this.
",https://api.github.com/repos/php/php-src/issues/1581,https://github.com/php/php-src/pull/1581,https://api.github.com/repos/php/php-src/pulls/1581,2015-10-17T00:42:58Z,2016-06-14T18:20:36Z,2016-06-14T18:20:35Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
255,3,111946677,1582,Fix #46564 precision bug in bcmod,liborm85,closed,,"PR fixed bug #46564 in bcmod. Now is supported decimal number.

This bug is not in 3rd party library (as write in ticket), but is in PHP.
",https://api.github.com/repos/php/php-src/issues/1582,https://github.com/php/php-src/pull/1582,https://api.github.com/repos/php/php-src/pulls/1582,2015-10-17T06:18:02Z,2017-01-07T18:12:11Z,2017-01-07T18:11:53Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
256,3,112566228,1588,Issue #69442: Implemented fix for incorrect filedescriptor closing,jaytaph,closed,,"This PR fixes issue 69442, which was discovered through some functionality within the Symfony2 framework: https://github.com/symfony/symfony/issues/12643

Basically, it only manifests itself when PTS is enabled. This isn't the case in a standard PHP distribution, however, Ubuntu/Debian SRPM adds a patch to enabled this functionality (note that the patch itself does not include the functionality, it only ENABLES the already present functionality).

I've added a PHPT test, as created initially by @ewgRa (some additional effort has been taken to skip the test if PTY is not supported, i'm sure there are better ways to achieve the same goal in a less fragile way).
",https://api.github.com/repos/php/php-src/issues/1588,https://github.com/php/php-src/pull/1588,https://api.github.com/repos/php/php-src/pulls/1588,2015-10-21T11:28:49Z,2017-01-06T07:01:59Z,2017-01-06T07:01:59Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
257,3,113174585,1602,Fix bug #70781 (Extension tests fail on dynamic ext dependency),flaupretre,closed,,"Please see bug report for more information.

This fix allows extension tests to run when the extension depends on another (dynamically loaded) one.

It could be improved because some warning messages are still displayed in informational messages but, the most important is that the tests run.
",https://api.github.com/repos/php/php-src/issues/1602,https://github.com/php/php-src/pull/1602,https://api.github.com/repos/php/php-src/pulls/1602,2015-10-24T17:57:31Z,2015-12-09T10:13:59Z,2015-12-09T10:13:59Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
258,3,113627973,1607,Additional validation for parse_url() for login/pass components,iliaal,closed,,"Added validation to parse_url() to prohibit restricted characters inside login/pass components based on RFC3986 
",https://api.github.com/repos/php/php-src/issues/1607,https://github.com/php/php-src/pull/1607,https://api.github.com/repos/php/php-src/pulls/1607,2015-10-27T16:43:28Z,2016-10-07T23:15:52Z,2015-12-22T17:13:10Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
259,3,114693741,1616,Fix #70842: Streams related segfault,cchamplin,closed,,"Make sure stream context is set to null to prevent use after free
",https://api.github.com/repos/php/php-src/issues/1616,https://github.com/php/php-src/pull/1616,https://api.github.com/repos/php/php-src/pulls/1616,2015-11-02T22:01:03Z,2015-11-09T04:03:58Z,2015-11-09T03:59:51Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
260,3,115355545,1620,Bug70840,marcosptf,closed,,"like serhiy.shkolyarenko said in bug description, the names of russia city is wrong, i've fixed and write and fix the test about this bug.
",https://api.github.com/repos/php/php-src/issues/1620,https://github.com/php/php-src/pull/1620,https://api.github.com/repos/php/php-src/pulls/1620,2015-11-05T19:27:22Z,2015-12-24T13:58:35Z,2015-12-24T13:58:35Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
261,3,115736387,1624,Fix >2G Content-Length headers in apache2handler.,LawnGnome,closed,,"I intend to merge this (to 5.6 and 7.0) after 7.0.0 is released. Nowhere near important enough to merge in an RC cycle; I'm just opening the PR so I don't lose the fix.

Related bug: https://bugs.php.net/70879
",https://api.github.com/repos/php/php-src/issues/1624,https://github.com/php/php-src/pull/1624,https://api.github.com/repos/php/php-src/pulls/1624,2015-11-08T14:17:43Z,2016-02-24T15:10:34Z,2016-02-24T13:51:14Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
262,3,117011989,1640,Fix #70901 - PDO memory leak,JohnOhl,closed,,"The PDO destructor is never properly called to free a PDO object
",https://api.github.com/repos/php/php-src/issues/1640,https://github.com/php/php-src/pull/1640,https://api.github.com/repos/php/php-src/pulls/1640,2015-11-15T19:18:26Z,2017-01-06T07:07:50Z,2017-01-06T07:07:50Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
263,3,118664996,1649,Fix bug #63217,TazeTSchnitzel,closed,,"Fixes https://bugs.php.net/bug.php?id=63217

I wouldn't merge this just yet, as the current fix most likely hurts performance, as it removes a buggy optimisation. I am going to try and add a replacement optimisation which doesn't have the same issue.

The nature of the bug means that fixing it is possibly a BC break, although one very unlikely to have any impact. For that reason, I'd prefer for it to go into 7.0.0.
",https://api.github.com/repos/php/php-src/issues/1649,https://github.com/php/php-src/pull/1649,https://api.github.com/repos/php/php-src/pulls/1649,2015-11-24T17:38:21Z,2017-02-23T14:58:30Z,2017-02-22T23:09:01Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
264,3,119502654,1653,Test + Fix for #68078,wjzijderveld,closed,,"Fixes https://bugs.php.net/bug.php?id=68078 (and partially https://bugs.php.net/bug.php?id=68506)
",https://api.github.com/repos/php/php-src/issues/1653,https://github.com/php/php-src/pull/1653,https://api.github.com/repos/php/php-src/pulls/1653,2015-11-30T14:27:44Z,2016-02-02T09:54:03Z,2016-01-29T14:31:55Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
265,3,121057213,1667,Fix T_*_CAST syntax issues that caused argument list edge cases,marcioAlmada,closed,,"Second, and more complete, attempt after #1629. Example of edge case: https://3v4l.org/eE5bq

``` php
<?php

const INT = 1;

function foo(){};

foo(INT);
```

> Parse error: syntax error, unexpected '(INT)' (int) (T_INT_CAST) in /in/eE5bq on line 7

Relates to #1633, in some way
",https://api.github.com/repos/php/php-src/issues/1667,https://github.com/php/php-src/pull/1667,https://api.github.com/repos/php/php-src/pulls/1667,2015-12-08T17:27:54Z,2016-11-13T23:32:49Z,2016-11-13T23:22:11Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
266,3,121443574,1668,Implement FR #55651: (Option to ignore the returned FTP PASV address),kaplanlior,closed,,"This patch waits 4 years for review, while a lot of people complain (e.g. number of votes).

More info also at http://www.elitehosts.com/blog/php-ftp-passive-ftp-server-behind-nat-nightmare/
",https://api.github.com/repos/php/php-src/issues/1668,https://github.com/php/php-src/pull/1668,https://api.github.com/repos/php/php-src/pulls/1668,2015-12-10T09:46:17Z,2015-12-15T11:39:56Z,2015-12-15T11:39:56Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
267,3,122392845,1677,Fix 2 segfaults in the range() function,tpunt,closed,,"Both segfaults occur due to accuracy lost when representing 64bit longs as
doubles.

The segfaults can be replicated with:

``` PHP
range(PHP_INT_MIN + 513, PHP_INT_MIN); // Seg fault on line 2236
range(PHP_INT_MAX - 512, PHP_INT_MAX); // Seg fault on line 2249
```

This fixes [Bug #71132](https://bugs.php.net/bug.php?id=71132)
",https://api.github.com/repos/php/php-src/issues/1677,https://github.com/php/php-src/pull/1677,https://api.github.com/repos/php/php-src/pulls/1677,2015-12-15T23:31:22Z,2015-12-24T14:46:39Z,2015-12-24T14:46:39Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
268,3,122805893,1681,Fix #71152: mt_rand() returns the different values from original mt19937ar.c,kusano,closed,,,https://api.github.com/repos/php/php-src/issues/1681,https://github.com/php/php-src/pull/1681,https://api.github.com/repos/php/php-src/pulls/1681,2015-12-17T19:30:54Z,2016-02-23T02:57:25Z,2016-02-17T03:36:03Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
269,3,123508080,1690,Fix more segfaults in range function,tpunt,closed,,"The segfaults are caused by precision loss of large longs being converted to doubles when the `step` parameter is a double. The for loops continue infinitely since the `step` being added/subtracted upon each iteration is too small to be represented accurately as a double.

The segfaults can be reproduced with:

``` php
var_dump(count(range(PHP_INT_MIN, PHP_INT_MIN + 513, .01)));
var_dump(count(range(PHP_INT_MIN + 513, PHP_INT_MIN, .01)));
```

This fixes Bug #71197
",https://api.github.com/repos/php/php-src/issues/1690,https://github.com/php/php-src/pull/1690,https://api.github.com/repos/php/php-src/pulls/1690,2015-12-22T16:02:23Z,2015-12-24T14:46:54Z,2015-12-24T14:46:54Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
270,3,123809772,1695,Fix range() segfaults,tpunt,closed,,"The following PR fixes bug #71132 and bug #71197. See PR #1677 and PR #1690, respectively, for more information on them.

I've also tidied up range() a little bit:
- Rename `RANGE_CHECK_INIT_ARRAY` to `RANGE_CHECK_DOUBLE_INIT_ARRAY` to better distinguish its purpose from the new `RANGE_CHECK_LONG_INIT_ARRAY` macro
- Remove superfluous fabs() calls in `RANGE_CHECK_DOUBLE_INIT_ARRAY` (and useless ternary check in `php_error_docref` for the same macro)
",https://api.github.com/repos/php/php-src/issues/1695,https://github.com/php/php-src/pull/1695,https://api.github.com/repos/php/php-src/pulls/1695,2015-12-24T14:44:55Z,2016-01-12T07:31:56Z,2016-01-11T20:31:16Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
271,3,124132589,1700,Fix object->array and array->object casts for numeric properties,TazeTSchnitzel,closed,,,https://api.github.com/repos/php/php-src/issues/1700,https://github.com/php/php-src/pull/1700,https://api.github.com/repos/php/php-src/pulls/1700,2015-12-28T22:01:56Z,2016-10-17T15:26:10Z,2016-10-17T15:26:10Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
272,3,124678282,1713,Patch for bug #71270,libnex,closed,,"Proposed patch for bug #71270
",https://api.github.com/repos/php/php-src/issues/1713,https://github.com/php/php-src/pull/1713,https://api.github.com/repos/php/php-src/pulls/1713,2016-01-03T23:27:58Z,2016-01-06T07:02:48Z,2016-01-06T07:02:48Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
273,3,125534547,1719,Fix various bugs in interbase,laruence,closed,,"Also read: https://marc.info/?l=php-internals&m=145077389117375&w=2

Note: This is patch is not complete,  there are still 3 tests fails ,  but it need someone who is familar with firebird 's help.

anyway, this patch could make the current state of ext/interbase better 
",https://api.github.com/repos/php/php-src/issues/1719,https://github.com/php/php-src/pull/1719,https://api.github.com/repos/php/php-src/pulls/1719,2016-01-08T03:23:37Z,2016-01-11T11:02:11Z,2016-01-11T11:02:11Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
274,3,125735718,1720,Fix bug #71269,mickael9,closed,,"When an fpm child handles more than one request, zend_signal_startup() will override the saved signal handlers with the internal zend handlers set from the previous request, causing a SIGQUIT signal to result in a core dump rather than gracefully exiting (the expected behaviour).

This is fixed by adding a call to zend_signal_init() after setting the signal handlers in the child. The same technique is used in the apache SAPI module in commit fd5a756ad44124ffa7e9a5810a31ff49e91708cf which addresses bug #61083.
",https://api.github.com/repos/php/php-src/issues/1720,https://github.com/php/php-src/pull/1720,https://api.github.com/repos/php/php-src/pulls/1720,2016-01-09T03:57:39Z,2016-02-15T05:27:01Z,2016-02-15T05:25:32Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
275,3,126186294,1726,Fixed header file include in readline_cli.c,RustJason,closed,,"This file should include header file of `config.h`, Because this macro `HAVE_LIBEDIT` are defined in it.
Otherwise `HAVE_LIBEDIT` will always equals `0`, This cause several bugs, for example:
when I have libedit compiled, It still using `append_histroy()` in here: [append_histroy](https://github.com/RustJason/php-src/blob/74993ffb99ba8450d6feefcb8ecb9bf965a3fc54/ext/readline/readline_cli.c#L664-L667)

```
➜  readline  php -a
Interactive mode enabled

php > echo ""a"";
php: symbol lookup error: /usr/local/php/php7.0.0/lib/php/extensions/no-debug-non-zts-20151012/readline.so: undefined symbol: append_history
```

At least this patch fixed my problem. 
Thanks.
",https://api.github.com/repos/php/php-src/issues/1726,https://github.com/php/php-src/pull/1726,https://api.github.com/repos/php/php-src/pulls/1726,2016-01-12T14:04:30Z,2016-01-15T10:45:31Z,2016-01-15T08:23:31Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
276,3,127066481,1729,Fixes PHP bug 66331,mkoppanen,closed,,"At the moment userland classes cannot inherit from an extension class that is using ZEND_SEND_PREFER_REF instead of ZEND_SEND_REF.

This bug manifests in for example php-memcached-dev/php-memcached#126

I cannot figure out a good test to write for this issue because it requires an internal class.
",https://api.github.com/repos/php/php-src/issues/1729,https://github.com/php/php-src/pull/1729,https://api.github.com/repos/php/php-src/pulls/1729,2016-01-17T00:53:38Z,2017-01-24T10:36:11Z,2017-01-06T07:32:13Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
277,3,128088665,1736,Update php_dns.h - fixes memory leak.,zaydogan,closed,,"You need to call res_ndestroy() to free memory, otherwise you will leak a file descriptor on NetBSD or leak memory on FreeBSD and other operating systems. Please see the resolver man page at: http://man.netbsd.org/cgi-bin/man-cgi?resolver++NetBSD-current
""res_ndestroy() should be called to free memory allocated by res_ninit() after last use."".
I found the bug on NetBSD 7.0 with php 7.0.2, but it also affects php 5.6.14 and probably previous versions.
Here is a test-script to reproduce the memory leak:
<?php
for ($i = 0; $i < 50000; $i++) {
        echo $i . "": "";
        var_dump(checkdnsrr(""www.netbsd.org"", ""A""));
}
While running this script, have a look how the php process grows because of the memory leak.
",https://api.github.com/repos/php/php-src/issues/1736,https://github.com/php/php-src/pull/1736,https://api.github.com/repos/php/php-src/pulls/1736,2016-01-22T05:39:04Z,2017-01-11T04:32:03Z,2017-01-07T14:44:36Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
278,3,130526668,1748,fix bug #71317 by checking for duplicate filenames and using the last…,zghosts,closed,,"bug [#71317](https://bugs.php.net/bug.php?id=71317) is caused by tar files having duplicate filenames.
Apparently several PEAR packages seem to suffer from this problem making it imposible to install them using composer when running php 7 since is uses Phardata->extractTo to extract the files

HTML_CSS-1.5.4.tgz is an example of this as a testfile for the testcase, bug71317.phpt.

Tar by default overwrites duplicate files, so I tried to mirror this behaviour when parsing the tar file by checking if the filename exists in the hash table, and if it does updating it with the entry of the newly found entry with the same name.

I'm not a C programmer so this will probably need some review.
",https://api.github.com/repos/php/php-src/issues/1748,https://github.com/php/php-src/pull/1748,https://api.github.com/repos/php/php-src/pulls/1748,2016-02-02T00:14:49Z,2016-02-29T21:50:34Z,2016-02-29T21:50:34Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
279,3,131017599,1751,fixes bug#71504 (php5.6 version of php7.0 bug#71317),zghosts,closed,,"As reflected in bug report [#71504](https://bugs.php.net/bug.php?id=71504) tar files with duplicate filenames cause a memoryleak, silently ignoring subsequent entry contrary to the behavour of tar which silently overwrite previous entries.

This pr mitigates the memory leak in the same way as pr #1748 does for php 7.0
",https://api.github.com/repos/php/php-src/issues/1751,https://github.com/php/php-src/pull/1751,https://api.github.com/repos/php/php-src/pulls/1751,2016-02-03T12:59:46Z,2016-02-29T21:51:48Z,2016-02-29T21:51:48Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
280,3,131476266,1753,"Fix bug #71525 (Calls to date_modify will mutate timelib_rel_time, causing date_date_set issues)",Sean-Der,closed,,"timelib_time->timelib_rel_time is mutated by date_modify, and because it is never zero'ed out it latters causes other date operations to fail (like date_date_set)

https://bugs.php.net/bug.php?id=71525
",https://api.github.com/repos/php/php-src/issues/1753,https://github.com/php/php-src/pull/1753,https://api.github.com/repos/php/php-src/pulls/1753,2016-02-04T21:16:30Z,2016-02-18T04:59:28Z,2016-02-15T07:26:59Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
281,3,131516015,1755,Bugfix 71519 - return serialNumberHex from openssl_x509_parse,xrobau,closed,,"Currently, openssl_x509_parse only returns an integer as the Serial Number.

This can be unexpected, as the common way of handling serial numbers is by treating them as a hex string.

This is compounded by php's dechex() function being unable to handle >32 bit numbers which will leave people trying to handle large serial numbers frustrated.

By adding this extra return variable to openssl_x509_parse, the consumer of the variable is certain that the serialNumberHex that is returned is exactly the same Hex Serial number as OpenSSL returns everywhere else.
",https://api.github.com/repos/php/php-src/issues/1755,https://github.com/php/php-src/pull/1755,https://api.github.com/repos/php/php-src/pulls/1755,2016-02-05T00:24:36Z,2017-01-06T12:43:29Z,2017-01-06T07:44:35Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
282,3,132718911,1758,Fix #69592: pdo_dblib now skips datasets without columns while fetching data,MiRacLe-RPZ,closed,,"Some sql-statements can return empty resultsets, now pdo_dblib skips empty datasets like ext/mssql.
",https://api.github.com/repos/php/php-src/issues/1758,https://github.com/php/php-src/pull/1758,https://api.github.com/repos/php/php-src/pulls/1758,2016-02-10T14:51:09Z,2017-01-03T11:12:42Z,2017-01-03T11:12:42Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
283,3,133559593,1764,Fixed bug #53432,nikic,closed,,"Treat empty strings the same as any other string when string offset assignment is used.

Refs http://php.net/53432
",https://api.github.com/repos/php/php-src/issues/1764,https://github.com/php/php-src/pull/1764,https://api.github.com/repos/php/php-src/pulls/1764,2016-02-14T17:37:50Z,2016-06-04T17:21:44Z,2016-06-04T17:21:44Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
284,3,134026772,1767,Fix for version string when connecting to a MariaDB server,9EOR9,closed,,"Since MariaDB hacked the version number and prefixes the MariaDB version with 5.5.5- the version string is not correct when connecting to MariaDB
server..
(For discussion see [Joomla discussion|https://github.com/joomla/joomla-cms/issues/9062#issuecomment-182969806])

This fix skips the first 7 bytes of version string, if the version string in greeting package is prefixed with
5.5.5- Neither MariaDB nor Oracle  released a 5.5.5 version, so it will not have any side affect with
older versions of MySQL, Percona or MariaDB.
",https://api.github.com/repos/php/php-src/issues/1767,https://github.com/php/php-src/pull/1767,https://api.github.com/repos/php/php-src/pulls/1767,2016-02-16T16:27:33Z,2017-02-22T08:37:54Z,2017-02-22T08:37:54Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
285,3,137304268,1780,Bug #71667: have pdo_dblib emulate how mssql extension names "computed" column (PHP-5.6),adambaratz,closed,,"Some notes are in the bug report I created:
https://bugs.php.net/bug.php?id=71667

A question was raised in a #1775 about whether this change should go into a stable branch. There have been a few different behaviors for these column names in 5.x releases:
- emulate mssql (start at computed, next column is computed1, computed2, etc.)
- don't do anything, causing only one of these columns to be sent back, with an empty string for a name
- give names that start with computed, but with an index based on the column number (see #1386)

The second two behaviors were added without test coverage or discussion around how they'd affect existing code. So I'd argue that this PR is a bug fix for these regressions. Also, having behavior that diverges from the mssql extension will make it difficult for people to migrate from 5.x to 7, which requires them to switch to pdo_dblib.
",https://api.github.com/repos/php/php-src/issues/1780,https://github.com/php/php-src/pull/1780,https://api.github.com/repos/php/php-src/pulls/1780,2016-02-29T16:39:48Z,2016-10-11T00:57:41Z,2016-10-11T00:57:41Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
286,3,140230570,1801,Fix #71767: ReflectionMethod::getDocComment returns the wrong comment,GSokol,closed,,,https://api.github.com/repos/php/php-src/issues/1801,https://github.com/php/php-src/pull/1801,https://api.github.com/repos/php/php-src/pulls/1801,2016-03-11T16:38:09Z,2016-03-11T21:31:45Z,2016-03-11T21:31:45Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
287,3,144867102,1845,fix left-shifted/misaligned bounding-box + wrong kerning in imagettfbbox/imageftbbox,not-implemented,closed,,"Fixes several (hopefully all :-)) concurring bugs/problems in calculating the bounding box in imagettfbbox/imageftbbox. Also fixed kerning for angle != 0.

This addresses several bug reports (I used https://bugs.php.net/bug.php?id=53504 as the ""main"" one):
- Fix #53504: imagettfbbox gives incorrect values for bounding box
- Fix #71602: bounding box not accurate
- Possible fix #66083: imagettfbox() returns different values
- Fix #64614: imagettbbox() Always returns -1 for X coordinate left corner.
- Fix #49815: Problem with imagettfbbox
- Possible fix #51315: imagettfbbox randomly don't work
- Fix #50971: imagettftext/imagettfbbox return wrong coordinates if angle != 0
- Fix #65837: imageTTFText text shifted right

Detailled changes:
- load glyph with FT_LOAD_IGNORE_TRANSFORM for bbox as final bbox is rotated at once later (fixes ""double-rotation"" per glyph for calculating bbox)
- reload the rotated glyph for painting after that (only if angle != 0)
- rotate the original bbox at 0,0 and do not throw away xMin/yMin (drawing-rotation is also based at ""origin"" point - including the bearingX, see http://www.freetype.org/freetype2/docs/glyphs/glyphs-3.html#section-3) - this fixes the ""left-shift""-problem also when angle = 0
- removed ""xb/yb"" and use ""x/y"" directly for offsetting brect (no need for adding ""x1/y1"" and substracting ""yd"" later)
- removed therefore unused ""yd"" helper var which seems tried to fix parts of the original problems
- initialize x/y with 0 instead of -1 in php_imagettftext_common() to make image*text() and image*bbox() results identical (there was a -1px shift in image*bbox() before)
- fixed gdroundupdown() for negative numbers (-256 / 64 gives -5 instead of -4 before)
- rotate kerning-delta by given angle (fixes completely wrong kerning and therefore wrong bounding box if angle != 0)
- changed 3 tests and added a new one to test for the new (better) coordinates

This pull-request is for PHP 5.6 as the minimal version to fix. I also cherry-picked the fix from ""Paul Tarjan"" from 7.0 in this pull-request, to be consistent, so the main commit can be merged to 7.0 and master without bigger problems.

**As an example for the fixes, here the changes visualized in the new test bug53504.phpt:**

Before:
![bug53504_before](https://cloud.githubusercontent.com/assets/1215371/14231842/d12575f2-f992-11e5-8a43-f7b9ec111a50.png)

After:
![bug53504_after](https://cloud.githubusercontent.com/assets/1215371/14231843/d5e4e4e2-f992-11e5-9c57-2015f850eb2c.png)

**And the visualized changes in bug43073_1.phpt:**

Before:
![bug43073_before](https://cloud.githubusercontent.com/assets/1215371/14172569/f30e457e-f738-11e5-9d25-dbaeb4b08d5f.png)

After:
![bug43073_after](https://cloud.githubusercontent.com/assets/1215371/14172573/f5d6c56a-f738-11e5-8831-d4205f72e5ba.png)
",https://api.github.com/repos/php/php-src/issues/1845,https://github.com/php/php-src/pull/1845,https://api.github.com/repos/php/php-src/pulls/1845,2016-03-31T11:27:54Z,2016-09-19T23:44:47Z,2016-09-19T23:44:46Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
288,3,146658894,1854,Implement UTF-8 and long path support in PHP on Windows.,weltling,closed,,"Here are several reports that got fixed by this patch (and there are much more reports to find on the bug tracker):

https://bugs.php.net/63401
https://bugs.php.net/41199
https://bugs.php.net/50203
https://bugs.php.net/71509
https://bugs.php.net/30195

Some of the bugs are pretty recent, some descend to early 2000th, but the user
comments in there last even till today. Just for example, bug #30195 was opened
in 2004, the latest comment in there was made in 2014. It is certain, that
these bugs descend not only to pure PHP use cases, but get also redirected from
the popular PHP based projects. Given the modern systems (and those supported
by PHP) are always based on NTFS, there is no excuse to keep these issues
unresolved.

Look for the current builds here: http://windows.php.net/downloads/snaps/ostc/win_mb_path_w_onlly/

Thanks.
",https://api.github.com/repos/php/php-src/issues/1854,https://github.com/php/php-src/pull/1854,https://api.github.com/repos/php/php-src/pulls/1854,2016-04-07T15:27:46Z,2016-07-06T17:42:47Z,2016-06-20T11:44:24Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
289,3,147447714,1858,Fix segfault on mysqlnd result set error,soda0289,closed,,"This patch fixes bug# 71863 which caused a segfault when the result set
contained an error. This occurs becuase the buffered result set does
not contain callbacks in its mysqlnd error_info struct and would fail
on a null pointer when called with the macro COPY_CLIENT_ERROR.

The fix simply copies the error info struct from the row_packet into
the buffered result set, as was done before.
",https://api.github.com/repos/php/php-src/issues/1858,https://github.com/php/php-src/pull/1858,https://api.github.com/repos/php/php-src/pulls/1858,2016-04-11T14:28:34Z,2016-07-25T20:02:28Z,2016-07-22T21:38:09Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
290,3,148455894,1863,Resolve bug #72017,tpunt,closed,,"Resolves bug [#72017](https://bugs.php.net/bug.php?id=72017).

This is a little hacky, but it works. It should really be noted that `range()` does not work well with floats because of the precision problem.

There's still cases where `range()` will not work:

```
var_dump(range(90, 90.1, .1)); // bool(false)
```

([3v4l](https://3v4l.org/6O769).)

I can't see a fix to these, however.
",https://api.github.com/repos/php/php-src/issues/1863,https://github.com/php/php-src/pull/1863,https://api.github.com/repos/php/php-src/pulls/1863,2016-04-14T19:14:52Z,2016-05-16T21:59:58Z,2016-05-16T21:59:58Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
291,3,148726023,1865,Fixed bug #71972,laruence,closed,,"The problem is:

```
if (has_value) {
    ZVAL_UNDEF(&current);
    if (php_var_unserialize(&current, (const unsigned char **) &p, (const unsigned char *) endptr, &var_hash)) {
        zval *zv = php_set_session_var(name, &current, &var_hash );
        var_replace(&var_hash, &current, zv);
```

php_set_session_var may cause http_session_vars resize, which will make the var in var_hash->data become invalid..

I propose to fix this by prepend a magic var ""__SESS_N_VARS"" to session serialized string, with this, we could know how many vars there before doing session decoding, and extend PS(http_session_vars) to the proper size, thus can avoding hash table resize, as this is a little tricky , so I make PR instead of pushing it directly.

  thanks
",https://api.github.com/repos/php/php-src/issues/1865,https://github.com/php/php-src/pull/1865,https://api.github.com/repos/php/php-src/pulls/1865,2016-04-15T17:57:55Z,2016-04-16T04:11:11Z,2016-04-16T04:11:02Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
292,3,148930604,1868,Allow '??' on constant expressions,marcioAlmada,closed,,"It looks like we forgot to allow the null coalesce operator on constant expressions https://3v4l.org/LoPsg:

``` php
<?php

const X = null ?? 2;

function($arg = null ?? 'foo') { return $arg; };

function() { static $var = null ?? 'foo'; return $var; };

new class { private $property = null ?? 'foo'; };
```

> Fatal error: Constant expression contains invalid operations in /in/LoPsg on line 3

Reference https://wiki.php.net/rfc/const_scalar_exprs
",https://api.github.com/repos/php/php-src/issues/1868,https://github.com/php/php-src/pull/1868,https://api.github.com/repos/php/php-src/pulls/1868,2016-04-17T08:34:42Z,2016-04-20T23:28:47Z,2016-04-20T23:28:09Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
293,3,149329345,1870,Fix ZTS builds by adding a missing TSRMLS_FETCH().,LawnGnome,closed,,"ffc697ac27377df3f295c7dc7281b578759645cb added a call to `i_zval_ptr_dtor_nogc()` in `do_inherit_property_access_check()`. `i_zval_ptr_dtor_nogc()` requires `tsrm_ls` to be available in ZTS builds, but merge checker functions do not get the TSRM context.

As with `do_inherit_method_check()` (which has the same requirement), we'll use `TSRMLS_FETCH()` to get around it.
",https://api.github.com/repos/php/php-src/issues/1870,https://github.com/php/php-src/pull/1870,https://api.github.com/repos/php/php-src/pulls/1870,2016-04-19T02:25:06Z,2016-04-20T17:01:43Z,2016-04-20T17:01:43Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
294,3,149512552,1872,bug#72057 Fix RECV opcode to handle all kinds of exceptions,nikita2206,closed,,"fix RECV opcode to handle exceptions thrown from user-defined error handler
as a result of Notice error from failed type coercion
",https://api.github.com/repos/php/php-src/issues/1872,https://github.com/php/php-src/pull/1872,https://api.github.com/repos/php/php-src/pulls/1872,2016-04-19T16:27:16Z,2016-04-20T15:44:47Z,2016-04-20T15:44:47Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
295,3,149808746,1877,fix bug 69587 (DateInterval properties and isset),jhdxr,closed,,"fix [bug 69587](https://bugs.php.net/bug.php?id=69587)

there are some related bugs, and I'm working on them. 
",https://api.github.com/repos/php/php-src/issues/1877,https://github.com/php/php-src/pull/1877,https://api.github.com/repos/php/php-src/pulls/1877,2016-04-20T15:47:45Z,2016-11-13T11:21:20Z,2016-11-13T11:21:20Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
296,3,153868790,1902,http_fopen_wrapper.c - Handle HTTP headers with varying white space,IMSoP,closed,,"The stream handler assumed all HTTP headers contained exactly one space,
but the standard says there may be zero or more. Should fix [Bug #47021](https://bugs.php.net/bug.php?id=47021),
and any other edge cases caused by a web server sending unusual spacing,
e.g. the MIME type discovered from Content-Type: can no longer contain
leading whitespace.
",https://api.github.com/repos/php/php-src/issues/1902,https://github.com/php/php-src/pull/1902,https://api.github.com/repos/php/php-src/pulls/1902,2016-05-09T21:00:31Z,2017-01-11T04:34:30Z,2017-01-07T23:05:13Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
297,3,156838853,1923,Fix various base64_decode bugs.,Metabolix,closed,,"Fix base64_decode bugs 72264, 72263, 72152, with tests.

This is for PHP-7.0, because the patches don't cleanly apply to PHP-5.6 (which uses char\* instead of zend_string).
",https://api.github.com/repos/php/php-src/issues/1923,https://github.com/php/php-src/pull/1923,https://api.github.com/repos/php/php-src/pulls/1923,2016-05-25T20:08:09Z,2016-07-05T15:02:25Z,2016-07-05T15:02:25Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
298,3,158439252,1931,Fixed bug #72096 Swatch time value incorrect for dates before 1970,mcq8,closed,,"https://bugs.php.net/bug.php?id=72096
",https://api.github.com/repos/php/php-src/issues/1931,https://github.com/php/php-src/pull/1931,https://api.github.com/repos/php/php-src/pulls/1931,2016-06-03T19:36:03Z,2017-03-09T15:47:39Z,2017-03-09T15:47:39Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
299,3,159653959,1940,Add support for the new tidy-html5 library in ext/tidy,orlitzky,closed,,"Description taken from PHP Bug #72379, the individual commits contain more information:

The ""tidy"" extension is currently based off the ""HTML tidy"" project, which has gone extinct. For reference, see [its SourceForge page](http://tidy.sourceforge.net/), which points you towards its successor tidy-html5. The older project is now bit-rotting, and has some vulnerabilities (CVE-2015-5522 and CVE-2015-5523) that won't be fixed.

The PHP build system should accept tidy-html5 (they're compatible) instead of the legacy project.
",https://api.github.com/repos/php/php-src/issues/1940,https://github.com/php/php-src/pull/1940,https://api.github.com/repos/php/php-src/pulls/1940,2016-06-10T14:56:53Z,2016-07-11T12:36:56Z,2016-07-11T12:36:56Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
300,3,160183228,1943,Fix #50845: exif_process_IFD_TAG: Use the right offset if reading from stream,MatmaRex,closed,,"When the location of the data is outside of the range we have
preloaded (for example, if it's before the beginning of the IFD
structure), we have to read it from the stream into a separate buffer.
The offset calculations in this case were incorrect, resulting in
bogus values being read for the affected fields (sometimes parts of
other fields, sometimes binary data).

The included test image, sourced from https://commons.wikimedia.org/wiki/File:U.S._Marines_Prepare_to_board_an_MV-22_Osprey_160509-M-AF202-041.jpg, is in the public domain.

---

This is a version of pull request #1581 with an added test and more detailed summary. I debugged this independently (https://phabricator.wikimedia.org/T137635) before finding that it already has a patch pending, grumble.

This is my first contribution to PHP, do I need to do anything special?
",https://api.github.com/repos/php/php-src/issues/1943,https://github.com/php/php-src/pull/1943,https://api.github.com/repos/php/php-src/pulls/1943,2016-06-14T13:37:09Z,2016-06-14T18:19:40Z,2016-06-14T18:19:40Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
301,3,162384311,1960,couple of resource leaks and use after free's,devnexen,closed,,,https://api.github.com/repos/php/php-src/issues/1960,https://github.com/php/php-src/pull/1960,https://api.github.com/repos/php/php-src/pulls/1960,2016-06-27T06:48:34Z,2016-06-28T03:38:57Z,2016-06-28T03:38:37Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
302,3,163400184,1974,Fix #68447: grapheme_extract take an extra trailing character,ranvis,closed,,"grapheme_extract() converts UTF-8 string in the argument to UTF-16 to
iterate through graphemes, and count each UTF-16 character as one Unicode
character, which is not correct for UTF-16 surrogate pairs.
The patch removes the conversion and counts UTF-8 directly if needed.
",https://api.github.com/repos/php/php-src/issues/1974,https://github.com/php/php-src/pull/1974,https://api.github.com/repos/php/php-src/pulls/1974,2016-07-01T13:52:16Z,2016-11-27T23:39:55Z,2016-11-27T23:39:55Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
303,3,163491580,1976,Fix #65600: SplFileObject->next() not move next without current(),cmb69,closed,,"Well, actually we don't fix next() to move to the next line, because that
is supposed to happen only when ::READ_AHEAD is set, but we're fixing the
inconsistency between ::key() and current() which occurs when next() is
called multiple times without calling current().

To cater to this change we have to adjust SplFileObject_key_error002.phpt,
which tests for an erroneous condition anyway.
",https://api.github.com/repos/php/php-src/issues/1976,https://github.com/php/php-src/pull/1976,https://api.github.com/repos/php/php-src/pulls/1976,2016-07-01T23:59:03Z,2017-01-03T12:03:11Z,2017-01-03T07:48:34Z,0,2017-03-25 15:20:14,2017-03-25 15:20:14
304,3,164303180,1991,Fix #70315: imagecreatefromstring() returns Server Error but page is …,cmb69,closed,,"…rendered

That happens because the external libgd uses other error codes than PHP
(and the bundled libgd), but the libgd error codes are simply forwarded
to php_verror(). We fix that by properly mapping libgd errors to PHP errors.

As already mentioned in [the bug report](https://bugs.php.net/bug.php?id=70315), this doesn't necessarily mean that external and bundled libgd behave identically now, but at least we avoid inconsistencies like the one reported. Fixing the bundled libgd to match external libgd is probably best done for PHP 7.1.0 only.

Another issue is that most likely some PHPTs will fail after this change (when run again an external libgd PHP build), but there are already [plenty of failing tests](https://bugs.php.net/bug.php?id=72557) in this case now (I got 43 with and without the patch).
",https://api.github.com/repos/php/php-src/issues/1991,https://github.com/php/php-src/pull/1991,https://api.github.com/repos/php/php-src/pulls/1991,2016-07-07T13:00:31Z,2016-07-18T23:00:03Z,2016-07-18T23:00:03Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
305,3,165527344,2000,Fixes various url rewriter issues,yohgaki,closed,,"This patch fixes various URL rewriter issues. URL rewriter is used by trans sid feature.
",https://api.github.com/repos/php/php-src/issues/2000,https://github.com/php/php-src/pull/2000,https://api.github.com/repos/php/php-src/pulls/2000,2016-07-14T10:19:45Z,2016-12-10T20:32:05Z,2016-12-10T20:30:01Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
306,3,166020967,2004,Fix bug 72610 by deferring the calls to __wakeup to the very end.,TysonAndre,closed,,"The PHP7 source code for all versions of php 7 was keeping **pointers**
to object/array `zval`s, not copies of the object properties.

This causes [two bugs in __wakeup](https://bugs.php.net/bug.php?id=72610):
- Modifying a object property (or property's property) during __wakeup will affect copies/references to that properties
- If dynamic properties are added during __wakeup, pointers to other dynamic properties are invalidated

There are two ways to fix this. This PR chooses the second. (So does HHVM).
- Keep copies of **all** zvals instead of pointers to zvals while
  unserializing, increment reference counts.
- Defer calls to __wakeup until the very end. This requires copying only
  the objects of classes implementing __wakeup.
  hhvm handles __wakeup this way.
  
  https://github.com/facebook/hhvm/blob/2d5f00afbb033aec0cbc51cbe3a897af79cdcb28/hphp/runtime/base/variable-unserializer.cpp#L333
  https://github.com/facebook/hhvm/blob/2d5f00afbb033aec0cbc51cbe3a897af79cdcb28/hphp/runtime/base/variable-unserializer.cpp#L965

Make the publicly exposed APIs var_unserialize and var_unserialize_ex
perform this finalization at the very end.
Many extensions use var_unserialize to unserialize data
(e.g. ext/session, or extensions outside of php-src),
and this change is made in a way that shouldn't break them.
- Move the inner zval deserialization code into a static method, so that
  they won't accidentally be called and miss a call to __wakeup.
- I can't see a use for that method right now, in extensions.
",https://api.github.com/repos/php/php-src/issues/2004,https://github.com/php/php-src/pull/2004,https://api.github.com/repos/php/php-src/pulls/2004,2016-07-18T05:32:36Z,2017-01-11T04:31:30Z,2017-01-03T10:16:47Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
307,3,166804721,2015,Fix for bug #54431,vhuk,closed,,"New version enables encryption of the datastream instead of control channel to avoid issues describe in bugs #41021, #54431. Control channel is already encrypted earlier hence re-enabling encryption on it will fail. 
",https://api.github.com/repos/php/php-src/issues/2015,https://github.com/php/php-src/pull/2015,https://api.github.com/repos/php/php-src/pulls/2015,2016-07-21T12:15:53Z,2016-07-23T11:37:29Z,2016-07-23T11:37:29Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
308,3,169035642,2050,(against 7.1) Fix bug 72610 by deferring __wakeup: fixes unserialize read after free of property table,TysonAndre,closed,,"Same as what used to be https://github.com/php/php-src/pull/2004 , but against php 7.1. Further changes will be made against #2004 to preserve the ABI.

This changes the ABI, but 7.1 is still in beta. See https://github.com/php/php-src/pull/2004#discussion_r73242452
",https://api.github.com/repos/php/php-src/issues/2050,https://github.com/php/php-src/pull/2050,https://api.github.com/repos/php/php-src/pulls/2050,2016-08-03T02:50:15Z,2017-01-11T04:30:43Z,2017-01-03T10:16:20Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
309,3,169414435,2057,Zend/zend_operators.h: disable x86 assembly on all newer GCC-4.x.,orlitzky,closed,,"In bug 69896, a fix was committed to work around a build error: 'asm'
operand has impossible constraints, in zend_operators.h, on x86. At
the time, the problem was only visible with gcc-4.8, and the fix was
to disable that chunk of assembly for gcc-4.8. With gcc-4.9, the
problem persists, so we now need to check for gcc-4.9 (at least) in
addition to gcc-4.8.

This commit modifies the earlier conditional that checks for
gcc-4.8. The existing check was for equality on the minor component of
the gcc version, namely 8. The == operator that performs the
comparison has been changed to <=, so that it catches any gcc-4.x with
x >= 8. This has been tested and fixes the build on x86 hardware with
gcc-4.9.

PHP-Bug: 69896
Gentoo-Bug: 571658
",https://api.github.com/repos/php/php-src/issues/2057,https://github.com/php/php-src/pull/2057,https://api.github.com/repos/php/php-src/pulls/2057,2016-08-04T16:17:00Z,2016-09-16T19:10:18Z,2016-09-16T19:10:18Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
310,3,170952379,2079,Fix #72811 - parse_url fails with IPv6 only host,bp1222,closed,,"Bug report shows that when using an IPv6 formatted address as
a URL host it would incorrectly parse.  parse_url detects the first ':'
as denoting a scheme, which isn't properly parsed.  This relegates the
[IPv6] formatted host to ending up as the ""path"" portion of the URL.
This fix skips sheme checking if the first character of the URL string
is a '[', and will ensure not to fall into the catch-all else if the
URL string starts with '[' then a digit, alpha, or :.
",https://api.github.com/repos/php/php-src/issues/2079,https://github.com/php/php-src/pull/2079,https://api.github.com/repos/php/php-src/pulls/2079,2016-08-12T20:25:41Z,2016-12-28T20:29:01Z,2016-12-28T20:29:01Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
311,3,172275157,2091,fix bug #72254 - get_object_vars with numerical properties,schlndh,closed,,"The problem is that PHP 5.6 uses `add_assoc_zval_ex` function to add properties to returned array, which handles numerical keys separately, whereas PHP 7.0 either returns the properties hashtable directly (in which case I guess that numerical keys are not handled separately) or adds properties to returned array using `zend_hash_str_add_new`/`zend_has_add_new` functions which again don't handle numerical keys separately.

I suspect that the reason why numerical keys are not accessible using the PHP 7 code is that when accessing an array, numerical keys are always handled separately and because they are stored as ordinary string keys, they cannot be accessed.

I therefore switched back to `add_assoc_zval_ex` function and removed the code that just returned properties hashtable, since it can contain numerical keys stored as strings and would need to be duplicated anyway.
",https://api.github.com/repos/php/php-src/issues/2091,https://github.com/php/php-src/pull/2091,https://api.github.com/repos/php/php-src/pulls/2091,2016-08-20T15:06:37Z,2016-12-10T18:08:27Z,2016-12-10T18:08:27Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
312,3,173548911,2099,Fix bug #71241: array_replace_recursive mutates ref params,adsr,closed,,"`array_replace_recursive` can sometimes mutate its params if references are nested within. This is new behavior in PHP 7: https://3v4l.org/0sdbm. If the new behavior is desirable, then `array_merge_recursive`, which does not do this, should be modified to be consistent.
",https://api.github.com/repos/php/php-src/issues/2099,https://github.com/php/php-src/pull/2099,https://api.github.com/repos/php/php-src/pulls/2099,2016-08-26T21:39:34Z,2016-10-20T11:28:56Z,2016-10-20T11:28:56Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
313,3,174461891,2108,Normalize compact('this') behavior,marcioAlmada,closed,,"`compact('this')` used to work https://3v4l.org/bmHr2 when a statement like `$this;` was emitted. After the RFC to [Fix inconsistent behavior of $this variable](https://wiki.php.net/rfc/this_var), this behavior changed subtly.

The old behavior was also fragile, to say the least, imagine a future engine optimization wiping ""dead code"" before compiling. So this PR also attempts to normalize `compact('this')` in a way it will always work, regardless of the presence of a dead `$this;` statement, while respecting the called scope - [principle of least astonishment](https://en.wikipedia.org/wiki/Principle_of_least_astonishment).

A quick search revealed this can be a source of confusion: http://stackoverflow.com/questions/4994711/this-keyword-and-compact-function
",https://api.github.com/repos/php/php-src/issues/2108,https://github.com/php/php-src/pull/2108,https://api.github.com/repos/php/php-src/pulls/2108,2016-09-01T08:10:25Z,2016-09-01T11:04:32Z,2016-09-01T11:04:32Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
314,3,174704730,2113,"Fix #72972, Bad filter for the flags FILTER_FLAG_NO_RES_RANGE and FIL…",jpauli,closed,,"…TER_FLAG_NO_PRIV_RANGE

References https://github.com/php/php-src/pull/1954

https://bugs.php.net/bug.php?id=72972
",https://api.github.com/repos/php/php-src/issues/2113,https://github.com/php/php-src/pull/2113,https://api.github.com/repos/php/php-src/pulls/2113,2016-09-02T08:14:43Z,2016-09-05T08:14:26Z,2016-09-05T08:14:26Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
315,3,177497359,2131,Assumed fix for several "Empty row packet body" bug tickets,Kaiserchen,closed,,"tickets that complain about this:

https://bugs.php.net/bug.php?id=66370
https://bugs.php.net/bug.php?id=64763
https://bugs.php.net/bug.php?id=65825

One is not reliably able to tell that a mysql response was successfully consumed completly without registering an error handler, that listens for the ""Empty row packet body"" warning. Not any of the examples does this. We were able to reproduce this by taking a long time in processing result rows, and forcing the mysql on the other end into a write timeout, leaving us with an incomplete result.
This points against master. Once there is a narrativ on what is the correct fix. I volunteer in backporting to the appropriate branches.

Best
",https://api.github.com/repos/php/php-src/issues/2131,https://github.com/php/php-src/pull/2131,https://api.github.com/repos/php/php-src/pulls/2131,2016-09-16T19:03:31Z,2017-01-03T11:45:46Z,2017-01-03T07:15:51Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
316,3,180252228,2145,Fix #69899: mysqlnd segfault,Fleshgrinder,closed,,"https://bugs.php.net/bug.php?id=69899
",https://api.github.com/repos/php/php-src/issues/2145,https://github.com/php/php-src/pull/2145,https://api.github.com/repos/php/php-src/pulls/2145,2016-09-30T08:49:51Z,2017-01-12T20:20:28Z,2017-01-12T20:20:28Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
317,3,183252667,2166,Fixes bug #73135,edgarsandi,closed,,"This PR fixes the bug [
Bug #73135  malform xml cause php segfault](https://bugs.php.net/bug.php?id=73135)
",https://api.github.com/repos/php/php-src/issues/2166,https://github.com/php/php-src/pull/2166,https://api.github.com/repos/php/php-src/pulls/2166,2016-10-16T06:51:22Z,2016-11-12T18:13:11Z,2016-11-12T18:13:11Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
318,3,184645496,2172,Fixes #73373 (deflate_add does not verify that output was not truncated),mbonneau,closed,,"https://bugs.php.net/bug.php?id=73373
",https://api.github.com/repos/php/php-src/issues/2172,https://github.com/php/php-src/pull/2172,https://api.github.com/repos/php/php-src/pulls/2172,2016-10-22T18:16:26Z,2017-01-08T12:50:41Z,2017-01-08T12:50:37Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
319,3,184710642,2174,Fix bug #70172,nikic,closed,,,https://api.github.com/repos/php/php-src/issues/2174,https://github.com/php/php-src/pull/2174,https://api.github.com/repos/php/php-src/pulls/2174,2016-10-23T19:42:39Z,2016-11-05T22:13:08Z,2016-11-05T22:13:08Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
320,3,184712835,2175,http_fopen_wrapper.c - Ignore "100 Continue" responses,IMSoP,closed,,"Fixes bug #73297

Part of an effort to implement HTTP/1.1 properly in the stream wrapper, with a view to making it easier or default in a future version.
",https://api.github.com/repos/php/php-src/issues/2175,https://github.com/php/php-src/pull/2175,https://api.github.com/repos/php/php-src/pulls/2175,2016-10-23T20:15:09Z,2016-11-17T10:52:38Z,2016-11-17T10:52:38Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
321,3,186116728,2180,bug fix #61471 (request error handling),axot,closed,,"php_handler does not process request error well.
Should we fix this?

https://bugs.php.net/bug.php?id=61471
",https://api.github.com/repos/php/php-src/issues/2180,https://github.com/php/php-src/pull/2180,https://api.github.com/repos/php/php-src/pulls/2180,2016-10-30T04:41:31Z,2017-01-05T13:12:22Z,2016-12-29T07:57:04Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
322,3,187446566,2184,Bug #73463 fix openssl_encrypt/decrypt for GCM mode,mk-j,closed,,"https://bugs.php.net/bug.php?id=73463
",https://api.github.com/repos/php/php-src/issues/2184,https://github.com/php/php-src/pull/2184,https://api.github.com/repos/php/php-src/pulls/2184,2016-11-04T21:52:58Z,2016-11-09T11:52:08Z,2016-11-09T11:51:43Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
323,3,187740347,2188,fix erroneous line in confutils.js,Stricted,closed,,"this line was introduced in commit https://github.com/php/php-src/commit/a7b4f32519321392d93383afbf6e68f0a61702ac
that affects php 7+",https://api.github.com/repos/php/php-src/issues/2188,https://github.com/php/php-src/pull/2188,https://api.github.com/repos/php/php-src/pulls/2188,2016-11-07T15:25:14Z,2016-11-12T01:42:10Z,2016-11-12T01:42:10Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
324,3,188120566,2195,Fix Bug #73462 - Persistent connections don't set $connect_errno,darkain,closed,,"Persistent connections skipped resetting $connect_error and $connect_errno values
This adds the ""clear error"" line to persistent connections for consistency",https://api.github.com/repos/php/php-src/issues/2195,https://github.com/php/php-src/pull/2195,https://api.github.com/repos/php/php-src/pulls/2195,2016-11-08T22:24:30Z,2017-01-03T11:20:21Z,2017-01-03T11:20:21Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
325,3,188435989,2196,Fix Bug #73461,yohgaki,closed,,"This patch disables any invalid save handler calls such as recursive save handler calls. This disables many kinds of save handler abuses.

7.1 and up has session_create_id(). This patch allows to use session_create_id() in user session save handler also. i.e. Allows to call session_carete_id() to make custom session id by session ID creation handler.

https://bugs.php.net/bug.php?id=73461",https://api.github.com/repos/php/php-src/issues/2196,https://github.com/php/php-src/pull/2196,https://api.github.com/repos/php/php-src/pulls/2196,2016-11-10T07:10:08Z,2016-11-16T10:47:50Z,2016-11-16T10:33:31Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
326,3,189682642,2203,fix bug #73489 wrong timestamp when call setTimeZone multi times with UTC offset,jhdxr,closed,,fix [bug 73489](https://bugs.php.net/bug.php?id=73489),https://api.github.com/repos/php/php-src/issues/2203,https://github.com/php/php-src/pull/2203,https://api.github.com/repos/php/php-src/pulls/2203,2016-11-16T11:58:33Z,2017-02-11T11:28:00Z,2016-11-16T15:17:57Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
327,3,190420752,2208,Bugfix for 73478: wrong pub/priv keys with Diffie Hellman,bukka,closed,,"Initial fix for this bug:

https://bugs.php.net/bug.php?id=73478

Tested only with OpenSSL 1.1 so it might be failing. Need to do a bit more testing though...",https://api.github.com/repos/php/php-src/issues/2208,https://github.com/php/php-src/pull/2208,https://api.github.com/repos/php/php-src/pulls/2208,2016-11-18T21:01:09Z,2016-11-20T20:09:41Z,2016-11-20T20:09:41Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
328,3,190572016,2212,[Bug] 73538 - Fix __setSoapHeaders() with array,duncan3dc,closed,,"Added a test for the bug [73538](https://bugs.php.net/bug.php?id=73538) and also attempted a fix.

The [docs](http://php.net/manual/en/soapclient.setsoapheaders.php) say that any call to `__setSoapHeaders()` will _""replace any previous values""_, so I changed the code to remove the headers, and then add the passed in ones",https://api.github.com/repos/php/php-src/issues/2212,https://github.com/php/php-src/pull/2212,https://api.github.com/repos/php/php-src/pulls/2212,2016-11-20T17:47:07Z,2016-11-20T20:20:18Z,2016-11-20T20:20:18Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
329,3,190582765,2214,[Bug] 73498 Incorrect SQL generated for pg_copy_to(),duncan3dc,closed,,"Postgres uses the `DELIMITER` keyword since 7.3 (released in 2002).

All currently supported versions of postgres support `DELIMITER` so I don't think there's any reason to still use `DELIMITERS`

> The following syntax was used before PostgreSQL version 7.3 and is still supported
https://www.postgresql.org/docs/current/static/sql-copy.html#AEN77789",https://api.github.com/repos/php/php-src/issues/2214,https://github.com/php/php-src/pull/2214,https://api.github.com/repos/php/php-src/pulls/2214,2016-11-20T20:52:16Z,2016-12-06T18:02:13Z,2016-11-22T00:31:05Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
330,3,190606925,2216,Fix return value memory leaks upon exceptions in opcode operand freeing,bwoebi,closed,,"This also has a slight perf gain due to less `if (EG(exception))` checking necessary now, at the cost of a little bit more checking in the case of an exception being thrown.

Regarding the temporary_cleaning_013.phpt test, not everything is leaking currently; some of them are just to make sure that nothing leaks in future either. But most of these are leaking. [Note: The var_dump() in the test is just there to prevent result_type == IS_UNUSED.]",https://api.github.com/repos/php/php-src/issues/2216,https://github.com/php/php-src/pull/2216,https://api.github.com/repos/php/php-src/pulls/2216,2016-11-21T02:52:54Z,2016-11-30T18:38:25Z,2016-11-30T18:38:25Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
331,3,191595651,2220,[Bug] 73581 number_format allows for -0.00,duncan3dc,closed,,"* Added a test for [Bug 73581](https://bugs.php.net/bug.php?id=73581)
* Attempted a fix by re-checking if a number is negative after it's been rounded",https://api.github.com/repos/php/php-src/issues/2220,https://github.com/php/php-src/pull/2220,https://api.github.com/repos/php/php-src/pulls/2220,2016-11-24T22:00:29Z,2017-01-02T15:13:06Z,2017-01-02T15:12:18Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
332,3,191613598,2222,Fixed bug #73594 (dns_get_record() does not populate $additional out parameter),weirdan,closed,,,https://api.github.com/repos/php/php-src/issues/2222,https://github.com/php/php-src/pull/2222,https://api.github.com/repos/php/php-src/pulls/2222,2016-11-25T02:21:21Z,2016-12-18T19:56:26Z,2016-12-18T19:56:26Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
333,3,194793405,2236,Fix bug #70015 - Compilation failure on aarch64,andypost,closed,,"Faced at https://github.com/alpinelinux/aports/pull/587#issuecomment-265750816

Build fails with following
```
/tmp/ccbaoFgl.s: Assembler messages:
/tmp/ccbaoFgl.s:570: Error: operand 3 should be an integer register -- `mul x0,x0,1048576'
/tmp/ccbaoFgl.s:571: Error: operand 3 should be an integer register -- `smulh x1,x0,1048576'
```

Related docs
* https://developer.arm.com/docs/dui0801/latest/a64-general-instructions/mul
* https://developer.arm.com/docs/dui0801/latest/a64-general-instructions/smulh

Used patch from https://bugs.php.net/bug.php?id=70015",https://api.github.com/repos/php/php-src/issues/2236,https://github.com/php/php-src/pull/2236,https://api.github.com/repos/php/php-src/pulls/2236,2016-12-10T20:56:20Z,2017-01-09T22:45:08Z,2017-01-09T22:34:25Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
334,3,196526545,2246,Fix 73783 : pcntl_signal() not handling SIG_IGN correctly,bp1222,closed,,"Bug #73783 raises an issue with signal handling when using SIG_IGN.
With PHP7.1 ZEND_SIGNALS is defaulted to on, which will for all
signals set the handler as zend_signal_handler_defer.  This is
problematic for syscalls like sleep(), which will only return when the
requisite number of seconds have elapsed, or, a non-ignored signal is
raised.  In this case we want to SIG_IGN SIGCHLD, however, SIG_IGN is
only stored in the SIGG(handlers) array, and the actual system level
handler is defined.  This prevents proper signal ignoring when requeted.",https://api.github.com/repos/php/php-src/issues/2246,https://github.com/php/php-src/pull/2246,https://api.github.com/repos/php/php-src/pulls/2246,2016-12-19T21:36:12Z,2016-12-29T20:20:09Z,2016-12-29T20:20:09Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
335,3,196958727,2249,Fix for sporadic segfault with MYSQLI_OPT_INT_AND_FLOAT_NATIVE,vanviegen,closed,,Fixes bug #73800,https://api.github.com/repos/php/php-src/issues/2249,https://github.com/php/php-src/pull/2249,https://api.github.com/repos/php/php-src/pulls/2249,2016-12-21T15:22:16Z,2017-01-03T11:32:20Z,2017-01-02T14:58:47Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
336,3,196963789,2250,Fix for sporadic segfault with MYSQLI_OPT_INT_AND_FLOAT_NATIVE,vanviegen,closed,,Fixes bug #73800,https://api.github.com/repos/php/php-src/issues/2250,https://github.com/php/php-src/pull/2250,https://api.github.com/repos/php/php-src/pulls/2250,2016-12-21T15:42:20Z,2017-01-02T14:55:35Z,2017-01-02T14:55:35Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
337,3,198206688,2263,Fix dom class can't be inherited by the internal class,dreamsxin,closed,,,https://api.github.com/repos/php/php-src/issues/2263,https://github.com/php/php-src/pull/2263,https://api.github.com/repos/php/php-src/pulls/2263,2016-12-30T23:47:50Z,2017-01-01T11:21:54Z,2017-01-01T11:21:54Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
338,3,198319672,2267,Fixed getElementsByTagNameNS not filtering on default namespace (bug #67474),aboks,closed,,"This bug was caused by the fact that `dom_get_elements_by_tag_name_ns_raw`
uses an empty string to filter on the default namespace (as `NULL` means
'no filter'), whereas in the node itself the default namespace is
signalled by `nodep->ns` being `NULL`.",https://api.github.com/repos/php/php-src/issues/2267,https://github.com/php/php-src/pull/2267,https://api.github.com/repos/php/php-src/pulls/2267,2017-01-02T10:52:19Z,2017-01-02T12:00:39Z,2017-01-02T12:00:39Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
339,3,198877742,2276,Fix bug #54379 PDO_OCI: UTF-8 output gets truncated,gureedo,closed,,Replacement for issue #542,https://api.github.com/repos/php/php-src/issues/2276,https://github.com/php/php-src/pull/2276,https://api.github.com/repos/php/php-src/pulls/2276,2017-01-05T05:11:47Z,2017-03-02T04:00:45Z,2017-03-02T04:00:45Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
340,3,198956884,2278,Fix #70417: PharData::compress() doesn't close temp file,cmb69,closed,,"According to the comment, it has not been deemed necessary to close compressed
files. However, we don't want to keep unclosed file handles to save ressources.
So we're also closing compressed archives, if they're not aliased.

I've screwed up rebasing PR #1500, so this is the new relevant PR.",https://api.github.com/repos/php/php-src/issues/2278,https://github.com/php/php-src/pull/2278,https://api.github.com/repos/php/php-src/pulls/2278,2017-01-05T13:34:16Z,2017-02-23T13:06:44Z,2017-01-05T17:52:47Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
341,3,199048135,2279,Map Firebird integer field types with native php integer types,madorin,closed,,"More info here: https://bugs.php.net/bug.php?id=72583
Related test attached.",https://api.github.com/repos/php/php-src/issues/2279,https://github.com/php/php-src/pull/2279,https://api.github.com/repos/php/php-src/pulls/2279,2017-01-05T20:13:07Z,2017-01-11T04:29:42Z,2017-01-06T17:46:21Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
342,3,199594489,2292,Fix for bug 71200 - Linux getrandom syscall not defined in libc,lt,closed,,"https://bugs.php.net/bug.php?id=71200

> getrandom() system call is not used on linux due to incorrect ifdef's.
>
> HAVE_DECL_GETRANDOM is always undefined as there is no declaration of getrandom on the C library or kernel headers and the code that follows does not use it, only the raw syscall interface.",https://api.github.com/repos/php/php-src/issues/2292,https://github.com/php/php-src/pull/2292,https://api.github.com/repos/php/php-src/pulls/2292,2017-01-09T16:18:54Z,2017-01-09T22:30:56Z,2017-01-09T22:30:56Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
343,3,200455970,2303,Fixes Bug #73913,heiglandreas,closed,,"The strrpos and strripos-functions where handling a negative offset in a way that was different from strpos.

Especially negative offsets that where smaller than the length of the needle caused illogical results.

This commit changes the way the negative offset is handled. A negative offset will cause the haystack to be truncated of offset characters at the end and after that the last occurrence of needle is looked for. That is the bahaviour that is described in the manual and that is used in strpos. 

The fix caused several tests to break as they where testing for wrong values. That means that this change IS a BC-break. But as the previous results where not really consistent and in the most cases not what users would expect that should not stop us from merging this into the next release.

Fixes #73913",https://api.github.com/repos/php/php-src/issues/2303,https://github.com/php/php-src/pull/2303,https://api.github.com/repos/php/php-src/pulls/2303,2017-01-12T19:21:07Z,2017-01-13T15:37:18Z,2017-01-13T15:37:18Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
344,3,200844412,2308,Fix segfault in `pcntl_signal_handler` (bug #73939),adsr,closed,,Credit to @nikic for the fix idea.,https://api.github.com/repos/php/php-src/issues/2308,https://github.com/php/php-src/pull/2308,https://api.github.com/repos/php/php-src/pulls/2308,2017-01-15T02:53:43Z,2017-01-15T06:45:08Z,2017-01-15T06:45:08Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
345,3,202037428,2323,Bug fixed #61471,axot,closed,,This is an improved bug fix for `#61471` related to #2180.,https://api.github.com/repos/php/php-src/issues/2323,https://github.com/php/php-src/pull/2323,https://api.github.com/repos/php/php-src/pulls/2323,2017-01-20T03:08:34Z,2017-02-08T00:12:07Z,2017-02-08T00:12:07Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
346,3,202160541,2325,Fixed #73959 - pgsql - lastInsertId fails to throw an exception for wrong sequence name,andrewnester,closed,,"Fixes https://bugs.php.net/bug.php?id=73959
Caused by https://github.com/php/php-src/commit/90c6cbd09baa8802cd0d92ad13d9d791a3e4025d#diff-b62143c40851ff103819b192f4225110R378",https://api.github.com/repos/php/php-src/issues/2325,https://github.com/php/php-src/pull/2325,https://api.github.com/repos/php/php-src/pulls/2325,2017-01-20T14:59:13Z,2017-01-20T20:13:12Z,2017-01-20T20:13:12Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
347,3,202338803,2326,Fix intermittent segfault in GD library,mhagstrand,closed,,"The gdIOCtx struct should be zero filled with ecalloc.
emalloc does not zero fill the struct.",https://api.github.com/repos/php/php-src/issues/2326,https://github.com/php/php-src/pull/2326,https://api.github.com/repos/php/php-src/pulls/2326,2017-01-21T20:45:15Z,2017-01-22T06:41:45Z,2017-01-22T06:41:45Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
348,3,202387047,2329,Fixed #73969 - Fixed segmentation fault when debug_print_backtrace called,andrewnester,closed,,Fixes https://bugs.php.net/bug.php?id=73969,https://api.github.com/repos/php/php-src/issues/2329,https://github.com/php/php-src/pull/2329,https://api.github.com/repos/php/php-src/pulls/2329,2017-01-22T14:43:02Z,2017-01-22T16:14:15Z,2017-01-22T16:13:01Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
349,3,202409006,2330,WIP: Fix fwrite() on non-blocking SSL sockets,bukka,closed,,"This is still work in progress but want to see what Travis thinks about that.

@bwoebi this should hopefully address https://github.com/amphp/aerys/issues/107 so if you could give a try that would be great.

@weltling I haven't setup my win machine yet so if you have time and can test it on windows that would be awesome. I have got a separate server and client tests in here (you run server first and then client and see what it does ;)) which is a bit more user friendly for manual testing:

https://github.com/bukka/php-util/tree/master/tests/openssl/asyncw",https://api.github.com/repos/php/php-src/issues/2330,https://github.com/php/php-src/pull/2330,https://api.github.com/repos/php/php-src/pulls/2330,2017-01-22T20:52:25Z,2017-03-20T17:28:32Z,2017-03-14T18:44:42Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
350,3,202821861,2332,Fixed #73973 - debug_zval_dump() assertion error for resource consts with --enable-debug,andrewnester,closed,,"Fix for https://bugs.php.net/bug.php?id=73973


I reverted changes in `zend_builtin_functions.c` done here - https://github.com/php/php-src/commit/6815c08e2939f49a2ac9087924d58448edb401ba 

Proper resource handling is done here https://github.com/php/php-src/commit/896814e139d8dead8193f0e44cdc4ba3d8a002c7 and here https://github.com/php/php-src/commit/ac58d21aa38ca00ab9698cecfa05c8e0ff1e8d4a

Segmentation fault mentioned in https://bugs.php.net/bug.php?id=70398 will not occur because of 
https://github.com/php/php-src/blob/c8aa6f3a9a3d2c114d0c5e0c9fdd0a465dbb54a5/Zend/zend_ast.c#L481

Corresponding to https://bugs.php.net/bug.php?id=70398 tests are passing successfully. ",https://api.github.com/repos/php/php-src/issues/2332,https://github.com/php/php-src/pull/2332,https://api.github.com/repos/php/php-src/pulls/2332,2017-01-24T13:45:48Z,2017-01-26T09:18:24Z,2017-01-26T09:05:39Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
351,3,202887630,2333,Bug #73988 (zone offset not recognized by timezone_name_from_abbr),AleksandrKuporosov,closed,,PR for https://bugs.php.net/bug.php?id=73988,https://api.github.com/repos/php/php-src/issues/2333,https://github.com/php/php-src/pull/2333,https://api.github.com/repos/php/php-src/pulls/2333,2017-01-24T17:34:08Z,2017-01-25T08:31:07Z,2017-01-25T08:31:07Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
352,3,203040373,2335,Bug #73988 (zone offset not recognized by timezone_name_from_abbr),AleksandrKuporosov,closed,,PR for https://bugs.php.net/bug.php?id=73988,https://api.github.com/repos/php/php-src/issues/2335,https://github.com/php/php-src/pull/2335,https://api.github.com/repos/php/php-src/pulls/2335,2017-01-25T08:30:17Z,2017-01-25T11:20:20Z,2017-01-25T11:20:14Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
353,3,203215157,2337,Fix bug #54382 (getAttributeNodeNS doesn't get xmlns* attributes),aboks,closed,,"The fix is based on the same strategy for handling namespace
declarations as used by getAttributeNode. Note that this strategy makes
these methods not return a DOMAttr for xmlns* attributes, but an
instance of the (undocumented) class DOMNameSpaceNode. This is not
really ideal, but at least this fix makes the behavior of
getAttributeNode and getAttributeNodeNS consistent.

A follow-up action would be to investigate whether DOMNameSpaceNode can
be made into a subclass of DOMAttr (which may be hard due to the way
libxml treats namespace declarations) or document this deviating return
value for xmlns* attributes.",https://api.github.com/repos/php/php-src/issues/2337,https://github.com/php/php-src/pull/2337,https://api.github.com/repos/php/php-src/pulls/2337,2017-01-25T20:36:11Z,2017-01-30T19:00:17Z,2017-01-25T21:00:27Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
354,3,203586891,2342,Bugfix for #73987,pmmaga,closed,,"Inheritance checks should not ignore parents if these implement an interface or abstract.

Link for bugsnet: https://bugs.php.net/bug.php?id=73987",https://api.github.com/repos/php/php-src/issues/2342,https://github.com/php/php-src/pull/2342,https://api.github.com/repos/php/php-src/pulls/2342,2017-01-27T09:11:43Z,2017-01-28T06:28:55Z,2017-01-28T06:28:55Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
355,3,203731294,2344,PHP bug #74004,somedaysummer,closed,,"Fix for DOMDocument loadHTML and loadHTMLFile ignore LIBXML_NOWARNING
and LIBXML_NOERROR flags.",https://api.github.com/repos/php/php-src/issues/2344,https://github.com/php/php-src/pull/2344,https://api.github.com/repos/php/php-src/pulls/2344,2017-01-27T20:23:55Z,2017-03-02T11:38:20Z,2017-03-02T11:38:20Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
356,3,203792542,2346,fix bug #50989,jhdxr,closed,,,https://api.github.com/repos/php/php-src/issues/2346,https://github.com/php/php-src/pull/2346,https://api.github.com/repos/php/php-src/pulls/2346,2017-01-28T07:05:24Z,2017-02-02T07:59:52Z,2017-02-02T06:14:46Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
357,3,203966201,2348,fix bug caused by #2346,jhdxr,closed,,"this pr fix sebastianbergmann/phpunit#2454 

@krakjoe should I open a bug on bugs.php.net? ",https://api.github.com/repos/php/php-src/issues/2348,https://github.com/php/php-src/pull/2348,https://api.github.com/repos/php/php-src/pulls/2348,2017-01-30T09:57:53Z,2017-01-30T11:27:35Z,2017-01-30T11:27:35Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
358,3,204033113,2349,Fixed #74013 - Proper date handling when days of month overflew.,andrewnester,closed,,"Fix for https://bugs.php.net/bug.php?id=74013

Previously this equation (and similar) returned `True` which is weird a little bit:
```
(new DateTime(""2016-01-31""))->add(new DateInterval(""P1M"")) > (new DateTime(""2016-02-01""))->add(new DateInterval(""P1M""))
```
Now data addition/subtraction works like this (similar how it works in other languages f.e. in ):

```
2017-01-29 + 1 month = 2017-02-28
2017-01-30 + 1 month = 2017-02-28
2017-01-31 + 1 month = 2017-02-28
2017-02-01 + 1 month = 2017-03-01

2017-03-31 + 1 month = 2017-04-30

2016-02-29 + 1 year = 2017-02-28

2017-01-30 + 1 month + 1 day = 2017-03-01 (previously 2017-03-02)
```",https://api.github.com/repos/php/php-src/issues/2349,https://github.com/php/php-src/pull/2349,https://api.github.com/repos/php/php-src/pulls/2349,2017-01-30T14:59:23Z,2017-01-31T12:31:24Z,2017-01-31T11:45:45Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
359,3,204228870,2354,BUG #73998: Numeric properties are not accessible from get_object_vars,mhagstrand,closed,,,https://api.github.com/repos/php/php-src/issues/2354,https://github.com/php/php-src/pull/2354,https://api.github.com/repos/php/php-src/pulls/2354,2017-01-31T08:13:26Z,2017-02-02T17:38:28Z,2017-02-02T17:38:28Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
360,3,204523229,2356,Fix #74039 is_infinite(-INF) broken when isinf not defined,c960657,closed,,"`is_infinite()` is broken in the PHP binary included in Alpine Linux. It returns TRUE for `is_infinite(INF)`, but FALSE for `is_infinite(-INF)`.

I believe to have fixed the problem, but I know virtually nothing about C or the PHP source, so bear with me :-)",https://api.github.com/repos/php/php-src/issues/2356,https://github.com/php/php-src/pull/2356,https://api.github.com/repos/php/php-src/pulls/2356,2017-02-01T08:30:19Z,2017-02-07T23:56:29Z,2017-02-07T23:56:29Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
361,3,204550582,2357,Fixed #74021 - fetch_array returned broken data,andrewnester,closed,,"Fix for https://bugs.php.net/bug.php?id=74021

Was caused by https://github.com/php/php-src/pull/2249/files

Don't need this fix because it was fixed here: https://github.com/php/php-src/commit/9eca4dca73d9a6517f773134949bf8613a7eee13#diff-e80df9670f007a4420b36aa40edf34ff",https://api.github.com/repos/php/php-src/issues/2357,https://github.com/php/php-src/pull/2357,https://api.github.com/repos/php/php-src/pulls/2357,2017-02-01T10:47:18Z,2017-02-12T11:53:29Z,2017-02-12T11:53:29Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
362,3,204659537,2358,Demote LSP violation to warning even if parent implements abstract,pmmaga,closed,,"After #2342, an LSP violation over the number of required parameters was promoted to a Fatal Error if the parent implements an interface or abstract.

This PR fixes that behaviour.",https://api.github.com/repos/php/php-src/issues/2358,https://github.com/php/php-src/pull/2358,https://api.github.com/repos/php/php-src/pulls/2358,2017-02-01T18:05:03Z,2017-02-01T19:31:39Z,2017-02-01T19:31:39Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
363,3,204820184,2361,Bug #74031 - Fix parameter count for imagepng function,finwe,closed,,,https://api.github.com/repos/php/php-src/issues/2361,https://github.com/php/php-src/pull/2361,https://api.github.com/repos/php/php-src/pulls/2361,2017-02-02T09:25:10Z,2017-02-02T17:16:24Z,2017-02-02T17:16:24Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
364,3,204899684,2362,Fix bug #73807,nikic,closed,,,https://api.github.com/repos/php/php-src/issues/2362,https://github.com/php/php-src/pull/2362,https://api.github.com/repos/php/php-src/pulls/2362,2017-02-02T15:06:31Z,2017-02-02T17:08:38Z,2017-02-02T17:08:38Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
365,3,205103093,2363,Fixed #74035 - ReflectionClass::newInstance param set as optional,andrewnester,closed,,Fix for https://bugs.php.net/bug.php?id=74035,https://api.github.com/repos/php/php-src/issues/2363,https://github.com/php/php-src/pull/2363,https://api.github.com/repos/php/php-src/pulls/2363,2017-02-03T08:59:33Z,2017-02-13T05:10:57Z,2017-02-03T17:32:06Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
366,3,206426541,2375,Patch for bug #69860,dyeldandi,closed,,Replacement for PR #1427 ,https://api.github.com/repos/php/php-src/issues/2375,https://github.com/php/php-src/pull/2375,https://api.github.com/repos/php/php-src/pulls/2375,2017-02-09T07:30:59Z,2017-02-09T15:46:38Z,2017-02-09T15:45:54Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
367,3,206540928,2379,Patch for bug #69860,dyeldandi,closed,,"Retargeting PR #2375
",https://api.github.com/repos/php/php-src/issues/2379,https://github.com/php/php-src/pull/2379,https://api.github.com/repos/php/php-src/pulls/2379,2017-02-09T15:43:16Z,2017-02-11T23:08:09Z,2017-02-11T23:08:09Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
368,3,206959072,2381,Fix `is_callable` `$callable_name` for anon class methods,adsr,closed,,"Fixes bug https://bugs.php.net/bug.php?id=73118

This patch aims to make `is_callable` return a usable `$callable_name` for anonymous class methods. Anon class methods are formatted like...

    class@anonymous\x00/path/to/script.php0xdeadbeef::funcName

...where `\x00` is a null-char. The current behavior is to return just ""class@anonymous"" which is unusable as a function ref, e.g., as a parameter to `call_user_func`.

I attempt to preserve back-compat by only returning the full callable name (including null-char) when the function actually exists (retval is TRUE and `$syntax_only` is FALSE).

Open to suggestions if someone can think of a cleaner way.

**EDIT: See nikic's comment below and new commit.**",https://api.github.com/repos/php/php-src/issues/2381,https://github.com/php/php-src/pull/2381,https://api.github.com/repos/php/php-src/pulls/2381,2017-02-11T05:10:52Z,2017-02-11T23:21:17Z,2017-02-11T23:16:53Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
369,3,207958904,2385,"If getrandom syscall is unavailable (ENOSYS), try to fallback on /dev/urandom",benjarobin,closed,,"getrandom() was introduced in version 3.17 of the Linux kernel.
The php package may be deployed on 3.10 kernel, try to be robust and fallback if we failed to use getrandom()

The ""faulty"" commit is 14c72cc5824d5fa472b79b7216a01be0918ccc5d",https://api.github.com/repos/php/php-src/issues/2385,https://github.com/php/php-src/pull/2385,https://api.github.com/repos/php/php-src/pulls/2385,2017-02-15T23:12:14Z,2017-03-16T18:41:12Z,2017-02-17T17:46:48Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
370,3,208279216,2388,Fix #50892 - Protected members of non-congruent children classes are visible,pmmaga,closed,,"Link for bugsnet: https://bugs.php.net/bug.php?id=50892

This behavior was introduced with a bug fix for a bug stating that the opposite should be true:
https://bugs.php.net/bug.php?id=37212",https://api.github.com/repos/php/php-src/issues/2388,https://github.com/php/php-src/pull/2388,https://api.github.com/repos/php/php-src/pulls/2388,2017-02-16T23:15:00Z,2017-02-22T06:55:01Z,2017-02-22T06:55:01Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
371,3,208385580,2389,Fixed #74099 - Memory leak with openssl_encrypt(),andrewnester,closed,,"Fix for https://bugs.php.net/bug.php?id=74099

Actually changes are following:
1) `(!enc || data_len > 0)` was changed to `(!enc || data_len >= 0)`
2) but `data_len` is unsigned that's why `data_len >= 0` is always `true` and condition was removed.",https://api.github.com/repos/php/php-src/issues/2389,https://github.com/php/php-src/pull/2389,https://api.github.com/repos/php/php-src/pulls/2389,2017-02-17T09:35:34Z,2017-02-21T21:17:29Z,2017-02-17T20:24:19Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
372,3,208606775,2391,Fix: gost-crypto hash incorrect if input data contains long 0xFF sequence,Grundik,closed,,"https://bugs.php.net/bug.php?id=73127
Problem was lying in calculations of Sum-block.",https://api.github.com/repos/php/php-src/issues/2391,https://github.com/php/php-src/pull/2391,https://api.github.com/repos/php/php-src/pulls/2391,2017-02-18T02:59:45Z,2017-02-24T22:25:32Z,2017-02-24T22:25:32Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
373,3,209332233,2395,Fix potential crash when setting invalid declare value,sgolemon,closed,,"Using a non-literal expression in a declare value can cause the
compiler to crash trying to turn that AST node into a usable zval.

There was an existing test for such values using 'encoding',
but that didn't crash because it's handled by the lexer
rather than being compiled.

Trying to use a non-literal with ticks reproduces the crash.",https://api.github.com/repos/php/php-src/issues/2395,https://github.com/php/php-src/pull/2395,https://api.github.com/repos/php/php-src/pulls/2395,2017-02-22T02:15:26Z,2017-03-01T01:20:43Z,2017-03-01T01:20:43Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
374,3,209596605,2396,Fix potential crash when setting invalid declare value,sgolemon,closed,,"Using a non-literal expression in a declare value can cause the
compiler to crash trying to turn that AST node into a usable zval.

There was an existing test for such values using 'encoding',
but that didn't crash because it's handled by the lexer
rather than being compiled.

Trying to use a non-literal with ticks reproduces the crash.",https://api.github.com/repos/php/php-src/issues/2396,https://github.com/php/php-src/pull/2396,https://api.github.com/repos/php/php-src/pulls/2396,2017-02-22T22:06:55Z,2017-03-01T01:20:28Z,2017-03-01T01:20:28Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
375,3,211400701,2402,Fixed #74058 - ArrayObject doesn't call offsetGet if access property of ArrayObject property.,andrewnester,closed,,Fix for https://bugs.php.net/bug.php?id=74058,https://api.github.com/repos/php/php-src/issues/2402,https://github.com/php/php-src/pull/2402,https://api.github.com/repos/php/php-src/pulls/2402,2017-03-02T14:06:52Z,2017-03-08T23:17:05Z,2017-03-08T23:17:05Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
376,3,213150773,2411,Fixed bug #73960,nikic,closed,,,https://api.github.com/repos/php/php-src/issues/2411,https://github.com/php/php-src/pull/2411,https://api.github.com/repos/php/php-src/pulls/2411,2017-03-09T20:11:00Z,2017-03-10T17:24:46Z,2017-03-10T17:24:29Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
377,3,216460129,2429,Fixed bug #74300,xKerman,closed,,fix for https://bugs.php.net/bug.php?id=74300 .,https://api.github.com/repos/php/php-src/issues/2429,https://github.com/php/php-src/pull/2429,https://api.github.com/repos/php/php-src/pulls/2429,2017-03-23T15:02:37Z,2017-03-23T22:21:47Z,2017-03-23T21:13:19Z,0,2017-03-25 15:21:26,2017-03-25 15:21:26
378,3,7988999,224,fix  bug 63392,xuzhi,closed,,"i delete these code if(time->relative.weekday == 0)time->relative.weekday == 7; these code cause bug 63392  , bug test  script blow
<?php

$dt = new DateTime(""2012-05-13"");
$dt->modify(""Sunday this week"");
var_dump($dt->format('r'));
## Expected result:

string(31) ""Sun, 13 May 2012 00:00:00 +0000""
## Actual result:

string(31) ""Sun, 20 May 2012 00:00:00 +0000""
",https://api.github.com/repos/php/php-src/issues/224,https://github.com/php/php-src/pull/224,https://api.github.com/repos/php/php-src/pulls/224,2012-10-31T03:49:21Z,2016-08-07T09:35:35Z,2016-08-07T09:35:35Z,0,2017-03-25 15:31:20,2017-03-25 15:31:20
379,3,24101836,542,Fix bug #54379 PDO_OCI: UTF-8 output gets truncated,gureedo,closed,,"Oracle docs defines three versions of utf8 encoding.
- AL32UTF8 and UTFE character can occupy up to 4 bytes.
- UTF8 character can occupy up to 6 bytes.
  Details here: http://docs.oracle.com/cd/B19306_01/server.102/b14225/ch6unicode.htm#i1006998 
  We can obtain maximum character size in bytes by calling OCINlsNumericInfoGet() and get current max character width. 
  Details here: http://docs.oracle.com/cd/B10501_01/server.920/a96529/ch8.htm#14288
",https://api.github.com/repos/php/php-src/issues/542,https://github.com/php/php-src/pull/542,https://api.github.com/repos/php/php-src/pulls/542,2013-12-11T11:46:28Z,2017-01-04T22:18:46Z,2017-01-04T22:18:39Z,0,2017-03-25 15:31:20,2017-03-25 15:31:20
380,3,29088930,620,Fix #44643: PDO-ODBC: bound parameters ignore explicit type definitions,billschaller,closed,,"This bug is also referenced in
[#44643](https://bugs.php.net/bug.php?id=44643)
pdo_odbc has had well-documented issues with parameterised queries accessing SQL Server for a long time. The issue is that when SQLDescribeParam does not return information about an input query parameter, pdo_odbc treats the parameter as a LONGVARCHAR or LONGVARBINARY. This patch modifies pdo_odbc to treat input parameters of less than 4000 characters in length as VARCHAR when the server does not return useful parameter information in response to the SQLDescribeParam call. This fixes behavior on SQL server, and shouldn't adversely affect behavior on other DBMS's, because the others for the most part return valid parameter info.
",https://api.github.com/repos/php/php-src/issues/620,https://github.com/php/php-src/pull/620,https://api.github.com/repos/php/php-src/pulls/620,2014-03-10T11:45:55Z,2017-01-11T04:34:11Z,2017-01-04T12:38:51Z,0,2017-03-25 15:31:20,2017-03-25 15:31:20
381,5,367414,20,Backbone.View.prototype.handleEvents missing var,fitzgen,closed,bug,"The title says it all ;)
",https://api.github.com/repos/jashkenas/backbone/issues/20,https://github.com/jashkenas/backbone/pull/20,https://api.github.com/repos/jashkenas/backbone/pulls/20,2010-10-18T01:27:40Z,2014-06-27T17:39:51Z,2010-10-18T08:30:15Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
382,5,369565,23,added underscore to the dependencies,tmpvar,closed,bug,"forgot this the first time around, it was a bit late ;)

To counter the point you made on my previous pull request: I have an honest to god use case for this on the server, which I'll be implementing this month and showing off at the next nyc.js if there is time.

Thanks!
",https://api.github.com/repos/jashkenas/backbone/issues/23,https://github.com/jashkenas/backbone/pull/23,https://api.github.com/repos/jashkenas/backbone/pulls/23,2010-10-19T01:48:15Z,2014-07-05T18:47:35Z,2010-10-19T08:52:47Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
383,5,369728,25,Use JSONP in the github demo,fitzgen,closed,bug,"I'm not sure how other browsers handle XHRs from `file:///`, but Chrome considers an XHR to `http://github.com` to be in violation of the Same Origin Policy. I had to change the demo to use JSONP to make it work.

Cheers,

Nick
",https://api.github.com/repos/jashkenas/backbone/issues/25,https://github.com/jashkenas/backbone/pull/25,https://api.github.com/repos/jashkenas/backbone/pulls/25,2010-10-19T04:41:41Z,2014-07-05T18:48:05Z,2010-10-19T21:32:21Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
384,5,415427,70,Remove duplicate backbone.localStorage docs,jasondavies,closed,bug,"This file is essentially identical to `backbone-localstorage.html` except it has a `.` instead of a `-` in the name. The one with the `-` is the one linked to from the other pages, so this one ought to be deleted.
",https://api.github.com/repos/jashkenas/backbone/issues/70,https://github.com/jashkenas/backbone/pull/70,https://api.github.com/repos/jashkenas/backbone/pulls/70,2010-11-12T17:25:06Z,2014-07-05T18:26:48Z,2010-11-12T17:28:20Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
385,5,433899,89,Fix and test for recursion error when saving from within a change callback,mkelly12,closed,bug,"Unless you pass the silent option to model.save() from within a change callback you will always get a recursion error. 

This is a small fix that avoids calling model.set() from within model.save() unless new attributes were actually passed to model.save(), which if done from within a change callback should rightly through a recursion error.
",https://api.github.com/repos/jashkenas/backbone/issues/89,https://github.com/jashkenas/backbone/pull/89,https://api.github.com/repos/jashkenas/backbone/pulls/89,2010-11-23T04:54:30Z,2014-07-05T18:19:41Z,2010-11-23T22:29:13Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
386,5,479360,145,Pass Collection#fetch options along to refresh,josh,closed,bug,"Super simple, passes Collection#fetch options along to refresh or add. Matches the behavior of Model#fetch.
",https://api.github.com/repos/jashkenas/backbone/issues/145,https://github.com/jashkenas/backbone/pull/145,https://api.github.com/repos/jashkenas/backbone/pulls/145,2010-12-17T02:15:35Z,2014-06-15T20:16:12Z,2010-12-18T00:29:03Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
387,5,480642,150,Closure scope,sstephenson,closed,bug,"Backbone uses `this` inside its closure to access jQuery or Zepto. If Backbone itself is wrapped inside another closure (say, a CommonJS module wrapper), it won't be able to access the global scope through `this`.

Here's a patch that passes along the current value of `this` to Backbone's closure.
",https://api.github.com/repos/jashkenas/backbone/issues/150,https://github.com/jashkenas/backbone/pull/150,https://api.github.com/repos/jashkenas/backbone/pulls/150,2010-12-17T18:47:53Z,2014-07-05T17:52:23Z,2010-12-18T02:59:29Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
388,5,504896,167,Fixes 166: Unsetting 'id' on a model should delete this.id attribute,reverie,closed,bug,"Pretty straightforward...
",https://api.github.com/repos/jashkenas/backbone/issues/167,https://github.com/jashkenas/backbone/pull/167,https://api.github.com/repos/jashkenas/backbone/pulls/167,2011-01-04T02:36:01Z,2014-06-30T21:08:09Z,2011-02-07T23:34:50Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
389,5,564522,204,id should be url encoded in url prototype,jo,closed,bug,"closes https://github.com/documentcloud/backbone/issuesearch?state=open&q=id#issue/203
",https://api.github.com/repos/jashkenas/backbone/issues/204,https://github.com/jashkenas/backbone/pull/204,https://api.github.com/repos/jashkenas/backbone/pulls/204,2011-01-31T16:13:43Z,2014-06-18T14:51:16Z,2011-02-08T04:02:54Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
390,5,576265,215,keep custom `sync` methods for a given model/collection scoped to `this`.,jed,closed,bug,,https://api.github.com/repos/jashkenas/backbone/issues/215,https://github.com/jashkenas/backbone/pull/215,https://api.github.com/repos/jashkenas/backbone/pulls/215,2011-02-04T23:17:46Z,2014-07-05T17:40:15Z,2011-02-07T23:19:32Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
391,5,578149,216,Models created using Collection.create should be validated.,KrisJordan,closed,bug,"The documentation implies that `Collection.create` ""Returns the model, or false if a validation error prevented the model from being created."" (http://documentcloud.github.com/backbone/#Collection-create)

This commit forces client-side validation in `Collection.create` by explicitly calling `set` rather than passing the attrs to the model's constructor which calls `set` with `{silent:true}`.
",https://api.github.com/repos/jashkenas/backbone/issues/216,https://github.com/jashkenas/backbone/pull/216,https://api.github.com/repos/jashkenas/backbone/pulls/216,2011-02-06T06:19:54Z,2014-06-25T08:21:29Z,2011-02-06T13:49:52Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
392,5,638671,255,Fix for escapeHTML recognising &#***; and &#x***;,DmitryBaranovskiy,closed,bug,,https://api.github.com/repos/jashkenas/backbone/issues/255,https://github.com/jashkenas/backbone/pull/255,https://api.github.com/repos/jashkenas/backbone/pulls/255,2011-03-01T21:13:48Z,2014-07-05T17:27:36Z,2011-03-02T05:17:55Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
393,5,645280,258,Fixed up the documentation and tests cases for how isNew handles negative ids,twobitfool,closed,bug,"Note: I did not update the docco docs, but I'm more than happy to.
",https://api.github.com/repos/jashkenas/backbone/issues/258,https://github.com/jashkenas/backbone/pull/258,https://api.github.com/repos/jashkenas/backbone/pulls/258,2011-03-03T22:48:23Z,2014-07-05T15:51:01Z,2011-07-05T13:42:19Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
394,5,649915,262,Escape single quotes as well,alanhogan,closed,bug,"When single quotes are used for attribute values, user input containing unescaped single quotes cannot be trusted. 

XSS Demo: http://jsfiddle.net/wEzNJ/

[Previous comment on this topic](https://github.com/documentcloud/backbone/commit/0cdc525961d3fa98e810ffae6bcc8e3838e36d93)
",https://api.github.com/repos/jashkenas/backbone/issues/262,https://github.com/jashkenas/backbone/pull/262,https://api.github.com/repos/jashkenas/backbone/pulls/262,2011-03-06T02:53:54Z,2014-07-05T16:41:05Z,2011-05-26T20:47:17Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
395,5,683034,274,Comment fix,jimmydo,closed,bug,"Hello,

I fixed a minor error in the Backbone comments. The original comment seemed to imply that `child.prototype.constructor` would influence the behavior of `instanceof`, but it does not. The result of `instanceof` is determined by the object stored in child.prototype.

Thanks!

Jimmy
",https://api.github.com/repos/jashkenas/backbone/issues/274,https://github.com/jashkenas/backbone/pull/274,https://api.github.com/repos/jashkenas/backbone/pulls/274,2011-03-17T21:38:56Z,2014-07-05T17:21:02Z,2011-03-21T15:00:26Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
396,5,772670,320,Fix custom events on models inside collections,ncr,closed,bug,"Hey,

Two commits: first adds failing test for issue #319, second makes it pass.

Cheers, 
Jacek
",https://api.github.com/repos/jashkenas/backbone/issues/320,https://github.com/jashkenas/backbone/pull/320,https://api.github.com/repos/jashkenas/backbone/pulls/320,2011-04-15T07:45:27Z,2014-07-05T17:17:30Z,2011-04-18T14:43:20Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
397,5,1385619,552,unset properties not being returned by changedAttributes,spmason,closed,bug,"Hi there,

It more or less says it in the title - after calling unset the unset attributes are not returned from calls to changedAttributes.

Attached are my two commits to test for & fix this bug.

Thanks,
Steve
",https://api.github.com/repos/jashkenas/backbone/issues/552,https://github.com/jashkenas/backbone/pull/552,https://api.github.com/repos/jashkenas/backbone/pulls/552,2011-08-11T07:58:54Z,2014-06-30T21:15:11Z,2011-10-29T17:12:38Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
398,5,1427415,565,clear maintains id and id attribute,braddunbar,closed,bug,"Model#clear removes all attributes, while maintaining `model.id`.  `attributes.id` should be maintained with `model.id` and the docs should reflect this.
",https://api.github.com/repos/jashkenas/backbone/issues/565,https://github.com/jashkenas/backbone/pull/565,https://api.github.com/repos/jashkenas/backbone/pulls/565,2011-08-17T23:53:19Z,2014-06-15T14:56:15Z,2011-11-23T22:32:17Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
399,5,1462517,575,The attributes argument defaults to an empty object if the Backbone.View ,basketofsoftkittens,closed,bug,"The attributes argument defaults to an empty object if the Backbone.View is instantiated without attributes. Trying to set an empty object as attributes of an element gives an error in jQuery 1.5.2 (only one tested)
",https://api.github.com/repos/jashkenas/backbone/issues/575,https://github.com/jashkenas/backbone/pull/575,https://api.github.com/repos/jashkenas/backbone/pulls/575,2011-08-23T00:18:46Z,2014-07-05T15:23:40Z,2011-08-24T16:32:46Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
400,5,2087412,693,unset attributes should show up in changedAttributes - tidying up current pull request.,iros,closed,bug,"Tidying up the unset changedAttributes looping. Replacing void 0 with undefined.
",https://api.github.com/repos/jashkenas/backbone/issues/693,https://github.com/jashkenas/backbone/pull/693,https://api.github.com/repos/jashkenas/backbone/pulls/693,2011-10-29T15:53:50Z,2014-06-19T18:00:53Z,2011-10-29T17:29:40Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
401,5,2173982,729,Inclusion of a context parameter to unbind method,krange,closed,bug,"Update to unbind method to allow a context parameter. This fixes an issue where bindings aren't removed correctly where 2 instances of the same class listening to the a single instances' trigger event. When unbinding from the second instance, unbind method actually unbinds the first registered instance. Example of the error below:

```
var DispatchModel = Backbone.Model.extend({
});

var RespondModel = Backbone.Model.extend({
  defaults: {
    dispatchModel: undefined
  },

  initialize: function () {
    var dispatchModel = this.get('dispatchModel');
    dispatchModel.bind('change', this._onDispatchChange, this);
  },

  dispose: function () {
     var dispatchModel = this.get('dispatchModel');
     dispatchModel.unbind('change', this._onDispatchChange);
  },

  _onDispatchChange: function () {
  }
});

var respond1Model, respond2Model, dispatchModel;
dispatchModel = new DispatchModel();
respond1Model = new RespondModel({dispatchModel: dispatchModel});
respond2Model = new RespondModel({dispatchModel: dispatchModel});

respond2Model.dispose();
console.log(dispatchModel._callbacks);
```
",https://api.github.com/repos/jashkenas/backbone/issues/729,https://github.com/jashkenas/backbone/pull/729,https://api.github.com/repos/jashkenas/backbone/pulls/729,2011-11-08T13:05:29Z,2014-06-13T22:57:46Z,2012-01-12T23:27:29Z,0,2017-03-25 22:59:54,2017-03-25 22:59:54
402,1,216256374,10060,[Qt] Ensure an item exists on the rpcconsole stack before adding,achow101,closed,Bug,"Ensures that there is an item on the rpcconsole stack before adding something to the current stack so that a segmentation fault does not occur.

Currently Bitcoin Core will just crash if there happens to be a newline somewhere in the command followed by some non-whitespace characters which are followed by a space. This causes a segfault by attempting to get the current stack from the empty stack vector. This fix ensures that that current stack always exists so that the segfault does not happen.

The crashing behavior can be tested by using this command in the rpcconsole:
```
decoderawtransaction 01000000 03e7a6f3 a93af3ae 49518cbf 8600b799 b04a8b8a ae5145f0 b25df06e 
  175d472a a
```
(copy and paste it as one line)",https://api.github.com/repos/bitcoin/bitcoin/issues/10060,https://github.com/bitcoin/bitcoin/pull/10060,https://api.github.com/repos/bitcoin/bitcoin/pulls/10060,2017-03-23T01:10:09Z,2017-03-27T07:56:13Z,2017-03-27T07:56:13Z,112143683,2017-03-27 14:03:09,2017-03-27 14:03:22
